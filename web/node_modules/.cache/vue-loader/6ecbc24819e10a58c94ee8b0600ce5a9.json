{"remainingRequest":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\src\\views\\pages\\map\\Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\src\\views\\pages\\map\\Map.vue","mtime":1580695090568},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1579332188909},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1579332241739}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {\r\n  createProj,\r\n  addProj,\r\n  findPointOnSurface,\r\n  createStyle,\r\n  createMultiPointGeom,\r\n  loadingBBox\r\n} from \"vuelayers/lib/ol-ext\";\r\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\r\nconst easeInOut = t => 1 - Math.pow(1 - t, 3);\r\nimport service from \"@/service/service\";\r\nexport default {\r\n  components:{\r\n     VuePerfectScrollbar\r\n  },\r\n  data() {\r\n\r\n    return {\r\n      infos:[],\r\n      show: true,\r\n      fullscreen:false,\r\n      isFuhocctv: false,\r\n      fuhoConfig: {},\r\n      data:{},\r\n      zoom: 12,\r\n      center: service.center,\r\n      marker_post: service.center,\r\n      rotation: 0,\r\n      devices: [],\r\n      geolocPosition: undefined,\r\n      channels:[],\r\n      activeitem: 0,\r\n      \r\n      settings: {\r\n                height:200,\r\n                maxScrollbarLength: 3,\r\n                wheelSpeed: 0.30,\r\n            },\r\n      url:\r\n        \"http://10.255.246.34:8080/DeeMap2_2020/wms?customer_key=1xwg5CAuhFz8z2Rw\",\r\n      layerName: \"0\",\r\n      matrixSet: \"EPSG:900913\",\r\n      format: \"image/png\",\r\n      styleName: \"default\",\r\n      LAYERS:\r\n        localStorage.getItem(\"lang\") == \"EN\"\r\n          ? \"DeeMap2_THA_Map_EN\"\r\n          : \"DeeMap2_THA_Map_Night\",\r\n      attribution:\r\n        'Tiles Â© <a href=\"https://services.arcgisonline.com/arcgis/rest/' +\r\n        'services/Demographics/USA_Population_Density/MapServer/\">ArcGIS</a>',\r\n      activeItem: \"\",\r\n      params: {\r\n        FORMAT: \"image/png8\",\r\n        VERSION: \"1.1.1\",\r\n        SRS: \"EPSG:900913\",\r\n        TILES: true\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    this.getDevice();\r\n  },\r\n  methods: {\r\n    \r\n    viewVideo(channel){\r\n      var url=(this.fuhoConfig.host.indexOf('http')>-1?this.fuhoConfig.host:('http://'+this.fuhoConfig.host))+'/live/'+this.fuhoConfig.device_id+'@'+Math.pow(2,channel-1)+'/'+this.fuhoConfig.username+'/'+this.fuhoConfig.password;\r\n      console.log(url);\r\n    },\r\n    onClick:async function(evt) {\r\n      var { pixel } = evt;\r\n      let hit = this.$refs.map.forEachFeatureAtPixel(pixel, x => {\r\n        let temp = x.getProperties();\r\n        return temp.index;\r\n      });\r\n      this.devices = this.devices.map(x => {\r\n        x.properties.show = false;\r\n        return x;\r\n      });\r\n      if (hit) {\r\n        // console.log(hit);\r\n        let filter = this.devices.map(x => x.properties.index).indexOf(hit);\r\n        var device = this.devices[filter];\r\n        console.log(device);\r\n        this.devices[filter].properties.show = true;\r\n        switch (device.device_type_id) {\r\n          case \"DT00001\":\r\n            console.log(\"cctv\");\r\n            this.isFuhocctv = true;\r\n            try {\r\n              this.fuhoConfig = JSON.parse(device.device_config);\r\n              var deviceInforResult=await this.$service.postData('device/getDeviceGkInfo',this.fuhoConfig);\r\n\r\n              if(deviceInforResult.code==1){\r\n                this.channels=[...Array.from(Array(deviceInforResult.data.channel).keys())].map(x=>Math.pow(2,x));\r\n                this.fuhoConfig.data=deviceInforResult.data;\r\n                var data={...deviceInforResult.data};\r\n                this.data={...data}\r\n                console.log(data);\r\n                this.infos=[\r\n                  {\r\n                    name:\"Device ID\",\r\n                    value:data.deviceid\r\n                  },{\r\n                    name:\"Status\",\r\n                    value:data.status==1?'online':'offline'\r\n                  },{\r\n                    name:\"Number of Channel\",\r\n                    value:data.channel\r\n                  }\r\n                ]\r\n              }\r\n            } catch (e) {\r\n              this.fuhoConfig = {};\r\n            }\r\n            break;\r\n          default:\r\n            this.isFuhocctv = false;\r\n        }\r\n      }\r\n    },\r\n    toggle () {\r\n       this.$refs['fullscreen'].toggle() ;\r\n    },\r\n    fullscreenChange (fullscreen) {\r\n      this.fullscreen = fullscreen\r\n    },\r\n    onMapPointerMove: function({ pixel }) {\r\n      let hit = this.$refs.map.forEachFeatureAtPixel(pixel, x => {\r\n        let temp = x.getProperties();\r\n        return temp.index;\r\n      });\r\n\r\n      this.devices = this.devices.map(x => {\r\n        x.properties.show = false;\r\n        return x;\r\n      });\r\n      if (hit) {\r\n        console.log(hit);\r\n        let filter = this.devices.map(x => x.properties.index).indexOf(hit);\r\n        this.devices[filter].properties.show = true;\r\n      }\r\n    },\r\n    onMarkerClick() {\r\n      this.$swal(\"clicked\", \"\", \"success\");\r\n    },\r\n    async getDevice() {\r\n      var deviceResponse = await this.$service.postData(\"device/getDevice\", {});\r\n\r\n      this.devices = deviceResponse.data.map((item, index) => {\r\n        item.show = false;\r\n        item.properties = { index: index + 1 };\r\n        return item;\r\n      });\r\n      // this.devices=[{...this.devices[0]},...this.devices]\r\n    },\r\n    pointOnSurface: findPointOnSurface,\r\n    onMapPostCompose({ vectorContext, frameState }) {\r\n      // document.querySelector('canvas').style.filter=\"invert(90%)\"\r\n      if (!this.$refs.marker || !this.$refs.marker.$feature) return;\r\n\r\n      const feature = this.$refs.marker.$feature;\r\n      if (!feature.getGeometry() || !feature.getStyle()) return;\r\n\r\n      const flashGeom = feature.getGeometry().clone();\r\n      const duration = feature.get(\"duration\");\r\n      const elapsed = frameState.time - feature.get(\"start\");\r\n      const elapsedRatio = elapsed / duration;\r\n      const radius = easeInOut(elapsedRatio) * 35 + 5;\r\n      const opacity = easeInOut(1 - elapsedRatio);\r\n      const fillOpacity = easeInOut(0.5 - elapsedRatio);\r\n\r\n      vectorContext.setStyle(\r\n        createStyle({\r\n          imageRadius: radius,\r\n          fillColor: [119, 170, 203, fillOpacity],\r\n          strokeColor: [119, 170, 203, opacity],\r\n          strokeWidth: 2 + opacity\r\n        })\r\n      );\r\n\r\n      vectorContext.drawGeometry(flashGeom);\r\n      vectorContext.setStyle(feature.getStyle()(feature)[0]);\r\n      vectorContext.drawGeometry(feature.getGeometry());\r\n\r\n      if (elapsed > duration) {\r\n        feature.set(\"start\", Date.now());\r\n      }\r\n\r\n      this.$refs.map.render();\r\n    }\r\n  },\r\n  watch: {\r\n    \"$store.state.reduce\"(val) {\r\n      console.log(val);\r\n      setTimeout(() => {\r\n        this.$refs.map.refresh();\r\n      }, 1000);\r\n    },\r\n    \"$store.state.windowWidth\"(val) {\r\n      console.log(val);\r\n      this.$refs.map.refresh();\r\n    },\r\n    // fullscreen(val){\r\n    //   setTimeout(()=>{\r\n    //     // alert(11);\r\n    //     this.$ref.map.refresh();\r\n    //   },5000)\r\n    // }\r\n  }\r\n};\r\n",{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"Map.vue","sourceRoot":"src/views/pages/map","sourcesContent":["<template>\r\n  <div class=\"w-full\" >\r\n    <ul class=\"mb-5\">\r\n      <li\r\n       \r\n        class=\"flex justify-between py-3 px-6 border d-theme-border-grey-light border-solid\"\r\n      >\r\n        <span class=\"flex items-center\">\r\n          <span class=\"inline-block h-3 w-3 rounded-full mr-2\" :class=\"`bg-green`\"></span>\r\n          <span class=\"font-semibold\">AAAAA</span>\r\n        </span>\r\n        <span> 30</span>\r\n      </li>\r\n    </ul>\r\n    <div  style=\"position:relative;margin:0;padding:0;\">\r\n      <vl-map\r\n        :load-tiles-while-animating=\"true\"\r\n        ref=\"map\"\r\n        :load-tiles-while-interacting=\"true\"\r\n        @click=\"onClick\"\r\n        data-projection=\"EPSG:4326\"\r\n        :style=\"fullscreen?'height: 100vh;':'height: 50vh;'\"\r\n        @postcompose=\"onMapPostCompose\"\r\n        @pointermove=\"onMapPointerMove\"\r\n      >\r\n        <vl-view :zoom.sync=\"zoom\" :center.sync=\"center\" :rotation.sync=\"rotation\"></vl-view>\r\n\r\n        <vl-layer-tile id=\"osm\">\r\n          <vl-source-osm></vl-source-osm>\r\n        </vl-layer-tile>\r\n        <vl-layer-tile id=\"osm\">\r\n          <vl-source-osm></vl-source-osm>\r\n        </vl-layer-tile>\r\n        <vl-layer-tile id=\"wms\">\r\n          <vl-source-wms\r\n            :extParams=\"params\"\r\n            :url=\"url\"\r\n            :style-name=\"styleName\"\r\n            :matrix-set=\"matrixSet\"\r\n            :format=\"format\"\r\n            :layers=\"LAYERS\"\r\n          ></vl-source-wms>\r\n        </vl-layer-tile>\r\n\r\n        <vl-feature v-for=\"(item,index) of devices\" :key=\"index\" :properties=\"item.properties\">\r\n          <template slot-scope=\"feature\">\r\n            <vl-geom-point :coordinates=\"[item.lon,item.lat]\"></vl-geom-point>\r\n            <vl-style-box>\r\n              <vl-style-icon\r\n                :src=\"item.device_icon\"\r\n                :scale=\"item.size\"\r\n                :anchor=\"[item.anchor_x,item.anchor_y]\"\r\n                :size=\"[128, 128]\"\r\n              ></vl-style-icon>\r\n            </vl-style-box>\r\n            <vl-overlay v-if=\"item.properties.show\" :position=\"[item.lon,item.lat]\">\r\n              <template slot-scope=\"scope\">\r\n                <div class=\"overlay-content\">\r\n                  <vx-card title=\"Event Alert\">Your device is online currently {{index}}</vx-card>\r\n                </div>\r\n              </template>\r\n            </vl-overlay>\r\n          </template>\r\n        </vl-feature>\r\n        \r\n      </vl-map>\r\n    \r\n    </div>\r\n    <div class=\"w-full\" v-if=\"isFuhocctv\">\r\n      <div class=\"vx-row mt-10\">\r\n        <div class=\"vx-card vx-col w-full md:w-3/4\">\r\n         <div class=\"  w-full todo-content-scroll-area\" :settings=\"settings\" ref=\"data_list\" v-if='data.status==1'>\r\n           <div :style=\"[{width:(300*channels.length)+'px'}]\">\r\n             <div class=\"vx-row pl-4 pt-5\">\r\n            <div @click=\"viewVideo(1)\" v-for=\"(item,index) of channels\" :key=\"index\">\r\n              <iframe\r\n                class=\"embed\"\r\n                id=\"embed\"\r\n               allowfullscreen\r\n                :src=\"(fuhoConfig.host.indexOf('http')>-1?fuhoConfig.host:('http://'+fuhoConfig.host))+'/live/'+fuhoConfig.device_id+'@'+item+'/'+fuhoConfig.username+'/'+fuhoConfig.password\"\r\n              ></iframe>\r\n            </div>\r\n           \r\n            <br><br><br>\r\n          </div>\r\n           </div>\r\n         </div>\r\n        </div>\r\n        <div class=\"vx-col w-full md:w-1/4\" >\r\n          <div class=\"vx-card\" style=\"height:210px\">\r\n            <table style=\"width:100%\">\r\n              <tr v-for=\"(tr, index) in infos\" :key=\"index\">\r\n                  <td style=\"width:40%;padding:20px\">{{tr.name}}</td>\r\n                  <td style=\"padding:20px\">{{tr.value}}</td>\r\n              </tr>\r\n            </table>\r\n            <!-- <vs-table :data=\"infos\">\r\n\r\n           \r\n\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td :data=\"data[indextr].name\" style=\"width:40%\">\r\n                        {{tr.name}}\r\n                    </vs-td>\r\n                    <vs-td :data=\"data[indextr].value\">\r\n                        {{data[indextr].value}}\r\n                    </vs-td>\r\n                </vs-tr>\r\n            </template>\r\n        </vs-table> -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport {\r\n  createProj,\r\n  addProj,\r\n  findPointOnSurface,\r\n  createStyle,\r\n  createMultiPointGeom,\r\n  loadingBBox\r\n} from \"vuelayers/lib/ol-ext\";\r\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\r\nconst easeInOut = t => 1 - Math.pow(1 - t, 3);\r\nimport service from \"@/service/service\";\r\nexport default {\r\n  components:{\r\n     VuePerfectScrollbar\r\n  },\r\n  data() {\r\n\r\n    return {\r\n      infos:[],\r\n      show: true,\r\n      fullscreen:false,\r\n      isFuhocctv: false,\r\n      fuhoConfig: {},\r\n      data:{},\r\n      zoom: 12,\r\n      center: service.center,\r\n      marker_post: service.center,\r\n      rotation: 0,\r\n      devices: [],\r\n      geolocPosition: undefined,\r\n      channels:[],\r\n      activeitem: 0,\r\n      \r\n      settings: {\r\n                height:200,\r\n                maxScrollbarLength: 3,\r\n                wheelSpeed: 0.30,\r\n            },\r\n      url:\r\n        \"http://10.255.246.34:8080/DeeMap2_2020/wms?customer_key=1xwg5CAuhFz8z2Rw\",\r\n      layerName: \"0\",\r\n      matrixSet: \"EPSG:900913\",\r\n      format: \"image/png\",\r\n      styleName: \"default\",\r\n      LAYERS:\r\n        localStorage.getItem(\"lang\") == \"EN\"\r\n          ? \"DeeMap2_THA_Map_EN\"\r\n          : \"DeeMap2_THA_Map_Night\",\r\n      attribution:\r\n        'Tiles Â© <a href=\"https://services.arcgisonline.com/arcgis/rest/' +\r\n        'services/Demographics/USA_Population_Density/MapServer/\">ArcGIS</a>',\r\n      activeItem: \"\",\r\n      params: {\r\n        FORMAT: \"image/png8\",\r\n        VERSION: \"1.1.1\",\r\n        SRS: \"EPSG:900913\",\r\n        TILES: true\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    this.getDevice();\r\n  },\r\n  methods: {\r\n    \r\n    viewVideo(channel){\r\n      var url=(this.fuhoConfig.host.indexOf('http')>-1?this.fuhoConfig.host:('http://'+this.fuhoConfig.host))+'/live/'+this.fuhoConfig.device_id+'@'+Math.pow(2,channel-1)+'/'+this.fuhoConfig.username+'/'+this.fuhoConfig.password;\r\n      console.log(url);\r\n    },\r\n    onClick:async function(evt) {\r\n      var { pixel } = evt;\r\n      let hit = this.$refs.map.forEachFeatureAtPixel(pixel, x => {\r\n        let temp = x.getProperties();\r\n        return temp.index;\r\n      });\r\n      this.devices = this.devices.map(x => {\r\n        x.properties.show = false;\r\n        return x;\r\n      });\r\n      if (hit) {\r\n        // console.log(hit);\r\n        let filter = this.devices.map(x => x.properties.index).indexOf(hit);\r\n        var device = this.devices[filter];\r\n        console.log(device);\r\n        this.devices[filter].properties.show = true;\r\n        switch (device.device_type_id) {\r\n          case \"DT00001\":\r\n            console.log(\"cctv\");\r\n            this.isFuhocctv = true;\r\n            try {\r\n              this.fuhoConfig = JSON.parse(device.device_config);\r\n              var deviceInforResult=await this.$service.postData('device/getDeviceGkInfo',this.fuhoConfig);\r\n\r\n              if(deviceInforResult.code==1){\r\n                this.channels=[...Array.from(Array(deviceInforResult.data.channel).keys())].map(x=>Math.pow(2,x));\r\n                this.fuhoConfig.data=deviceInforResult.data;\r\n                var data={...deviceInforResult.data};\r\n                this.data={...data}\r\n                console.log(data);\r\n                this.infos=[\r\n                  {\r\n                    name:\"Device ID\",\r\n                    value:data.deviceid\r\n                  },{\r\n                    name:\"Status\",\r\n                    value:data.status==1?'online':'offline'\r\n                  },{\r\n                    name:\"Number of Channel\",\r\n                    value:data.channel\r\n                  }\r\n                ]\r\n              }\r\n            } catch (e) {\r\n              this.fuhoConfig = {};\r\n            }\r\n            break;\r\n          default:\r\n            this.isFuhocctv = false;\r\n        }\r\n      }\r\n    },\r\n    toggle () {\r\n       this.$refs['fullscreen'].toggle() ;\r\n    },\r\n    fullscreenChange (fullscreen) {\r\n      this.fullscreen = fullscreen\r\n    },\r\n    onMapPointerMove: function({ pixel }) {\r\n      let hit = this.$refs.map.forEachFeatureAtPixel(pixel, x => {\r\n        let temp = x.getProperties();\r\n        return temp.index;\r\n      });\r\n\r\n      this.devices = this.devices.map(x => {\r\n        x.properties.show = false;\r\n        return x;\r\n      });\r\n      if (hit) {\r\n        console.log(hit);\r\n        let filter = this.devices.map(x => x.properties.index).indexOf(hit);\r\n        this.devices[filter].properties.show = true;\r\n      }\r\n    },\r\n    onMarkerClick() {\r\n      this.$swal(\"clicked\", \"\", \"success\");\r\n    },\r\n    async getDevice() {\r\n      var deviceResponse = await this.$service.postData(\"device/getDevice\", {});\r\n\r\n      this.devices = deviceResponse.data.map((item, index) => {\r\n        item.show = false;\r\n        item.properties = { index: index + 1 };\r\n        return item;\r\n      });\r\n      // this.devices=[{...this.devices[0]},...this.devices]\r\n    },\r\n    pointOnSurface: findPointOnSurface,\r\n    onMapPostCompose({ vectorContext, frameState }) {\r\n      // document.querySelector('canvas').style.filter=\"invert(90%)\"\r\n      if (!this.$refs.marker || !this.$refs.marker.$feature) return;\r\n\r\n      const feature = this.$refs.marker.$feature;\r\n      if (!feature.getGeometry() || !feature.getStyle()) return;\r\n\r\n      const flashGeom = feature.getGeometry().clone();\r\n      const duration = feature.get(\"duration\");\r\n      const elapsed = frameState.time - feature.get(\"start\");\r\n      const elapsedRatio = elapsed / duration;\r\n      const radius = easeInOut(elapsedRatio) * 35 + 5;\r\n      const opacity = easeInOut(1 - elapsedRatio);\r\n      const fillOpacity = easeInOut(0.5 - elapsedRatio);\r\n\r\n      vectorContext.setStyle(\r\n        createStyle({\r\n          imageRadius: radius,\r\n          fillColor: [119, 170, 203, fillOpacity],\r\n          strokeColor: [119, 170, 203, opacity],\r\n          strokeWidth: 2 + opacity\r\n        })\r\n      );\r\n\r\n      vectorContext.drawGeometry(flashGeom);\r\n      vectorContext.setStyle(feature.getStyle()(feature)[0]);\r\n      vectorContext.drawGeometry(feature.getGeometry());\r\n\r\n      if (elapsed > duration) {\r\n        feature.set(\"start\", Date.now());\r\n      }\r\n\r\n      this.$refs.map.render();\r\n    }\r\n  },\r\n  watch: {\r\n    \"$store.state.reduce\"(val) {\r\n      console.log(val);\r\n      setTimeout(() => {\r\n        this.$refs.map.refresh();\r\n      }, 1000);\r\n    },\r\n    \"$store.state.windowWidth\"(val) {\r\n      console.log(val);\r\n      this.$refs.map.refresh();\r\n    },\r\n    // fullscreen(val){\r\n    //   setTimeout(()=>{\r\n    //     // alert(11);\r\n    //     this.$ref.map.refresh();\r\n    //   },5000)\r\n    // }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\n.map-panel {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  width: 22em;\r\n}\r\n.panel-content {\r\n  background: #fff;\r\n  border-radius: 6px;\r\n  -webkit-box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1),\r\n    0 0 0 1px rgba(10, 10, 10, 0.1);\r\n  box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\r\n  color: #4a4a4a;\r\n  display: block;\r\n  height: 500px;\r\n  padding: 1.25rem;\r\n}\r\n.fix-nav {\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 0;\r\n  padding: 20px;\r\n  width: 100%;\r\n}\r\n.overlay-content {\r\n  background: black;\r\n}\r\n\r\ndiv.frame-contain {\r\n  z-index: -1;\r\n  height: 200px;\r\n  width: 300px;\r\n  overflow-x: hidden;\r\n  overflow: hidden;\r\n}\r\n\r\niframe.embed {\r\n  width: 300px;\r\n  height: 200px;\r\n  // pointer-events: none;\r\n  // margin-left: -24%;\r\n  // margin-top: -41px;\r\n  /* margin-bottom: 10vh; */\r\n}\r\niframe,\r\nvideo {\r\n  cursor: pointer;\r\n}\r\n.fade-enter-active, .fade-leave-active {\r\n  transition: opacity .5s;\r\n}\r\n.fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {\r\n  opacity: 0;\r\n}\r\n.todo-content-scroll-area{\r\n  overflow-x:scroll;\r\n\r\n}\r\n ::-webkit-scrollbar {\r\n    width: 10px;\r\n    height: 10px;\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0); \r\n    -webkit-border-radius: 10px;\r\n    border-radius: 10px;\r\n}\r\n /*add a shadow to the scrollbar here*/\r\n::-webkit-scrollbar-track {\r\n    -webkit-box-shadow: inset 0 0 0px rgba(0,0,0,0); \r\n    -webkit-border-radius: 10px;\r\n    border-radius: 10px;\r\n}\r\n/*this is the little scrolly dealio in the bar*/ \r\n::-webkit-scrollbar-thumb {\r\n    border-radius: 10px;\r\n    background: #4353ff;\r\n    height: 3px;\r\n}\r\n/*nobody needs this little scrollbar corner, I mean really, get rid of it haha*/  \r\n  ::-webkit-scrollbar-corner       { display: none; height: 0px; width: 0px; }\r\n</style>"]}]}