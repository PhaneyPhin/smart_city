{"remainingRequest":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\src\\views\\ui-elements\\ag-grid-table\\AgGridTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\src\\views\\ui-elements\\ag-grid-table\\AgGridTable.vue","mtime":1579316698000},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1579332236814},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1579332188909},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1579332241739}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { AgGridVue } from \"ag-grid-vue\"\r\nimport contacts from './data.json'\r\nconst VxTour = () => import('@/components/VxTour.vue')\r\n\r\nimport '@/assets/scss/vuesax/extraComponents/agGridStyleOverride.scss'\r\n\r\nexport default {\r\n  components: {\r\n    AgGridVue,\r\n    VxTour,\r\n  },\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      gridOptions: {},\r\n      maxPageNumbers: 7,\r\n      gridApi: null,\r\n      defaultColDef: {\r\n        sortable: true,\r\n        editable: true,\r\n        resizable: true,\r\n        suppressMenu: true\r\n      },\r\n      columnDefs: [\r\n        {\r\n          headerName: 'First Name',\r\n          field: 'firstname',\r\n          width: 175,\r\n          filter: true,\r\n          checkboxSelection: true,\r\n          headerCheckboxSelectionFilteredOnly: true,\r\n          headerCheckboxSelection: true,\r\n        },\r\n        {\r\n          headerName: 'Last Name',\r\n          field: 'lastname',\r\n          filter: true,\r\n          width: 175,\r\n        },\r\n        {\r\n          headerName: 'Email',\r\n          field: 'email',\r\n          filter: true,\r\n          width: 250,\r\n          pinned: 'left'\r\n        },\r\n        {\r\n          headerName: 'Company',\r\n          field: 'company',\r\n          filter: true,\r\n          width: 250,\r\n        },\r\n        {\r\n          headerName: 'City',\r\n          field: 'city',\r\n          filter: true,\r\n          width: 150,\r\n        },\r\n        {\r\n          headerName: 'Country',\r\n          field: 'country',\r\n          filter: true,\r\n          width: 150,\r\n        },\r\n        {\r\n          headerName: 'State',\r\n          field: 'state',\r\n          filter: true,\r\n          width: 100,\r\n        },\r\n        {\r\n          headerName: 'Zip',\r\n          field: 'zip',\r\n          filter: 'agNumberColumnFilter',\r\n          width: 100,\r\n        },\r\n        {\r\n          headerName: 'Followers',\r\n          field: 'followers',\r\n          filter: \"agNumberColumnFilter\",\r\n          width: 125,\r\n        },\r\n      ],\r\n      contacts: contacts,\r\n    }\r\n  },\r\n  watch: {\r\n    '$store.state.windowWidth'(val) {\r\n      if(val <= 576) {\r\n        this.maxPageNumbers = 4;\r\n        this.gridOptions.columnApi.setColumnPinned('email', null);\r\n      }\r\n      else this.gridOptions.columnApi.setColumnPinned('email', 'left')\r\n    }\r\n  },\r\n  computed: {\r\n    paginationPageSize() {\r\n      if(this.gridApi) return this.gridApi.paginationGetPageSize()\r\n      else return 50\r\n    },\r\n    totalPages() {\r\n      if(this.gridApi) return this.gridApi.paginationGetTotalPages()\r\n      else return 0\r\n    },\r\n    currentPage: {\r\n      get() {\r\n        if(this.gridApi) return this.gridApi.paginationGetCurrentPage() + 1\r\n        else return 1\r\n      },\r\n      set(val) {\r\n        this.gridApi.paginationGoToPage(val - 1);\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    updateSearchQuery(val) {\r\n      this.gridApi.setQuickFilter(val);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.gridApi = this.gridOptions.api;\r\n  }\r\n}\r\n\r\n",{"version":3,"sources":["AgGridTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"AgGridTable.vue","sourceRoot":"src/views/ui-elements/ag-grid-table","sourcesContent":["<!-- =========================================================================================\r\n    File Name: AgGridTable.vue\r\n    Description: Ag Grid table\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n    Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n  <div id=\"ag-grid-demo\">\r\n    <vx-card>\r\n\r\n      <!-- TABLE ACTION ROW -->\r\n      <div class=\"flex flex-wrap justify-between items-center\">\r\n\r\n        <!-- ITEMS PER PAGE -->\r\n        <div class=\"mb-4 md:mb-0 mr-4 ag-grid-table-actions-left\">\r\n          <vs-dropdown vs-trigger-click class=\"cursor-pointer\">\r\n            <div class=\"p-4 border border-solid d-theme-border-grey-light rounded-full d-theme-dark-bg cursor-pointer flex items-center justify-between font-medium\">\r\n              <span class=\"mr-2\">{{ currentPage * paginationPageSize - (paginationPageSize - 1) }} - {{ contacts.length - currentPage * paginationPageSize > 0 ? currentPage * paginationPageSize : contacts.length }} of {{ contacts.length }}</span>\r\n              <feather-icon icon=\"ChevronDownIcon\" svgClasses=\"h-4 w-4\" />\r\n            </div>\r\n            <!-- <vs-button class=\"btn-drop\" type=\"line\" color=\"primary\" icon-pack=\"feather\" icon=\"icon-chevron-down\"></vs-button> -->\r\n            <vs-dropdown-menu>\r\n\r\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(20)\">\r\n                <span>20</span>\r\n              </vs-dropdown-item>\r\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(50)\">\r\n                <span>50</span>\r\n              </vs-dropdown-item>\r\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(100)\">\r\n                <span>100</span>\r\n              </vs-dropdown-item>\r\n              <vs-dropdown-item @click=\"gridApi.paginationSetPageSize(150)\">\r\n                <span>150</span>\r\n              </vs-dropdown-item>\r\n            </vs-dropdown-menu>\r\n          </vs-dropdown>\r\n        </div>\r\n\r\n        <!-- TABLE ACTION COL-2: SEARCH & EXPORT AS CSV -->\r\n        <div class=\"flex flex-wrap items-center justify-between ag-grid-table-actions-right\">\r\n          <vs-input class=\"mb-4 md:mb-0 mr-4\" v-model=\"searchQuery\" @input=\"updateSearchQuery\" placeholder=\"Search...\" />\r\n          <vs-button class=\"mb-4 md:mb-0\" @click=\"gridApi.exportDataAsCsv()\">Export as CSV</vs-button>\r\n        </div>\r\n      </div>\r\n      <ag-grid-vue\r\n        :gridOptions=\"gridOptions\"\r\n        class=\"ag-theme-material w-100 my-4 ag-grid-table\"\r\n        :columnDefs=\"columnDefs\"\r\n        :defaultColDef=\"defaultColDef\"\r\n        :rowData=\"contacts\"\r\n        rowSelection=\"multiple\"\r\n        colResizeDefault=\"shift\"\r\n        :animateRows=\"true\"\r\n        :floatingFilter=\"true\"\r\n        :pagination=\"true\"\r\n        :paginationPageSize=\"paginationPageSize\"\r\n        :suppressPaginationPanel=\"true\">\r\n      </ag-grid-vue>\r\n      <vs-pagination\r\n        :total=\"totalPages\"\r\n        :max=\"maxPageNumbers\"\r\n        v-model=\"currentPage\" />\r\n    </vx-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { AgGridVue } from \"ag-grid-vue\"\r\nimport contacts from './data.json'\r\nconst VxTour = () => import('@/components/VxTour.vue')\r\n\r\nimport '@/assets/scss/vuesax/extraComponents/agGridStyleOverride.scss'\r\n\r\nexport default {\r\n  components: {\r\n    AgGridVue,\r\n    VxTour,\r\n  },\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      gridOptions: {},\r\n      maxPageNumbers: 7,\r\n      gridApi: null,\r\n      defaultColDef: {\r\n        sortable: true,\r\n        editable: true,\r\n        resizable: true,\r\n        suppressMenu: true\r\n      },\r\n      columnDefs: [\r\n        {\r\n          headerName: 'First Name',\r\n          field: 'firstname',\r\n          width: 175,\r\n          filter: true,\r\n          checkboxSelection: true,\r\n          headerCheckboxSelectionFilteredOnly: true,\r\n          headerCheckboxSelection: true,\r\n        },\r\n        {\r\n          headerName: 'Last Name',\r\n          field: 'lastname',\r\n          filter: true,\r\n          width: 175,\r\n        },\r\n        {\r\n          headerName: 'Email',\r\n          field: 'email',\r\n          filter: true,\r\n          width: 250,\r\n          pinned: 'left'\r\n        },\r\n        {\r\n          headerName: 'Company',\r\n          field: 'company',\r\n          filter: true,\r\n          width: 250,\r\n        },\r\n        {\r\n          headerName: 'City',\r\n          field: 'city',\r\n          filter: true,\r\n          width: 150,\r\n        },\r\n        {\r\n          headerName: 'Country',\r\n          field: 'country',\r\n          filter: true,\r\n          width: 150,\r\n        },\r\n        {\r\n          headerName: 'State',\r\n          field: 'state',\r\n          filter: true,\r\n          width: 100,\r\n        },\r\n        {\r\n          headerName: 'Zip',\r\n          field: 'zip',\r\n          filter: 'agNumberColumnFilter',\r\n          width: 100,\r\n        },\r\n        {\r\n          headerName: 'Followers',\r\n          field: 'followers',\r\n          filter: \"agNumberColumnFilter\",\r\n          width: 125,\r\n        },\r\n      ],\r\n      contacts: contacts,\r\n    }\r\n  },\r\n  watch: {\r\n    '$store.state.windowWidth'(val) {\r\n      if(val <= 576) {\r\n        this.maxPageNumbers = 4;\r\n        this.gridOptions.columnApi.setColumnPinned('email', null);\r\n      }\r\n      else this.gridOptions.columnApi.setColumnPinned('email', 'left')\r\n    }\r\n  },\r\n  computed: {\r\n    paginationPageSize() {\r\n      if(this.gridApi) return this.gridApi.paginationGetPageSize()\r\n      else return 50\r\n    },\r\n    totalPages() {\r\n      if(this.gridApi) return this.gridApi.paginationGetTotalPages()\r\n      else return 0\r\n    },\r\n    currentPage: {\r\n      get() {\r\n        if(this.gridApi) return this.gridApi.paginationGetCurrentPage() + 1\r\n        else return 1\r\n      },\r\n      set(val) {\r\n        this.gridApi.paginationGoToPage(val - 1);\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    updateSearchQuery(val) {\r\n      this.gridApi.setQuickFilter(val);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.gridApi = this.gridOptions.api;\r\n  }\r\n}\r\n\r\n</script>\r\n"]}]}