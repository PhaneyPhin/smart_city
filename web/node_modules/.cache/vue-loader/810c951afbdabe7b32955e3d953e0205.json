{"remainingRequest":"D:\\DTC PROJECT\\booking\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DTC PROJECT\\booking\\web\\src\\views\\Schedule.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DTC PROJECT\\booking\\web\\src\\views\\Schedule.vue","mtime":1576828350978},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  data() {\r\n    return {};\r\n  },\r\n  mounted() {\r\n          // Utility function\r\n      function Util() { };\r\n\r\n      /*\r\n        class manipulation functions\r\n      */\r\n      Util.hasClass = function (el, className) {\r\n        if (el.classList) return el.classList.contains(className);\r\n        else return !!el.className.match(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)'));\r\n      };\r\n\r\n      Util.addClass = function (el, className) {\r\n        var classList = className.split(' ');\r\n        if (el.classList) el.classList.add(classList[0]);\r\n        else if (!Util.hasClass(el, classList[0])) el.className += \" \" + classList[0];\r\n        if (classList.length > 1) Util.addClass(el, classList.slice(1).join(' '));\r\n      };\r\n\r\n      Util.removeClass = function (el, className) {\r\n        var classList = className.split(' ');\r\n        if (el.classList) el.classList.remove(classList[0]);\r\n        else if (Util.hasClass(el, classList[0])) {\r\n          var reg = new RegExp('(\\\\s|^)' + classList[0] + '(\\\\s|$)');\r\n          el.className = el.className.replace(reg, ' ');\r\n        }\r\n        if (classList.length > 1) Util.removeClass(el, classList.slice(1).join(' '));\r\n      };\r\n\r\n      Util.toggleClass = function (el, className, bool) {\r\n        if (bool) Util.addClass(el, className);\r\n        else Util.removeClass(el, className);\r\n      };\r\n\r\n      Util.setAttributes = function (el, attrs) {\r\n        for (var key in attrs) {\r\n          el.setAttribute(key, attrs[key]);\r\n        }\r\n      };\r\n\r\n      /*\r\n        DOM manipulation\r\n      */\r\n      Util.getChildrenByClassName = function (el, className) {\r\n        var children = el.children,\r\n          childrenByClass = [];\r\n        for (var i = 0; i < el.children.length; i++) {\r\n          if (Util.hasClass(el.children[i], className)) childrenByClass.push(el.children[i]);\r\n        }\r\n        return childrenByClass;\r\n      };\r\n\r\n      /*\r\n        Animate height of an element\r\n      */\r\n      Util.setHeight = function (start, to, element, duration, cb) {\r\n        var change = to - start,\r\n          currentTime = null;\r\n\r\n        var animateHeight = function (timestamp) {\r\n          if (!currentTime) currentTime = timestamp;\r\n          var progress = timestamp - currentTime;\r\n          var val = parseInt((progress / duration) * change + start);\r\n          element.setAttribute(\"style\", \"height:\" + val + \"px;\");\r\n          if (progress < duration) {\r\n            window.requestAnimationFrame(animateHeight);\r\n          } else {\r\n            cb();\r\n          }\r\n        };\r\n\r\n        //set the height of the element before starting animation -> fix bug on Safari\r\n        element.setAttribute(\"style\", \"height:\" + start + \"px;\");\r\n        window.requestAnimationFrame(animateHeight);\r\n      };\r\n\r\n      /*\r\n        Smooth Scroll\r\n      */\r\n\r\n      Util.scrollTo = function (final, duration, cb) {\r\n        var start = window.scrollY || document.documentElement.scrollTop,\r\n          currentTime = null;\r\n\r\n        var animateScroll = function (timestamp) {\r\n          if (!currentTime) currentTime = timestamp;\r\n          var progress = timestamp - currentTime;\r\n          if (progress > duration) progress = duration;\r\n          var val = Math.easeInOutQuad(progress, start, final - start, duration);\r\n          window.scrollTo(0, val);\r\n          if (progress < duration) {\r\n            window.requestAnimationFrame(animateScroll);\r\n          } else {\r\n            cb && cb();\r\n          }\r\n        };\r\n\r\n        window.requestAnimationFrame(animateScroll);\r\n      };\r\n\r\n      /*\r\n        Focus utility classes\r\n      */\r\n\r\n      //Move focus to an element\r\n      Util.moveFocus = function (element) {\r\n        if (!element) element = document.getElementsByTagName(\"body\")[0];\r\n        element.focus();\r\n        if (document.activeElement !== element) {\r\n          element.setAttribute('tabindex', '-1');\r\n          element.focus();\r\n        }\r\n      };\r\n\r\n      /*\r\n        Misc\r\n      */\r\n\r\n      Util.getIndexInArray = function (array, el) {\r\n        return Array.prototype.indexOf.call(array, el);\r\n      };\r\n\r\n      Util.cssSupports = function (property, value) {\r\n        if ('CSS' in window) {\r\n          return CSS.supports(property, value);\r\n        } else {\r\n          var jsProperty = property.replace(/-([a-z])/g, function (g) { return g[1].toUpperCase(); });\r\n          return jsProperty in document.body.style;\r\n        }\r\n      };\r\n\r\n      /*\r\n        Polyfills\r\n      */\r\n      //Closest() method\r\n      if (!Element.prototype.matches) {\r\n        Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\r\n      }\r\n\r\n      if (!Element.prototype.closest) {\r\n        Element.prototype.closest = function (s) {\r\n          var el = this;\r\n          if (!document.documentElement.contains(el)) return null;\r\n          do {\r\n            if (el.matches(s)) return el;\r\n            el = el.parentElement || el.parentNode;\r\n          } while (el !== null && el.nodeType === 1);\r\n          return null;\r\n        };\r\n      }\r\n\r\n      //Custom Event() constructor\r\n      if (typeof window.CustomEvent !== \"function\") {\r\n\r\n        function CustomEvent(event, params) {\r\n          params = params || { bubbles: false, cancelable: false, detail: undefined };\r\n          var evt = document.createEvent('CustomEvent');\r\n          evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n          return evt;\r\n        }\r\n\r\n        CustomEvent.prototype = window.Event.prototype;\r\n\r\n        window.CustomEvent = CustomEvent;\r\n      }\r\n\r\n      /*\r\n        Animation curves\r\n      */\r\n      Math.easeInOutQuad = function (t, b, c, d) {\r\n        t /= d / 2;\r\n        if (t < 1) return c / 2 * t * t + b;\r\n        t--;\r\n        return -c / 2 * (t * (t - 2) - 1) + b;\r\n      };\r\n      (function () {\r\n        // Schedule Template - by CodyHouse.co\r\n        function ScheduleTemplate(element) {\r\n          this.element = element;\r\n          this.timelineItems = this.element.getElementsByClassName('cd-schedule__timeline')[0].getElementsByTagName('li');\r\n          this.timelineStart = getScheduleTimestamp(this.timelineItems[0].textContent);\r\n          this.timelineUnitDuration = getScheduleTimestamp(this.timelineItems[1].textContent) - getScheduleTimestamp(this.timelineItems[0].textContent);\r\n\r\n          this.topInfoElement = this.element.getElementsByClassName('cd-schedule__top-info')[0];\r\n          this.singleEvents = this.element.getElementsByClassName('cd-schedule__event');\r\n\r\n          this.modal = this.element.getElementsByClassName('cd-schedule-modal')[0];\r\n          this.modalHeader = this.element.getElementsByClassName('cd-schedule-modal__header')[0];\r\n          this.modalHeaderBg = this.element.getElementsByClassName('cd-schedule-modal__header-bg')[0];\r\n          this.modalBody = this.element.getElementsByClassName('cd-schedule-modal__body')[0];\r\n          this.modalBodyBg = this.element.getElementsByClassName('cd-schedule-modal__body-bg')[0];\r\n          this.modalClose = this.modal.getElementsByClassName('cd-schedule-modal__close')[0];\r\n          this.modalDate = this.modal.getElementsByClassName('cd-schedule-modal__date')[0];\r\n          this.modalEventName = this.modal.getElementsByClassName('cd-schedule-modal__name')[0];\r\n          this.coverLayer = this.element.getElementsByClassName('cd-schedule__cover-layer')[0];\r\n\r\n          this.modalMaxWidth = 800;\r\n          this.modalMaxHeight = 480;\r\n\r\n          this.animating = false;\r\n          this.supportAnimation = Util.cssSupports('transition');\r\n\r\n          this.initSchedule();\r\n        };\r\n\r\n        ScheduleTemplate.prototype.initSchedule = function () {\r\n          this.scheduleReset();\r\n          this.initEvents();\r\n        };\r\n\r\n        ScheduleTemplate.prototype.scheduleReset = function () {\r\n          // according to the mq value, init the style of the template\r\n          var mq = this.mq(),\r\n            loaded = Util.hasClass(this.element, 'js-schedule-loaded'),\r\n            modalOpen = Util.hasClass(this.modal, 'cd-schedule-modal--open');\r\n          if (mq == 'desktop' && !loaded) {\r\n            Util.addClass(this.element, 'js-schedule-loaded');\r\n            this.placeEvents();\r\n            modalOpen && this.checkEventModal(modalOpen);\r\n          } else if (mq == 'mobile' && loaded) {\r\n            //in this case you are on a mobile version (first load or resize from desktop)\r\n            Util.removeClass(this.element, 'cd-schedule--loading js-schedule-loaded');\r\n            this.resetEventsStyle();\r\n            modalOpen && this.checkEventModal();\r\n          } else if (mq == 'desktop' && modalOpen) {\r\n            //on a mobile version with modal open - need to resize/move modal window\r\n            this.checkEventModal(modalOpen);\r\n            Util.removeClass(this.element, 'cd-schedule--loading');\r\n          } else {\r\n            Util.removeClass(this.element, 'cd-schedule--loading');\r\n          }\r\n        };\r\n\r\n        ScheduleTemplate.prototype.resetEventsStyle = function () {\r\n          // remove js style applied to the single events\r\n          for (var i = 0; i < this.singleEvents.length; i++) {\r\n            this.singleEvents[i].removeAttribute('style');\r\n          }\r\n        };\r\n\r\n        ScheduleTemplate.prototype.placeEvents = function () {\r\n          // on big devices - place events in the template according to their time/day\r\n          var self = this,\r\n            slotHeight = this.topInfoElement.offsetHeight;\r\n          for (var i = 0; i < this.singleEvents.length; i++) {\r\n            var anchor = this.singleEvents[i].getElementsByTagName('a')[0];\r\n            var start = getScheduleTimestamp(anchor.getAttribute('data-start')),\r\n              duration = getScheduleTimestamp(anchor.getAttribute('data-end')) - start;\r\n\r\n            var eventTop = slotHeight * (start - self.timelineStart) / self.timelineUnitDuration,\r\n              eventHeight = slotHeight * duration / self.timelineUnitDuration;\r\n\r\n            this.singleEvents[i].setAttribute('style', 'top: ' + (eventTop - 1) + 'px; height: ' + (eventHeight + 1) + 'px');\r\n          }\r\n\r\n          Util.removeClass(this.element, 'cd-schedule--loading');\r\n        };\r\n\r\n        ScheduleTemplate.prototype.initEvents = function () {\r\n          var self = this;\r\n          for (var i = 0; i < this.singleEvents.length; i++) {\r\n            // open modal when user selects an event\r\n            this.singleEvents[i].addEventListener('click', function (event) {\r\n              event.preventDefault();\r\n              if (!self.animating) self.openModal(this.getElementsByTagName('a')[0]);\r\n            });\r\n          }\r\n          //close modal window\r\n          this.modalClose.addEventListener('click', function (event) {\r\n            event.preventDefault();\r\n            if (!self.animating) self.closeModal();\r\n          });\r\n          this.coverLayer.addEventListener('click', function (event) {\r\n            event.preventDefault();\r\n            if (!self.animating) self.closeModal();\r\n          });\r\n        };\r\n\r\n        ScheduleTemplate.prototype.openModal = function (target) {\r\n          var self = this;\r\n          var mq = self.mq();\r\n          this.animating = true;\r\n\r\n          //update event name and time\r\n          this.modalEventName.textContent = target.getElementsByTagName('em')[0].textContent;\r\n          this.modalDate.textContent = target.getAttribute('data-start') + ' - ' + target.getAttribute('data-end');\r\n          this.modal.setAttribute('data-event', target.getAttribute('data-event'));\r\n\r\n          //update event content\r\n          this.loadEventContent(target.getAttribute('data-content'));\r\n\r\n          Util.addClass(this.modal, 'cd-schedule-modal--open');\r\n\r\n          setTimeout(function () {\r\n            //fixes a flash when an event is selected - desktop version only\r\n            Util.addClass(target.closest('li'), 'cd-schedule__event--selected');\r\n          }, 10);\r\n\r\n          if (mq == 'mobile') {\r\n            self.modal.addEventListener('transitionend', function cb() {\r\n              self.animating = false;\r\n              self.modal.removeEventListener('transitionend', cb);\r\n            });\r\n          } else {\r\n            var eventPosition = target.getBoundingClientRect(),\r\n              eventTop = eventPosition.top,\r\n              eventLeft = eventPosition.left,\r\n              eventHeight = target.offsetHeight,\r\n              eventWidth = target.offsetWidth;\r\n\r\n            var windowWidth = window.innerWidth,\r\n              windowHeight = window.innerHeight;\r\n\r\n            var modalWidth = (windowWidth * .8 > self.modalMaxWidth) ? self.modalMaxWidth : windowWidth * .8,\r\n              modalHeight = (windowHeight * .8 > self.modalMaxHeight) ? self.modalMaxHeight : windowHeight * .8;\r\n\r\n            var modalTranslateX = parseInt((windowWidth - modalWidth) / 2 - eventLeft),\r\n              modalTranslateY = parseInt((windowHeight - modalHeight) / 2 - eventTop);\r\n\r\n            var HeaderBgScaleY = modalHeight / eventHeight,\r\n              BodyBgScaleX = (modalWidth - eventWidth);\r\n\r\n            //change modal height/width and translate it\r\n            self.modal.setAttribute('style', 'top:' + eventTop + 'px;left:' + eventLeft + 'px;height:' + modalHeight + 'px;width:' + modalWidth + 'px;transform: translateY(' + modalTranslateY + 'px) translateX(' + modalTranslateX + 'px)');\r\n            //set modalHeader width\r\n            self.modalHeader.setAttribute('style', 'width:' + eventWidth + 'px');\r\n            //set modalBody left margin\r\n            self.modalBody.setAttribute('style', 'margin-left:' + eventWidth + 'px');\r\n            //change modalBodyBg height/width ans scale it\r\n            self.modalBodyBg.setAttribute('style', 'height:' + eventHeight + 'px; width: 1px; transform: scaleY(' + HeaderBgScaleY + ') scaleX(' + BodyBgScaleX + ')');\r\n            //change modal modalHeaderBg height/width and scale it\r\n            self.modalHeaderBg.setAttribute('style', 'height: ' + eventHeight + 'px; width: ' + eventWidth + 'px; transform: scaleY(' + HeaderBgScaleY + ')');\r\n\r\n            self.modalHeaderBg.addEventListener('transitionend', function cb() {\r\n              //wait for the  end of the modalHeaderBg transformation and show the modal content\r\n              self.animating = false;\r\n              Util.addClass(self.modal, 'cd-schedule-modal--animation-completed');\r\n              self.modalHeaderBg.removeEventListener('transitionend', cb);\r\n            });\r\n          }\r\n\r\n          //if browser do not support transitions -> no need to wait for the end of it\r\n          this.animationFallback();\r\n        };\r\n\r\n        ScheduleTemplate.prototype.closeModal = function () {\r\n          var self = this;\r\n          var mq = self.mq();\r\n\r\n          var item = self.element.getElementsByClassName('cd-schedule__event--selected')[0],\r\n            target = item.getElementsByTagName('a')[0];\r\n\r\n          this.animating = true;\r\n\r\n          if (mq == 'mobile') {\r\n            Util.removeClass(this.modal, 'cd-schedule-modal--open');\r\n            self.modal.addEventListener('transitionend', function cb() {\r\n              Util.removeClass(self.modal, 'cd-schedule-modal--content-loaded');\r\n              Util.removeClass(item, 'cd-schedule__event--selected');\r\n              self.animating = false;\r\n              self.modal.removeEventListener('transitionend', cb);\r\n            });\r\n          } else {\r\n            var eventPosition = target.getBoundingClientRect(),\r\n              eventTop = eventPosition.top,\r\n              eventLeft = eventPosition.left,\r\n              eventHeight = target.offsetHeight,\r\n              eventWidth = target.offsetWidth;\r\n\r\n            var modalStyle = window.getComputedStyle(self.modal),\r\n              modalTop = Number(modalStyle.getPropertyValue('top').replace('px', '')),\r\n              modalLeft = Number(modalStyle.getPropertyValue('left').replace('px', ''));\r\n\r\n            var modalTranslateX = eventLeft - modalLeft,\r\n              modalTranslateY = eventTop - modalTop;\r\n\r\n            Util.removeClass(this.modal, 'cd-schedule-modal--open cd-schedule-modal--animation-completed');\r\n\r\n            //change modal width/height and translate it\r\n            self.modal.style.width = eventWidth + 'px'; self.modal.style.height = eventHeight + 'px'; self.modal.style.transform = 'translateX(' + modalTranslateX + 'px) translateY(' + modalTranslateY + 'px)';\r\n            //scale down modalBodyBg element\r\n            self.modalBodyBg.style.transform = 'scaleX(0) scaleY(1)';\r\n            //scale down modalHeaderBg element\r\n            // self.modalHeaderBg.setAttribute('style', 'transform: scaleY(1)');\r\n            self.modalHeaderBg.style.transform = 'scaleY(1)';\r\n\r\n            self.modalHeaderBg.addEventListener('transitionend', function cb() {\r\n              //wait for the  end of the modalHeaderBg transformation and reset modal style\r\n              Util.addClass(self.modal, 'cd-schedule-modal--no-transition');\r\n              setTimeout(function () {\r\n                self.modal.removeAttribute('style');\r\n                self.modalBody.removeAttribute('style');\r\n                self.modalHeader.removeAttribute('style');\r\n                self.modalHeaderBg.removeAttribute('style');\r\n                self.modalBodyBg.removeAttribute('style');\r\n              }, 10);\r\n              setTimeout(function () {\r\n                Util.removeClass(self.modal, 'cd-schedule-modal--no-transition');\r\n              }, 20);\r\n              self.animating = false;\r\n              Util.removeClass(self.modal, 'cd-schedule-modal--content-loaded');\r\n              Util.removeClass(item, 'cd-schedule__event--selected');\r\n              self.modalHeaderBg.removeEventListener('transitionend', cb);\r\n            });\r\n          }\r\n\r\n          //if browser do not support transitions -> no need to wait for the end of it\r\n          this.animationFallback();\r\n        };\r\n\r\n        ScheduleTemplate.prototype.checkEventModal = function (modalOpen) {\r\n          // this function is used on resize to reset events/modal style\r\n          this.animating = true;\r\n          var self = this;\r\n          var mq = this.mq();\r\n          if (mq == 'mobile') {\r\n            //reset modal style on mobile\r\n            self.modal.removeAttribute('style');\r\n            self.modalBody.removeAttribute('style');\r\n            self.modalHeader.removeAttribute('style');\r\n            self.modalHeaderBg.removeAttribute('style');\r\n            self.modalBodyBg.removeAttribute('style');\r\n            Util.removeClass(self.modal, 'cd-schedule-modal--no-transition');\r\n            self.animating = false;\r\n          } else if (mq == 'desktop' && modalOpen) {\r\n            Util.addClass(self.modal, 'cd-schedule-modal--no-transition cd-schedule-modal--animation-completed');\r\n            var item = self.element.getElementsByClassName('cd-schedule__event--selected')[0],\r\n              target = item.getElementsByTagName('a')[0];\r\n\r\n            var eventPosition = target.getBoundingClientRect(),\r\n              eventTop = eventPosition.top,\r\n              eventLeft = eventPosition.left,\r\n              eventHeight = target.offsetHeight,\r\n              eventWidth = target.offsetWidth;\r\n\r\n            var windowWidth = window.innerWidth,\r\n              windowHeight = window.innerHeight;\r\n\r\n            var modalWidth = (windowWidth * .8 > self.modalMaxWidth) ? self.modalMaxWidth : windowWidth * .8,\r\n              modalHeight = (windowHeight * .8 > self.modalMaxHeight) ? self.modalMaxHeight : windowHeight * .8;\r\n\r\n            var HeaderBgScaleY = modalHeight / eventHeight,\r\n              BodyBgScaleX = (modalWidth - eventWidth);\r\n\r\n\r\n            setTimeout(function () {\r\n              self.modal.setAttribute('style', 'top:' + (windowHeight / 2 - modalHeight / 2) + 'px;left:' + (windowWidth / 2 - modalWidth / 2) + 'px;height:' + modalHeight + 'px;width:' + modalWidth + 'px;transform: translateY(0) translateX(0)');\r\n              //change modal modalBodyBg height/width\r\n              self.modalBodyBg.style.height = modalHeight + 'px'; self.modalBodyBg.style.transform = 'scaleY(1) scaleX(' + BodyBgScaleX + ')'; self.modalBodyBg.style.width = '1px';\r\n              //set modalHeader width\r\n              self.modalHeader.setAttribute('style', 'width:' + eventWidth + 'px');\r\n              //set modalBody left margin\r\n              self.modalBody.setAttribute('style', 'margin-left:' + eventWidth + 'px');\r\n              //change modal modalHeaderBg height/width and scale it\r\n              self.modalHeaderBg.setAttribute('style', 'height: ' + eventHeight + 'px;width:' + eventWidth + 'px; transform:scaleY(' + HeaderBgScaleY + ');');\r\n            }, 10);\r\n\r\n            setTimeout(function () {\r\n              Util.removeClass(self.modal, 'cd-schedule-modal--no-transition');\r\n              self.animating = false;\r\n            }, 20);\r\n\r\n          }\r\n        };\r\n\r\n        ScheduleTemplate.prototype.loadEventContent = function (content) {\r\n          // load the content of an event when user selects it\r\n          var self = this;\r\n\r\n          httpRequest = new XMLHttpRequest();\r\n          httpRequest.onreadystatechange = function () {\r\n            if (httpRequest.readyState === XMLHttpRequest.DONE) {\r\n              if (httpRequest.status === 200) {\r\n                self.modal.getElementsByClassName('cd-schedule-modal__event-info')[0].innerHTML = self.getEventContent(httpRequest.responseText);\r\n                Util.addClass(self.modal, 'cd-schedule-modal--content-loaded');\r\n              }\r\n            }\r\n          };\r\n          httpRequest.open('GET', content + '.html');\r\n          httpRequest.send();\r\n        };\r\n\r\n        ScheduleTemplate.prototype.getEventContent = function (string) {\r\n          // reset the loaded event content so that it can be inserted in the modal\r\n          var div = document.createElement('div');\r\n          div.innerHTML = string.trim();\r\n          return div.getElementsByClassName('cd-schedule-modal__event-info')[0].innerHTML;\r\n        };\r\n\r\n        ScheduleTemplate.prototype.animationFallback = function () {\r\n          if (!this.supportAnimation) { // fallback for browsers not supporting transitions\r\n            var event = new CustomEvent('transitionend');\r\n            self.modal.dispatchEvent(event);\r\n            self.modalHeaderBg.dispatchEvent(event);\r\n          }\r\n        };\r\n\r\n        ScheduleTemplate.prototype.mq = function () {\r\n          //get MQ value ('desktop' or 'mobile')\r\n          var self = this;\r\n          return window.getComputedStyle(this.element, '::before').getPropertyValue('content').replace(/'|\"/g, \"\");\r\n        };\r\n\r\n        function getScheduleTimestamp(time) {\r\n          //accepts hh:mm format - convert hh:mm to timestamp\r\n          time = time.replace(/ /g, '');\r\n          var timeArray = time.split(':');\r\n          var timeStamp = parseInt(timeArray[0]) * 60 + parseInt(timeArray[1]);\r\n          return timeStamp;\r\n        };\r\n\r\n        var scheduleTemplate = document.getElementsByClassName('js-cd-schedule'),\r\n          scheduleTemplateArray = [],\r\n          resizing = false;\r\n        if (scheduleTemplate.length > 0) { // init ScheduleTemplate objects\r\n          for (var i = 0; i < scheduleTemplate.length; i++) {\r\n            (function (i) {\r\n              scheduleTemplateArray.push(new ScheduleTemplate(scheduleTemplate[i]));\r\n            })(i);\r\n          }\r\n\r\n          window.addEventListener('resize', function (event) {\r\n            // on resize - update events position and modal position (if open)\r\n            if (!resizing) {\r\n              resizing = true;\r\n              (!window.requestAnimationFrame) ? setTimeout(checkResize, 250) : window.requestAnimationFrame(checkResize);\r\n            }\r\n          });\r\n\r\n          window.addEventListener('keyup', function (event) {\r\n            // close event modal when pressing escape key\r\n            if (event.keyCode && event.keyCode == 27 || event.key && event.key.toLowerCase() == 'escape') {\r\n              for (var i = 0; i < scheduleTemplateArray.length; i++) {\r\n                scheduleTemplateArray[i].closeModal();\r\n              }\r\n            }\r\n          });\r\n\r\n          function checkResize() {\r\n            for (var i = 0; i < scheduleTemplateArray.length; i++) {\r\n              scheduleTemplateArray[i].scheduleReset();\r\n            }\r\n            resizing = false;\r\n          };\r\n        }\r\n      }());\r\n\r\n  }\r\n};\r\n",{"version":3,"sources":["Schedule.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2WA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Schedule.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <header class=\"cd-main-header text-center flex flex-column flex-center\">\r\n      <p class=\"margin-top-md margin-bottom-xl\">\r\n        👈\r\n        <a\r\n          class=\"cd-article-link\"\r\n          href=\"https://codyhouse.co/gem/schedule-template\"\r\n        >Article &amp; Download</a>\r\n      </p>\r\n\r\n      <h1 class=\"text-xl\">Schedule Template</h1>\r\n    </header>\r\n\r\n    <div class=\"cd-schedule cd-schedule--loading margin-top-lg margin-bottom-lg js-cd-schedule\">\r\n      <div class=\"cd-schedule__timeline\">\r\n        <ul>\r\n          <li>\r\n            <span>09:00</span>\r\n          </li>\r\n          <li>\r\n            <span>09:30</span>\r\n          </li>\r\n          <li>\r\n            <span>10:00</span>\r\n          </li>\r\n          <li>\r\n            <span>10:30</span>\r\n          </li>\r\n          <li>\r\n            <span>11:00</span>\r\n          </li>\r\n          <li>\r\n            <span>11:30</span>\r\n          </li>\r\n          <li>\r\n            <span>12:00</span>\r\n          </li>\r\n          <li>\r\n            <span>12:30</span>\r\n          </li>\r\n          <li>\r\n            <span>13:00</span>\r\n          </li>\r\n          <li>\r\n            <span>13:30</span>\r\n          </li>\r\n          <li>\r\n            <span>14:00</span>\r\n          </li>\r\n          <li>\r\n            <span>14:30</span>\r\n          </li>\r\n          <li>\r\n            <span>15:00</span>\r\n          </li>\r\n          <li>\r\n            <span>15:30</span>\r\n          </li>\r\n          <li>\r\n            <span>16:00</span>\r\n          </li>\r\n          <li>\r\n            <span>16:30</span>\r\n          </li>\r\n          <li>\r\n            <span>17:00</span>\r\n          </li>\r\n          <li>\r\n            <span>17:30</span>\r\n          </li>\r\n          <li>\r\n            <span>18:00</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <!-- .cd-schedule__timeline -->\r\n\r\n      <div class=\"cd-schedule__events\">\r\n        <ul>\r\n          <li class=\"cd-schedule__group\">\r\n            <div class=\"cd-schedule__top-info\">\r\n              <span>Monday</span>\r\n            </div>\r\n\r\n            <ul>\r\n              <li class=\"cd-schedule__event\">\r\n                <a\r\n                  data-start=\"09:30\"\r\n                  data-end=\"10:30\"\r\n                  data-content=\"event-abs-circuit\"\r\n                  data-event=\"event-1\"\r\n                  href=\"#0\"\r\n                >\r\n                  <em class=\"cd-schedule__name\">Abs Circuit</em>\r\n                </a>\r\n              </li>\r\n\r\n              <li class=\"cd-schedule__event\">\r\n                <a\r\n                  data-start=\"11:00\"\r\n                  data-end=\"12:30\"\r\n                  data-content=\"event-rowing-workout\"\r\n                  data-event=\"event-2\"\r\n                  href=\"#0\"\r\n                >\r\n                  <em class=\"cd-schedule__name\">Rowing Workout</em>\r\n                </a>\r\n              </li>\r\n\r\n              <li class=\"cd-schedule__event\">\r\n                <a\r\n                  data-start=\"14:00\"\r\n                  data-end=\"15:15\"\r\n                  data-content=\"event-yoga-1\"\r\n                  data-event=\"event-3\"\r\n                  href=\"#0\"\r\n                >\r\n                  <em class=\"cd-schedule__name\">Yoga Level 1</em>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li class=\"cd-schedule__group\">\r\n            <div class=\"cd-schedule__top-info\">\r\n              <span>Tuesday</span>\r\n            </div>\r\n\r\n            <ul>\r\n              <li class=\"cd-schedule__event\">\r\n                <a\r\n                  data-start=\"10:00\"\r\n                  data-end=\"11:00\"\r\n                  data-content=\"event-rowing-workout\"\r\n                  data-event=\"event-2\"\r\n                  href=\"#0\"\r\n                >\r\n                  <em class=\"cd-schedule__name\">Rowing Workout</em>\r\n                </a>\r\n              </li>\r\n\r\n              <li class=\"cd-schedule__event\">\r\n                <a\r\n                  data-start=\"11:30\"\r\n                  data-end=\"13:00\"\r\n                  data-content=\"event-restorative-yoga\"\r\n                  data-event=\"event-4\"\r\n                  href=\"#0\"\r\n                >\r\n                  <em class=\"cd-schedule__name\">Restorative Yoga</em>\r\n                </a>\r\n              </li>\r\n\r\n              <li class=\"cd-schedule__event\">\r\n                <a\r\n                  data-start=\"13:30\"\r\n                  data-end=\"15:00\"\r\n                  data-content=\"event-abs-circuit\"\r\n                  data-event=\"event-1\"\r\n                  href=\"#0\"\r\n                >\r\n                  <em class=\"cd-schedule__name\">Abs Circuit</em>\r\n                </a>\r\n              </li>\r\n\r\n              <li class=\"cd-schedule__event\">\r\n                <a\r\n                  data-start=\"15:45\"\r\n                  data-end=\"16:45\"\r\n                  data-content=\"event-yoga-1\"\r\n                  data-event=\"event-3\"\r\n                  href=\"#0\"\r\n                >\r\n                  <em class=\"cd-schedule__name\">Yoga Level 1</em>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li class=\"cd-schedule__group\">\r\n            <div class=\"cd-schedule__top-info\">\r\n              <span>Wednesday</span>\r\n            </div>\r\n\r\n            <ul>\r\n              <li class=\"cd-schedule__event\">\r\n                <a\r\n                  data-start=\"09:00\"\r\n                  data-end=\"10:15\"\r\n                  data-content=\"event-restorative-yoga\"\r\n                  data-event=\"event-4\"\r\n                  href=\"#0\"\r\n                >\r\n                  <em class=\"cd-schedule__name\">Restorative Yoga</em>\r\n                </a>\r\n              </li>\r\n\r\n              <li class=\"cd-schedule__event\">\r\n                <a\r\n                  data-start=\"10:45\"\r\n                  data-end=\"11:45\"\r\n                  data-content=\"event-yoga-1\"\r\n                  data-event=\"event-3\"\r\n                  href=\"#0\"\r\n                >\r\n                  <em class=\"cd-schedule__name\">Yoga Level 1</em>\r\n                </a>\r\n              </li>\r\n\r\n              <li class=\"cd-schedule__event\">\r\n                <a\r\n                  data-start=\"12:00\"\r\n                  data-end=\"13:45\"\r\n                  data-content=\"event-rowing-workout\"\r\n                  data-event=\"event-2\"\r\n                  href=\"#0\"\r\n                >\r\n                  <em class=\"cd-schedule__name\">Rowing Workout</em>\r\n                </a>\r\n              </li>\r\n\r\n              <li class=\"cd-schedule__event\">\r\n                <a\r\n                  data-start=\"13:45\"\r\n                  data-end=\"15:00\"\r\n                  data-content=\"event-yoga-1\"\r\n                  data-event=\"event-3\"\r\n                  href=\"#0\"\r\n                >\r\n                  <em class=\"cd-schedule__name\">Yoga Level 1</em>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li class=\"cd-schedule__group\">\r\n            <div class=\"cd-schedule__top-info\">\r\n              <span>Thursday</span>\r\n            </div>\r\n\r\n            <ul>\r\n              <li class=\"cd-schedule__event\">\r\n                <a\r\n                  data-start=\"09:30\"\r\n                  data-end=\"10:30\"\r\n                  data-content=\"event-abs-circuit\"\r\n                  data-event=\"event-1\"\r\n                  href=\"#0\"\r\n                >\r\n                  <em class=\"cd-schedule__name\">Abs Circuit</em>\r\n                </a>\r\n              </li>\r\n\r\n              <li class=\"cd-schedule__event\">\r\n                <a\r\n                  data-start=\"12:00\"\r\n                  data-end=\"13:45\"\r\n                  data-content=\"event-restorative-yoga\"\r\n                  data-event=\"event-4\"\r\n                  href=\"#0\"\r\n                >\r\n                  <em class=\"cd-schedule__name\">Restorative Yoga</em>\r\n                </a>\r\n              </li>\r\n\r\n              <li class=\"cd-schedule__event\">\r\n                <a\r\n                  data-start=\"15:30\"\r\n                  data-end=\"16:30\"\r\n                  data-content=\"event-abs-circuit\"\r\n                  data-event=\"event-1\"\r\n                  href=\"#0\"\r\n                >\r\n                  <em class=\"cd-schedule__name\">Abs Circuit</em>\r\n                </a>\r\n              </li>\r\n\r\n              <li class=\"cd-schedule__event\">\r\n                <a\r\n                  data-start=\"17:00\"\r\n                  data-end=\"18:30\"\r\n                  data-content=\"event-rowing-workout\"\r\n                  data-event=\"event-2\"\r\n                  href=\"#0\"\r\n                >\r\n                  <em class=\"cd-schedule__name\">Rowing Workout</em>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n\r\n          <li class=\"cd-schedule__group\">\r\n            <div class=\"cd-schedule__top-info\">\r\n              <span>Friday</span>\r\n            </div>\r\n\r\n            <ul>\r\n              <li class=\"cd-schedule__event\">\r\n                <a\r\n                  data-start=\"10:00\"\r\n                  data-end=\"11:00\"\r\n                  data-content=\"event-rowing-workout\"\r\n                  data-event=\"event-2\"\r\n                  href=\"#0\"\r\n                >\r\n                  <em class=\"cd-schedule__name\">Rowing Workout</em>\r\n                </a>\r\n              </li>\r\n\r\n              <li class=\"cd-schedule__event\">\r\n                <a\r\n                  data-start=\"12:30\"\r\n                  data-end=\"14:00\"\r\n                  data-content=\"event-abs-circuit\"\r\n                  data-event=\"event-1\"\r\n                  href=\"#0\"\r\n                >\r\n                  <em class=\"cd-schedule__name\">Abs Circuit</em>\r\n                </a>\r\n              </li>\r\n\r\n              <li class=\"cd-schedule__event\">\r\n                <a\r\n                  data-start=\"15:45\"\r\n                  data-end=\"16:45\"\r\n                  data-content=\"event-yoga-1\"\r\n                  data-event=\"event-3\"\r\n                  href=\"#0\"\r\n                >\r\n                  <em class=\"cd-schedule__name\">Yoga Level 1</em>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div class=\"cd-schedule-modal\">\r\n        <header class=\"cd-schedule-modal__header\">\r\n          <div class=\"cd-schedule-modal__content\">\r\n            <span class=\"cd-schedule-modal__date\"></span>\r\n            <h3 class=\"cd-schedule-modal__name\"></h3>\r\n          </div>\r\n\r\n          <div class=\"cd-schedule-modal__header-bg\"></div>\r\n        </header>\r\n\r\n        <div class=\"cd-schedule-modal__body\">\r\n          <div class=\"cd-schedule-modal__event-info\"></div>\r\n          <div class=\"cd-schedule-modal__body-bg\"></div>\r\n        </div>\r\n\r\n        <a href=\"#0\" class=\"cd-schedule-modal__close text-replace\">Close</a>\r\n      </div>\r\n\r\n      <div class=\"cd-schedule__cover-layer\"></div>\r\n    </div>\r\n    <!-- .cd-schedule -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {};\r\n  },\r\n  mounted() {\r\n          // Utility function\r\n      function Util() { };\r\n\r\n      /*\r\n        class manipulation functions\r\n      */\r\n      Util.hasClass = function (el, className) {\r\n        if (el.classList) return el.classList.contains(className);\r\n        else return !!el.className.match(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)'));\r\n      };\r\n\r\n      Util.addClass = function (el, className) {\r\n        var classList = className.split(' ');\r\n        if (el.classList) el.classList.add(classList[0]);\r\n        else if (!Util.hasClass(el, classList[0])) el.className += \" \" + classList[0];\r\n        if (classList.length > 1) Util.addClass(el, classList.slice(1).join(' '));\r\n      };\r\n\r\n      Util.removeClass = function (el, className) {\r\n        var classList = className.split(' ');\r\n        if (el.classList) el.classList.remove(classList[0]);\r\n        else if (Util.hasClass(el, classList[0])) {\r\n          var reg = new RegExp('(\\\\s|^)' + classList[0] + '(\\\\s|$)');\r\n          el.className = el.className.replace(reg, ' ');\r\n        }\r\n        if (classList.length > 1) Util.removeClass(el, classList.slice(1).join(' '));\r\n      };\r\n\r\n      Util.toggleClass = function (el, className, bool) {\r\n        if (bool) Util.addClass(el, className);\r\n        else Util.removeClass(el, className);\r\n      };\r\n\r\n      Util.setAttributes = function (el, attrs) {\r\n        for (var key in attrs) {\r\n          el.setAttribute(key, attrs[key]);\r\n        }\r\n      };\r\n\r\n      /*\r\n        DOM manipulation\r\n      */\r\n      Util.getChildrenByClassName = function (el, className) {\r\n        var children = el.children,\r\n          childrenByClass = [];\r\n        for (var i = 0; i < el.children.length; i++) {\r\n          if (Util.hasClass(el.children[i], className)) childrenByClass.push(el.children[i]);\r\n        }\r\n        return childrenByClass;\r\n      };\r\n\r\n      /*\r\n        Animate height of an element\r\n      */\r\n      Util.setHeight = function (start, to, element, duration, cb) {\r\n        var change = to - start,\r\n          currentTime = null;\r\n\r\n        var animateHeight = function (timestamp) {\r\n          if (!currentTime) currentTime = timestamp;\r\n          var progress = timestamp - currentTime;\r\n          var val = parseInt((progress / duration) * change + start);\r\n          element.setAttribute(\"style\", \"height:\" + val + \"px;\");\r\n          if (progress < duration) {\r\n            window.requestAnimationFrame(animateHeight);\r\n          } else {\r\n            cb();\r\n          }\r\n        };\r\n\r\n        //set the height of the element before starting animation -> fix bug on Safari\r\n        element.setAttribute(\"style\", \"height:\" + start + \"px;\");\r\n        window.requestAnimationFrame(animateHeight);\r\n      };\r\n\r\n      /*\r\n        Smooth Scroll\r\n      */\r\n\r\n      Util.scrollTo = function (final, duration, cb) {\r\n        var start = window.scrollY || document.documentElement.scrollTop,\r\n          currentTime = null;\r\n\r\n        var animateScroll = function (timestamp) {\r\n          if (!currentTime) currentTime = timestamp;\r\n          var progress = timestamp - currentTime;\r\n          if (progress > duration) progress = duration;\r\n          var val = Math.easeInOutQuad(progress, start, final - start, duration);\r\n          window.scrollTo(0, val);\r\n          if (progress < duration) {\r\n            window.requestAnimationFrame(animateScroll);\r\n          } else {\r\n            cb && cb();\r\n          }\r\n        };\r\n\r\n        window.requestAnimationFrame(animateScroll);\r\n      };\r\n\r\n      /*\r\n        Focus utility classes\r\n      */\r\n\r\n      //Move focus to an element\r\n      Util.moveFocus = function (element) {\r\n        if (!element) element = document.getElementsByTagName(\"body\")[0];\r\n        element.focus();\r\n        if (document.activeElement !== element) {\r\n          element.setAttribute('tabindex', '-1');\r\n          element.focus();\r\n        }\r\n      };\r\n\r\n      /*\r\n        Misc\r\n      */\r\n\r\n      Util.getIndexInArray = function (array, el) {\r\n        return Array.prototype.indexOf.call(array, el);\r\n      };\r\n\r\n      Util.cssSupports = function (property, value) {\r\n        if ('CSS' in window) {\r\n          return CSS.supports(property, value);\r\n        } else {\r\n          var jsProperty = property.replace(/-([a-z])/g, function (g) { return g[1].toUpperCase(); });\r\n          return jsProperty in document.body.style;\r\n        }\r\n      };\r\n\r\n      /*\r\n        Polyfills\r\n      */\r\n      //Closest() method\r\n      if (!Element.prototype.matches) {\r\n        Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\r\n      }\r\n\r\n      if (!Element.prototype.closest) {\r\n        Element.prototype.closest = function (s) {\r\n          var el = this;\r\n          if (!document.documentElement.contains(el)) return null;\r\n          do {\r\n            if (el.matches(s)) return el;\r\n            el = el.parentElement || el.parentNode;\r\n          } while (el !== null && el.nodeType === 1);\r\n          return null;\r\n        };\r\n      }\r\n\r\n      //Custom Event() constructor\r\n      if (typeof window.CustomEvent !== \"function\") {\r\n\r\n        function CustomEvent(event, params) {\r\n          params = params || { bubbles: false, cancelable: false, detail: undefined };\r\n          var evt = document.createEvent('CustomEvent');\r\n          evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n          return evt;\r\n        }\r\n\r\n        CustomEvent.prototype = window.Event.prototype;\r\n\r\n        window.CustomEvent = CustomEvent;\r\n      }\r\n\r\n      /*\r\n        Animation curves\r\n      */\r\n      Math.easeInOutQuad = function (t, b, c, d) {\r\n        t /= d / 2;\r\n        if (t < 1) return c / 2 * t * t + b;\r\n        t--;\r\n        return -c / 2 * (t * (t - 2) - 1) + b;\r\n      };\r\n      (function () {\r\n        // Schedule Template - by CodyHouse.co\r\n        function ScheduleTemplate(element) {\r\n          this.element = element;\r\n          this.timelineItems = this.element.getElementsByClassName('cd-schedule__timeline')[0].getElementsByTagName('li');\r\n          this.timelineStart = getScheduleTimestamp(this.timelineItems[0].textContent);\r\n          this.timelineUnitDuration = getScheduleTimestamp(this.timelineItems[1].textContent) - getScheduleTimestamp(this.timelineItems[0].textContent);\r\n\r\n          this.topInfoElement = this.element.getElementsByClassName('cd-schedule__top-info')[0];\r\n          this.singleEvents = this.element.getElementsByClassName('cd-schedule__event');\r\n\r\n          this.modal = this.element.getElementsByClassName('cd-schedule-modal')[0];\r\n          this.modalHeader = this.element.getElementsByClassName('cd-schedule-modal__header')[0];\r\n          this.modalHeaderBg = this.element.getElementsByClassName('cd-schedule-modal__header-bg')[0];\r\n          this.modalBody = this.element.getElementsByClassName('cd-schedule-modal__body')[0];\r\n          this.modalBodyBg = this.element.getElementsByClassName('cd-schedule-modal__body-bg')[0];\r\n          this.modalClose = this.modal.getElementsByClassName('cd-schedule-modal__close')[0];\r\n          this.modalDate = this.modal.getElementsByClassName('cd-schedule-modal__date')[0];\r\n          this.modalEventName = this.modal.getElementsByClassName('cd-schedule-modal__name')[0];\r\n          this.coverLayer = this.element.getElementsByClassName('cd-schedule__cover-layer')[0];\r\n\r\n          this.modalMaxWidth = 800;\r\n          this.modalMaxHeight = 480;\r\n\r\n          this.animating = false;\r\n          this.supportAnimation = Util.cssSupports('transition');\r\n\r\n          this.initSchedule();\r\n        };\r\n\r\n        ScheduleTemplate.prototype.initSchedule = function () {\r\n          this.scheduleReset();\r\n          this.initEvents();\r\n        };\r\n\r\n        ScheduleTemplate.prototype.scheduleReset = function () {\r\n          // according to the mq value, init the style of the template\r\n          var mq = this.mq(),\r\n            loaded = Util.hasClass(this.element, 'js-schedule-loaded'),\r\n            modalOpen = Util.hasClass(this.modal, 'cd-schedule-modal--open');\r\n          if (mq == 'desktop' && !loaded) {\r\n            Util.addClass(this.element, 'js-schedule-loaded');\r\n            this.placeEvents();\r\n            modalOpen && this.checkEventModal(modalOpen);\r\n          } else if (mq == 'mobile' && loaded) {\r\n            //in this case you are on a mobile version (first load or resize from desktop)\r\n            Util.removeClass(this.element, 'cd-schedule--loading js-schedule-loaded');\r\n            this.resetEventsStyle();\r\n            modalOpen && this.checkEventModal();\r\n          } else if (mq == 'desktop' && modalOpen) {\r\n            //on a mobile version with modal open - need to resize/move modal window\r\n            this.checkEventModal(modalOpen);\r\n            Util.removeClass(this.element, 'cd-schedule--loading');\r\n          } else {\r\n            Util.removeClass(this.element, 'cd-schedule--loading');\r\n          }\r\n        };\r\n\r\n        ScheduleTemplate.prototype.resetEventsStyle = function () {\r\n          // remove js style applied to the single events\r\n          for (var i = 0; i < this.singleEvents.length; i++) {\r\n            this.singleEvents[i].removeAttribute('style');\r\n          }\r\n        };\r\n\r\n        ScheduleTemplate.prototype.placeEvents = function () {\r\n          // on big devices - place events in the template according to their time/day\r\n          var self = this,\r\n            slotHeight = this.topInfoElement.offsetHeight;\r\n          for (var i = 0; i < this.singleEvents.length; i++) {\r\n            var anchor = this.singleEvents[i].getElementsByTagName('a')[0];\r\n            var start = getScheduleTimestamp(anchor.getAttribute('data-start')),\r\n              duration = getScheduleTimestamp(anchor.getAttribute('data-end')) - start;\r\n\r\n            var eventTop = slotHeight * (start - self.timelineStart) / self.timelineUnitDuration,\r\n              eventHeight = slotHeight * duration / self.timelineUnitDuration;\r\n\r\n            this.singleEvents[i].setAttribute('style', 'top: ' + (eventTop - 1) + 'px; height: ' + (eventHeight + 1) + 'px');\r\n          }\r\n\r\n          Util.removeClass(this.element, 'cd-schedule--loading');\r\n        };\r\n\r\n        ScheduleTemplate.prototype.initEvents = function () {\r\n          var self = this;\r\n          for (var i = 0; i < this.singleEvents.length; i++) {\r\n            // open modal when user selects an event\r\n            this.singleEvents[i].addEventListener('click', function (event) {\r\n              event.preventDefault();\r\n              if (!self.animating) self.openModal(this.getElementsByTagName('a')[0]);\r\n            });\r\n          }\r\n          //close modal window\r\n          this.modalClose.addEventListener('click', function (event) {\r\n            event.preventDefault();\r\n            if (!self.animating) self.closeModal();\r\n          });\r\n          this.coverLayer.addEventListener('click', function (event) {\r\n            event.preventDefault();\r\n            if (!self.animating) self.closeModal();\r\n          });\r\n        };\r\n\r\n        ScheduleTemplate.prototype.openModal = function (target) {\r\n          var self = this;\r\n          var mq = self.mq();\r\n          this.animating = true;\r\n\r\n          //update event name and time\r\n          this.modalEventName.textContent = target.getElementsByTagName('em')[0].textContent;\r\n          this.modalDate.textContent = target.getAttribute('data-start') + ' - ' + target.getAttribute('data-end');\r\n          this.modal.setAttribute('data-event', target.getAttribute('data-event'));\r\n\r\n          //update event content\r\n          this.loadEventContent(target.getAttribute('data-content'));\r\n\r\n          Util.addClass(this.modal, 'cd-schedule-modal--open');\r\n\r\n          setTimeout(function () {\r\n            //fixes a flash when an event is selected - desktop version only\r\n            Util.addClass(target.closest('li'), 'cd-schedule__event--selected');\r\n          }, 10);\r\n\r\n          if (mq == 'mobile') {\r\n            self.modal.addEventListener('transitionend', function cb() {\r\n              self.animating = false;\r\n              self.modal.removeEventListener('transitionend', cb);\r\n            });\r\n          } else {\r\n            var eventPosition = target.getBoundingClientRect(),\r\n              eventTop = eventPosition.top,\r\n              eventLeft = eventPosition.left,\r\n              eventHeight = target.offsetHeight,\r\n              eventWidth = target.offsetWidth;\r\n\r\n            var windowWidth = window.innerWidth,\r\n              windowHeight = window.innerHeight;\r\n\r\n            var modalWidth = (windowWidth * .8 > self.modalMaxWidth) ? self.modalMaxWidth : windowWidth * .8,\r\n              modalHeight = (windowHeight * .8 > self.modalMaxHeight) ? self.modalMaxHeight : windowHeight * .8;\r\n\r\n            var modalTranslateX = parseInt((windowWidth - modalWidth) / 2 - eventLeft),\r\n              modalTranslateY = parseInt((windowHeight - modalHeight) / 2 - eventTop);\r\n\r\n            var HeaderBgScaleY = modalHeight / eventHeight,\r\n              BodyBgScaleX = (modalWidth - eventWidth);\r\n\r\n            //change modal height/width and translate it\r\n            self.modal.setAttribute('style', 'top:' + eventTop + 'px;left:' + eventLeft + 'px;height:' + modalHeight + 'px;width:' + modalWidth + 'px;transform: translateY(' + modalTranslateY + 'px) translateX(' + modalTranslateX + 'px)');\r\n            //set modalHeader width\r\n            self.modalHeader.setAttribute('style', 'width:' + eventWidth + 'px');\r\n            //set modalBody left margin\r\n            self.modalBody.setAttribute('style', 'margin-left:' + eventWidth + 'px');\r\n            //change modalBodyBg height/width ans scale it\r\n            self.modalBodyBg.setAttribute('style', 'height:' + eventHeight + 'px; width: 1px; transform: scaleY(' + HeaderBgScaleY + ') scaleX(' + BodyBgScaleX + ')');\r\n            //change modal modalHeaderBg height/width and scale it\r\n            self.modalHeaderBg.setAttribute('style', 'height: ' + eventHeight + 'px; width: ' + eventWidth + 'px; transform: scaleY(' + HeaderBgScaleY + ')');\r\n\r\n            self.modalHeaderBg.addEventListener('transitionend', function cb() {\r\n              //wait for the  end of the modalHeaderBg transformation and show the modal content\r\n              self.animating = false;\r\n              Util.addClass(self.modal, 'cd-schedule-modal--animation-completed');\r\n              self.modalHeaderBg.removeEventListener('transitionend', cb);\r\n            });\r\n          }\r\n\r\n          //if browser do not support transitions -> no need to wait for the end of it\r\n          this.animationFallback();\r\n        };\r\n\r\n        ScheduleTemplate.prototype.closeModal = function () {\r\n          var self = this;\r\n          var mq = self.mq();\r\n\r\n          var item = self.element.getElementsByClassName('cd-schedule__event--selected')[0],\r\n            target = item.getElementsByTagName('a')[0];\r\n\r\n          this.animating = true;\r\n\r\n          if (mq == 'mobile') {\r\n            Util.removeClass(this.modal, 'cd-schedule-modal--open');\r\n            self.modal.addEventListener('transitionend', function cb() {\r\n              Util.removeClass(self.modal, 'cd-schedule-modal--content-loaded');\r\n              Util.removeClass(item, 'cd-schedule__event--selected');\r\n              self.animating = false;\r\n              self.modal.removeEventListener('transitionend', cb);\r\n            });\r\n          } else {\r\n            var eventPosition = target.getBoundingClientRect(),\r\n              eventTop = eventPosition.top,\r\n              eventLeft = eventPosition.left,\r\n              eventHeight = target.offsetHeight,\r\n              eventWidth = target.offsetWidth;\r\n\r\n            var modalStyle = window.getComputedStyle(self.modal),\r\n              modalTop = Number(modalStyle.getPropertyValue('top').replace('px', '')),\r\n              modalLeft = Number(modalStyle.getPropertyValue('left').replace('px', ''));\r\n\r\n            var modalTranslateX = eventLeft - modalLeft,\r\n              modalTranslateY = eventTop - modalTop;\r\n\r\n            Util.removeClass(this.modal, 'cd-schedule-modal--open cd-schedule-modal--animation-completed');\r\n\r\n            //change modal width/height and translate it\r\n            self.modal.style.width = eventWidth + 'px'; self.modal.style.height = eventHeight + 'px'; self.modal.style.transform = 'translateX(' + modalTranslateX + 'px) translateY(' + modalTranslateY + 'px)';\r\n            //scale down modalBodyBg element\r\n            self.modalBodyBg.style.transform = 'scaleX(0) scaleY(1)';\r\n            //scale down modalHeaderBg element\r\n            // self.modalHeaderBg.setAttribute('style', 'transform: scaleY(1)');\r\n            self.modalHeaderBg.style.transform = 'scaleY(1)';\r\n\r\n            self.modalHeaderBg.addEventListener('transitionend', function cb() {\r\n              //wait for the  end of the modalHeaderBg transformation and reset modal style\r\n              Util.addClass(self.modal, 'cd-schedule-modal--no-transition');\r\n              setTimeout(function () {\r\n                self.modal.removeAttribute('style');\r\n                self.modalBody.removeAttribute('style');\r\n                self.modalHeader.removeAttribute('style');\r\n                self.modalHeaderBg.removeAttribute('style');\r\n                self.modalBodyBg.removeAttribute('style');\r\n              }, 10);\r\n              setTimeout(function () {\r\n                Util.removeClass(self.modal, 'cd-schedule-modal--no-transition');\r\n              }, 20);\r\n              self.animating = false;\r\n              Util.removeClass(self.modal, 'cd-schedule-modal--content-loaded');\r\n              Util.removeClass(item, 'cd-schedule__event--selected');\r\n              self.modalHeaderBg.removeEventListener('transitionend', cb);\r\n            });\r\n          }\r\n\r\n          //if browser do not support transitions -> no need to wait for the end of it\r\n          this.animationFallback();\r\n        };\r\n\r\n        ScheduleTemplate.prototype.checkEventModal = function (modalOpen) {\r\n          // this function is used on resize to reset events/modal style\r\n          this.animating = true;\r\n          var self = this;\r\n          var mq = this.mq();\r\n          if (mq == 'mobile') {\r\n            //reset modal style on mobile\r\n            self.modal.removeAttribute('style');\r\n            self.modalBody.removeAttribute('style');\r\n            self.modalHeader.removeAttribute('style');\r\n            self.modalHeaderBg.removeAttribute('style');\r\n            self.modalBodyBg.removeAttribute('style');\r\n            Util.removeClass(self.modal, 'cd-schedule-modal--no-transition');\r\n            self.animating = false;\r\n          } else if (mq == 'desktop' && modalOpen) {\r\n            Util.addClass(self.modal, 'cd-schedule-modal--no-transition cd-schedule-modal--animation-completed');\r\n            var item = self.element.getElementsByClassName('cd-schedule__event--selected')[0],\r\n              target = item.getElementsByTagName('a')[0];\r\n\r\n            var eventPosition = target.getBoundingClientRect(),\r\n              eventTop = eventPosition.top,\r\n              eventLeft = eventPosition.left,\r\n              eventHeight = target.offsetHeight,\r\n              eventWidth = target.offsetWidth;\r\n\r\n            var windowWidth = window.innerWidth,\r\n              windowHeight = window.innerHeight;\r\n\r\n            var modalWidth = (windowWidth * .8 > self.modalMaxWidth) ? self.modalMaxWidth : windowWidth * .8,\r\n              modalHeight = (windowHeight * .8 > self.modalMaxHeight) ? self.modalMaxHeight : windowHeight * .8;\r\n\r\n            var HeaderBgScaleY = modalHeight / eventHeight,\r\n              BodyBgScaleX = (modalWidth - eventWidth);\r\n\r\n\r\n            setTimeout(function () {\r\n              self.modal.setAttribute('style', 'top:' + (windowHeight / 2 - modalHeight / 2) + 'px;left:' + (windowWidth / 2 - modalWidth / 2) + 'px;height:' + modalHeight + 'px;width:' + modalWidth + 'px;transform: translateY(0) translateX(0)');\r\n              //change modal modalBodyBg height/width\r\n              self.modalBodyBg.style.height = modalHeight + 'px'; self.modalBodyBg.style.transform = 'scaleY(1) scaleX(' + BodyBgScaleX + ')'; self.modalBodyBg.style.width = '1px';\r\n              //set modalHeader width\r\n              self.modalHeader.setAttribute('style', 'width:' + eventWidth + 'px');\r\n              //set modalBody left margin\r\n              self.modalBody.setAttribute('style', 'margin-left:' + eventWidth + 'px');\r\n              //change modal modalHeaderBg height/width and scale it\r\n              self.modalHeaderBg.setAttribute('style', 'height: ' + eventHeight + 'px;width:' + eventWidth + 'px; transform:scaleY(' + HeaderBgScaleY + ');');\r\n            }, 10);\r\n\r\n            setTimeout(function () {\r\n              Util.removeClass(self.modal, 'cd-schedule-modal--no-transition');\r\n              self.animating = false;\r\n            }, 20);\r\n\r\n          }\r\n        };\r\n\r\n        ScheduleTemplate.prototype.loadEventContent = function (content) {\r\n          // load the content of an event when user selects it\r\n          var self = this;\r\n\r\n          httpRequest = new XMLHttpRequest();\r\n          httpRequest.onreadystatechange = function () {\r\n            if (httpRequest.readyState === XMLHttpRequest.DONE) {\r\n              if (httpRequest.status === 200) {\r\n                self.modal.getElementsByClassName('cd-schedule-modal__event-info')[0].innerHTML = self.getEventContent(httpRequest.responseText);\r\n                Util.addClass(self.modal, 'cd-schedule-modal--content-loaded');\r\n              }\r\n            }\r\n          };\r\n          httpRequest.open('GET', content + '.html');\r\n          httpRequest.send();\r\n        };\r\n\r\n        ScheduleTemplate.prototype.getEventContent = function (string) {\r\n          // reset the loaded event content so that it can be inserted in the modal\r\n          var div = document.createElement('div');\r\n          div.innerHTML = string.trim();\r\n          return div.getElementsByClassName('cd-schedule-modal__event-info')[0].innerHTML;\r\n        };\r\n\r\n        ScheduleTemplate.prototype.animationFallback = function () {\r\n          if (!this.supportAnimation) { // fallback for browsers not supporting transitions\r\n            var event = new CustomEvent('transitionend');\r\n            self.modal.dispatchEvent(event);\r\n            self.modalHeaderBg.dispatchEvent(event);\r\n          }\r\n        };\r\n\r\n        ScheduleTemplate.prototype.mq = function () {\r\n          //get MQ value ('desktop' or 'mobile')\r\n          var self = this;\r\n          return window.getComputedStyle(this.element, '::before').getPropertyValue('content').replace(/'|\"/g, \"\");\r\n        };\r\n\r\n        function getScheduleTimestamp(time) {\r\n          //accepts hh:mm format - convert hh:mm to timestamp\r\n          time = time.replace(/ /g, '');\r\n          var timeArray = time.split(':');\r\n          var timeStamp = parseInt(timeArray[0]) * 60 + parseInt(timeArray[1]);\r\n          return timeStamp;\r\n        };\r\n\r\n        var scheduleTemplate = document.getElementsByClassName('js-cd-schedule'),\r\n          scheduleTemplateArray = [],\r\n          resizing = false;\r\n        if (scheduleTemplate.length > 0) { // init ScheduleTemplate objects\r\n          for (var i = 0; i < scheduleTemplate.length; i++) {\r\n            (function (i) {\r\n              scheduleTemplateArray.push(new ScheduleTemplate(scheduleTemplate[i]));\r\n            })(i);\r\n          }\r\n\r\n          window.addEventListener('resize', function (event) {\r\n            // on resize - update events position and modal position (if open)\r\n            if (!resizing) {\r\n              resizing = true;\r\n              (!window.requestAnimationFrame) ? setTimeout(checkResize, 250) : window.requestAnimationFrame(checkResize);\r\n            }\r\n          });\r\n\r\n          window.addEventListener('keyup', function (event) {\r\n            // close event modal when pressing escape key\r\n            if (event.keyCode && event.keyCode == 27 || event.key && event.key.toLowerCase() == 'escape') {\r\n              for (var i = 0; i < scheduleTemplateArray.length; i++) {\r\n                scheduleTemplateArray[i].closeModal();\r\n              }\r\n            }\r\n          });\r\n\r\n          function checkResize() {\r\n            for (var i = 0; i < scheduleTemplateArray.length; i++) {\r\n              scheduleTemplateArray[i].scheduleReset();\r\n            }\r\n            resizing = false;\r\n          };\r\n        }\r\n      }());\r\n\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"]}]}