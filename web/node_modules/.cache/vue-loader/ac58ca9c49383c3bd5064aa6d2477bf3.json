{"remainingRequest":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\src\\views\\pages\\devices\\Device.vue?vue&type=template&id=71b2172d&","dependencies":[{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\src\\views\\pages\\devices\\Device.vue","mtime":1580020620556},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1579332241744},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1579332241739}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"vx-card\",\n    [\n      _c(\n        \"vs-button\",\n        {\n          attrs: { color: \"primary\" },\n          on: {\n            click: function($event) {\n              return _vm.addDevice()\n            }\n          }\n        },\n        [_vm._v(\"Add Device\")]\n      ),\n      _c(\n        \"vs-table\",\n        {\n          attrs: {\n            \"max-items\": \"10\",\n            search: \"\",\n            pagination: \"\",\n            data: _vm.devices\n          },\n          scopedSlots: _vm._u([\n            {\n              key: \"default\",\n              fn: function(ref) {\n                var data = ref.data\n                return _vm._l(data, function(tr, indextr) {\n                  return _c(\n                    \"vs-tr\",\n                    { key: indextr },\n                    [\n                      _c(\"vs-td\", { attrs: { data: tr.device_id } }, [\n                        _vm._v(_vm._s(tr.device_id))\n                      ]),\n                      _c(\"vs-td\", { attrs: { data: tr.device_name } }, [\n                        _vm._v(_vm._s(tr.device_name))\n                      ]),\n                      _c(\"vs-td\", { attrs: { data: tr.lat } }, [\n                        _vm._v(_vm._s(tr.lat))\n                      ]),\n                      _c(\"vs-td\", { attrs: { data: tr.lon } }, [\n                        _vm._v(_vm._s(tr.lon))\n                      ]),\n                      _c(\n                        \"vs-td\",\n                        [\n                          _c(\"feather-icon\", {\n                            staticClass: \"cursor-pointer w-6 h-6 text-warning\",\n                            attrs: { icon: \"EditIcon\", size: \"small\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.edit(tr)\n                              }\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"vs-td\",\n                        [\n                          _c(\"feather-icon\", {\n                            staticClass: \"cursor-pointer w-6 h-6 text-danger\",\n                            attrs: { icon: \"Trash2Icon\", size: \"small\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.delete_user(tr)\n                              }\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                })\n              }\n            }\n          ])\n        },\n        [\n          _c(\n            \"template\",\n            { slot: \"thead\" },\n            [\n              _c(\"vs-th\", [_vm._v(\"device id\")]),\n              _c(\"vs-th\", [_vm._v(\"device name\")]),\n              _c(\"vs-th\", [_vm._v(\"lat\")]),\n              _c(\"vs-th\", [_vm._v(\"lon\")]),\n              _c(\"vs-th\", [_vm._v(\"edit\")]),\n              _c(\"vs-th\", [_vm._v(\"delete\")])\n            ],\n            1\n          )\n        ],\n        2\n      ),\n      _c(\n        \"vs-popup\",\n        {\n          staticClass: \"holamundo\",\n          attrs: { fullscreen: \"\", title: _vm.title, active: _vm.popupActive },\n          on: {\n            \"update:active\": function($event) {\n              _vm.popupActive = $event\n            }\n          }\n        },\n        [\n          _c(\"div\", { staticClass: \"vx-row\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"w-full md:w-1/2 mt-10 pl-5\" },\n              [\n                _c(\"vs-input\", {\n                  directives: [\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: \"required\",\n                      expression: \"'required'\"\n                    }\n                  ],\n                  staticClass: \"w-full\",\n                  attrs: {\n                    warning: _vm.errors.has(\"device_name\"),\n                    \"warning-text\": _vm.$t(\"device name is required\"),\n                    \"label-placeholder\": _vm.$t(\"device name\"),\n                    \"val-icon-warning\": \"warning\",\n                    name: \"device_name\",\n                    \"icon-pack\": \"feather\",\n                    icon: \"icon-user\",\n                    \"icon-no-border\": \"\"\n                  },\n                  model: {\n                    value: _vm.editObj.device_name,\n                    callback: function($$v) {\n                      _vm.$set(_vm.editObj, \"device_name\", $$v)\n                    },\n                    expression: \"editObj.device_name\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              { staticClass: \"w-1/2 md:w-1/4 mt-10 pl-5 pr-5\" },\n              [\n                _c(\"vs-input\", {\n                  directives: [\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: \"required\",\n                      expression: \"'required'\"\n                    }\n                  ],\n                  staticClass: \"w-full\",\n                  attrs: {\n                    warning: _vm.errors.has(\"lat\"),\n                    \"warning-text\": _vm.$t(\"please select location in map\"),\n                    \"label-placeholder\": _vm.$t(\"lat\"),\n                    \"val-icon-warning\": \"warning\",\n                    name: \"lat\",\n                    \"icon-pack\": \"feather\",\n                    icon: \"icon-user\",\n                    \"icon-no-border\": \"\"\n                  },\n                  model: {\n                    value: _vm.editObj.lat,\n                    callback: function($$v) {\n                      _vm.$set(_vm.editObj, \"lat\", $$v)\n                    },\n                    expression: \"editObj.lat\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              { staticClass: \"w-1/2 md:w-1/4 mt-10 pl-5 pr-5\" },\n              [\n                _c(\"vs-input\", {\n                  directives: [\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: \"required\",\n                      expression: \"'required'\"\n                    }\n                  ],\n                  staticClass: \"w-full\",\n                  attrs: {\n                    warning: _vm.errors.has(\"lon\"),\n                    \"warning-text\": _vm.$t(\"please select location in map\"),\n                    \"label-placeholder\": _vm.$t(\"lon\"),\n                    \"val-icon-warning\": \"warning\",\n                    name: \"lon\",\n                    \"icon-pack\": \"feather\",\n                    icon: \"icon-user\",\n                    \"icon-no-border\": \"\"\n                  },\n                  model: {\n                    value: _vm.editObj.lon,\n                    callback: function($$v) {\n                      _vm.$set(_vm.editObj, \"lon\", $$v)\n                    },\n                    expression: \"editObj.lon\"\n                  }\n                })\n              ],\n              1\n            )\n          ]),\n          _c(\"div\", { staticClass: \"vx-row\" }, [\n            _c(\"div\", { staticClass: \"vx-col w-full md:w-1/3 mt-10 mb-10\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"w-full pb-5\" },\n                [\n                  _c(\"label\", { staticClass: \"mt-10\" }, [\n                    _vm._v(\"device type\")\n                  ]),\n                  _c(\n                    \"vs-select\",\n                    {\n                      directives: [\n                        {\n                          name: \"validate\",\n                          rawName: \"v-validate\",\n                          value: \"required\",\n                          expression: \"'required'\"\n                        }\n                      ],\n                      staticClass: \"w-full\",\n                      attrs: {\n                        warning: _vm.errors.has(\"device_type\"),\n                        \"warning-text\": _vm.$t(\"device type id is required\"),\n                        \"val-icon-warning\": \"warning\",\n                        name: \"device_type\"\n                      },\n                      model: {\n                        value: _vm.editObj.device_type_id,\n                        callback: function($$v) {\n                          _vm.$set(_vm.editObj, \"device_type_id\", $$v)\n                        },\n                        expression: \"editObj.device_type_id\"\n                      }\n                    },\n                    _vm._l(_vm.device_types, function(item, index) {\n                      return _c(\"vs-select-item\", {\n                        key: index,\n                        attrs: {\n                          value: item.device_type_id,\n                          text: item.device_type_name\n                        }\n                      })\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\"label\", { staticClass: \"mt-10\", attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.$t(\"device_icon\")))\n              ]),\n              _vm.editObj.device_icon == \"\" || _vm.editObj.device_icon == null\n                ? _c(\"div\", { staticClass: \"con-upload\" }, [\n                    _c(\"div\", { staticClass: \"con-img-upload\" }, [\n                      _c(\"div\", { staticClass: \"con-input-upload\" }, [\n                        _c(\"input\", {\n                          ref: \"myFiles\",\n                          attrs: { type: \"file\" },\n                          on: { change: _vm.previewFiles }\n                        }),\n                        _c(\"span\", { staticClass: \"text-input\" }, [\n                          _vm._v(\"upload device icon\")\n                        ]),\n                        _c(\"span\", {\n                          staticClass: \"input-progress\",\n                          staticStyle: { width: \"0%\" }\n                        }),\n                        _c(\n                          \"button\",\n                          {\n                            staticClass:\n                              \"btn-upload-all vs-upload--button-upload\",\n                            attrs: {\n                              disabled: \"disabled\",\n                              type: \"button\",\n                              title: \"Upload\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"i\",\n                              {\n                                staticClass: \"material-icons notranslate\",\n                                attrs: { translate: \"translate\" }\n                              },\n                              [_vm._v(\"cloud_upload\")]\n                            )\n                          ]\n                        )\n                      ])\n                    ])\n                  ])\n                : _vm._e(),\n              _vm.editObj.device_icon != \"\" && _vm.editObj.device_icon != null\n                ? _c(\"div\", { staticClass: \"con-upload\" }, [\n                    _c(\"div\", { staticClass: \"con-img-upload\" }, [\n                      _c(\"div\", { staticClass: \"img-upload\" }, [\n                        _c(\n                          \"button\",\n                          {\n                            staticClass: \"btn-x-file\",\n                            on: {\n                              click: function($event) {\n                                _vm.editObj.device_icon = \"\"\n                              }\n                            }\n                          },\n                          [\n                            _c(\n                              \"i\",\n                              {\n                                staticClass: \"material-icons notranslate\",\n                                attrs: { translate: \"translate\" }\n                              },\n                              [_vm._v(\"clear\")]\n                            )\n                          ]\n                        ),\n                        _c(\"button\", { staticClass: \"btn-upload-file\" }, [\n                          _c(\n                            \"i\",\n                            {\n                              staticClass: \"material-icons notranslate\",\n                              attrs: { translate: \"translate\" }\n                            },\n                            [_vm._v(\"cloud_upload\")]\n                          ),\n                          _c(\"span\", [_vm._v(\"%\")])\n                        ]),\n                        _c(\"img\", {\n                          staticStyle: {\n                            \"max-width\": \"none\",\n                            \"max-height\": \"100%\"\n                          },\n                          attrs: { src: _vm.editObj.device_icon }\n                        })\n                      ]),\n                      _c(\n                        \"div\",\n                        { staticClass: \"con-input-upload disabled-upload\" },\n                        [\n                          _c(\"input\", {\n                            attrs: {\n                              type: \"file\",\n                              accept: \"image/*\",\n                              disabled: \"disabled\"\n                            }\n                          }),\n                          _c(\"span\", { staticClass: \"text-input\" }, [\n                            _vm._v(\"upload profile picture\")\n                          ]),\n                          _c(\"span\", {\n                            staticClass: \"input-progress\",\n                            staticStyle: { width: \"0%\" }\n                          }),\n                          _c(\n                            \"button\",\n                            {\n                              staticClass:\n                                \"btn-upload-all vs-upload--button-upload\",\n                              attrs: { type: \"button\", title: \"Upload\" }\n                            },\n                            [\n                              _c(\n                                \"i\",\n                                {\n                                  staticClass: \"material-icons notranslate\",\n                                  attrs: { translate: \"translate\" }\n                                },\n                                [_vm._v(\"cloud_upload\")]\n                              )\n                            ]\n                          )\n                        ]\n                      )\n                    ])\n                  ])\n                : _vm._e(),\n              _c(\"div\", { staticClass: \"mt-10\" }, [\n                _c(\"h5\", [_vm._v(\"Anchor (value 0-1)\")]),\n                _c(\"div\", { staticClass: \"vx-row\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"w-1/2 pl-5 pr-5\" },\n                    [\n                      _c(\"vs-input\", {\n                        directives: [\n                          {\n                            name: \"validate\",\n                            rawName: \"v-validate\",\n                            value: \"required|between:0,1\",\n                            expression: \"'required|between:0,1'\"\n                          }\n                        ],\n                        staticClass: \"w-full\",\n                        attrs: {\n                          warning: _vm.errors.has(\"anchor_x\"),\n                          \"warning-text\": _vm.$t(_vm.errors.first(\"anchor_x\")),\n                          \"label-placeholder\": _vm.$t(\"anchor x\"),\n                          \"val-icon-warning\": \"warning\",\n                          name: \"anchor_x\"\n                        },\n                        model: {\n                          value: _vm.editObj.anchor_x,\n                          callback: function($$v) {\n                            _vm.$set(_vm.editObj, \"anchor_x\", $$v)\n                          },\n                          expression: \"editObj.anchor_x\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"div\",\n                    { staticClass: \"w-1/2 pl-5 pr-5\" },\n                    [\n                      _c(\"vs-input\", {\n                        directives: [\n                          {\n                            name: \"validate\",\n                            rawName: \"v-validate\",\n                            value: \"required|between:0,1\",\n                            expression: \"'required|between:0,1'\"\n                          }\n                        ],\n                        staticClass: \"w-full\",\n                        attrs: {\n                          warning: _vm.errors.has(\"anchor_y\"),\n                          \"warning-text\": _vm.$t(_vm.errors.first(\"anchor_y\")),\n                          \"label-placeholder\": _vm.$t(\"anchor y\"),\n                          \"val-icon-warning\": \"warning\",\n                          name: \"anchor_y\"\n                        },\n                        model: {\n                          value: _vm.editObj.anchor_y,\n                          callback: function($$v) {\n                            _vm.$set(_vm.editObj, \"anchor_y\", $$v)\n                          },\n                          expression: \"editObj.anchor_y\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"div\",\n                    { staticClass: \"w-1/2 pl-5 pr-5\" },\n                    [\n                      _c(\"label\", { staticClass: \"mt-10\" }, [_vm._v(\"size\")]),\n                      _c(\n                        \"vs-select\",\n                        {\n                          directives: [\n                            {\n                              name: \"validate\",\n                              rawName: \"v-validate\",\n                              value: \"required\",\n                              expression: \"'required'\"\n                            }\n                          ],\n                          staticClass: \"w-full\",\n                          attrs: {\n                            warning: _vm.errors.has(\"size\"),\n                            \"warning-text\": _vm.$t(\"size is required\"),\n                            \"val-icon-warning\": \"warning\",\n                            name: \"size\"\n                          },\n                          model: {\n                            value: _vm.editObj.size,\n                            callback: function($$v) {\n                              _vm.$set(_vm.editObj, \"size\", $$v)\n                            },\n                            expression: \"editObj.size\"\n                          }\n                        },\n                        _vm._l(_vm.sizes, function(item, index) {\n                          return _c(\"vs-select-item\", {\n                            key: index,\n                            attrs: { value: item, text: item }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ])\n              ]),\n              _c(\n                \"div\",\n                { staticClass: \"mt-10\" },\n                [\n                  _c(\n                    \"vs-button\",\n                    {\n                      ref: \"loadableButton\",\n                      staticClass: \"vs-con-loading__container mr-5 ml-5\",\n                      attrs: { id: \"button-with-loading\", vslor: \"primary\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.save()\n                        }\n                      }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"save\")))]\n                  ),\n                  _c(\n                    \"vs-button\",\n                    {\n                      attrs: { color: \"danger\", type: \"border\" },\n                      on: {\n                        click: function($event) {\n                          _vm.popupActive = false\n                        }\n                      }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"cancel\")))]\n                  )\n                ],\n                1\n              )\n            ]),\n            _c(\n              \"div\",\n              { staticClass: \"vx-col w-full md:w-2/3 p-5 \" },\n              [\n                _vm.rendermap\n                  ? _c(\n                      \"vl-map\",\n                      {\n                        ref: \"map\",\n                        staticStyle: { height: \"700px\" },\n                        attrs: {\n                          \"load-tiles-while-animating\": true,\n                          \"load-tiles-while-interacting\": true,\n                          \"data-projection\": \"EPSG:4326\"\n                        },\n                        on: {\n                          postcompose: _vm.onMapPostCompose,\n                          click: _vm.choose_position\n                        }\n                      },\n                      [\n                        _c(\"vl-view\", {\n                          attrs: {\n                            zoom: _vm.zoom,\n                            center: _vm.center,\n                            rotation: _vm.rotation\n                          },\n                          on: {\n                            \"update:zoom\": function($event) {\n                              _vm.zoom = $event\n                            },\n                            \"update:center\": function($event) {\n                              _vm.center = $event\n                            },\n                            \"update:rotation\": function($event) {\n                              _vm.rotation = $event\n                            }\n                          }\n                        }),\n                        _c(\n                          \"vl-layer-tile\",\n                          { attrs: { id: \"osm\" } },\n                          [_c(\"vl-source-osm\")],\n                          1\n                        ),\n                        _c(\n                          \"vl-layer-tile\",\n                          { attrs: { id: \"osm\" } },\n                          [_c(\"vl-source-osm\")],\n                          1\n                        ),\n                        _c(\"vl-feature\", {\n                          ref: \"marker\",\n                          attrs: {\n                            id: \"marker\",\n                            properties: { start: Date.now(), duration: 1000 }\n                          },\n                          scopedSlots: _vm._u(\n                            [\n                              {\n                                key: \"default\",\n                                fn: function(feature) {\n                                  return [\n                                    _c(\"vl-geom-point\", {\n                                      attrs: {\n                                        coordinates:\n                                          _vm.editObj.lat == \"\" ||\n                                          _vm.editObj.lon == \"\"\n                                            ? [0, 0]\n                                            : [\n                                                parseFloat(_vm.editObj.lon),\n                                                parseFloat(_vm.editObj.lat)\n                                              ]\n                                      }\n                                    }),\n                                    _c(\n                                      \"vl-style-box\",\n                                      [\n                                        _c(\"vl-style-icon\", {\n                                          attrs: {\n                                            src:\n                                              _vm.editObj.device_icon == \"\"\n                                                ? require(\"@/assets/flag.png\")\n                                                : _vm.editObj.device_icon,\n                                            scale: _vm.editObj.size\n                                              ? _vm.editObj.size\n                                              : 1,\n                                            anchor:\n                                              _vm.editObj.anchor_x == \"\" ||\n                                              _vm.editObj.anchor_y == \"\"\n                                                ? [0.1, 0.95]\n                                                : [\n                                                    _vm.editObj.anchor_x,\n                                                    _vm.editObj.anchor_y\n                                                  ],\n                                            size: [128, 128]\n                                          }\n                                        })\n                                      ],\n                                      1\n                                    ),\n                                    feature.geometry\n                                      ? _c(\"vl-overlay\", {\n                                          attrs: {\n                                            position: _vm.pointOnSurface(\n                                              feature.geometry\n                                            ),\n                                            offset: [10, 10]\n                                          }\n                                        })\n                                      : _vm._e()\n                                  ]\n                                }\n                              }\n                            ],\n                            null,\n                            false,\n                            3833031685\n                          )\n                        })\n                      ],\n                      1\n                    )\n                  : _vm._e()\n              ],\n              1\n            )\n          ])\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}