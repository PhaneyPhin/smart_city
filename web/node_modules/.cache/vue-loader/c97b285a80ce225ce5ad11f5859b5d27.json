{"remainingRequest":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\src\\views\\pages\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\src\\views\\pages\\Login.vue","mtime":1580272951486},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1579332188909},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1579332241739}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nimport service from '@/service/service';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            username: 'demo@demo.com',\r\n            password: 'demodemo',\r\n            checkbox_remember_me: false\r\n        }\r\n    },\r\n    computed: {\r\n        validateForm() {\r\n            return !this.errors.any() && this.username != '' && this.password != '';\r\n        },\r\n    },\r\n    methods: {\r\n        async login() {\r\n            this.$vs.loading({\r\n                background: this.backgroundLoading,\r\n                color: this.colorLoading,\r\n                container: \"#button-with-loading\",\r\n                scale: 0.45\r\n            });\r\n            try {\r\n                console.log(result);\r\n                var result = await service.postData(\"auth/login\", {\r\n                username: this.username,\r\n                password: this.password\r\n                });\r\n                service.setToken(result.token);\r\n\r\n               if(result.code==1){\r\n                    var { role_name, first_name, last_name } = service.getUser().user;\r\n                    this.$store.dispatch(\"updateUserRole\", role_name);\r\n                    this.$acl.change(role_name);\r\n                    // this.$store.dispatch(\"setProfile\", result.img_profile);\r\n                    // this.$store.dispatch(\r\n                    // \"setDisplayUsername\",\r\n                    // first_name + \" \" + last_name\r\n                    // );\r\n                    this.$router.push(\"/dashboard/analytics\");\r\n\r\n                    this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\r\n               }else{\r\n                    await this.$swal(this.$t(\"Login failed\"), this.$t(result.message), \"error\");\r\n               }\r\n            } catch (e) {\r\n                await this.$swal(this.$t(\"Login failed\"), this.$t(e.message), \"error\");\r\n            }\r\n            this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\r\n        },\r\n\r\n        loginAuth0() {\r\n            if (this.$store.state.auth.isUserLoggedIn()) {\r\n                this.notifyAlreadyLogedIn();\r\n                return false\r\n            }\r\n            this.$auth.login({ target: this.$route.query.to });\r\n        },\r\n\r\n        // Google login\r\n        loginWithGoogle() {\r\n            this.$store.dispatch('auth/loginWithGoogle', {notify: this.$vs.notify})\r\n        },\r\n\r\n        // Facebook login\r\n        loginWithFacebook() {\r\n            this.$store.dispatch('auth/loginWithFacebook', {notify: this.$vs.notify})\r\n        },\r\n\r\n        // Twitter login\r\n        loginWithTwitter() {\r\n            this.$store.dispatch('auth/loginWithTwitter', {notify: this.$vs.notify})\r\n        },\r\n\r\n        // Github login\r\n        loginWithGithub() {\r\n            this.$store.dispatch('auth/loginWithGithub', {notify: this.$vs.notify})\r\n        },\r\n\r\n        notifyAlreadyLogedIn() {\r\n            this.$vs.notify({\r\n                title: 'Login Attempt',\r\n                text: 'You are already logged in!',\r\n                iconPack: 'feather',\r\n                icon: 'icon-alert-circle',\r\n                color: 'warning'\r\n            });\r\n        },\r\n        registerUser() {\r\n            if(this.$store.state.auth.isUserLoggedIn()) {\r\n                this.notifyAlreadyLogedIn();\r\n                return false;\r\n            }\r\n            this.$router.push('/pages/register');\r\n        }\r\n    }\r\n}\r\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views/pages","sourcesContent":["<!-- =========================================================================================\r\n    File Name: Login.vue\r\n    Description: Login Page\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n    <div class=\"h-screen flex w-full bg-img vx-row no-gutter items-center justify-center\" id=\"page-login\">\r\n        <div class=\"vx-col sm:w-1/2 md:w-1/2 lg:w-3/4 xl:w-3/5 sm:m-0 m-4\">\r\n            <vx-card>\r\n                <div slot=\"no-body\" class=\"full-page-bg-color\">\r\n                    <div class=\"vx-row no-gutter justify-center items-center\">\r\n                        <div class=\"vx-col hidden lg:block lg:w-1/2\">\r\n                            <img src=\"@/assets/images/pages/login.png\" alt=\"login\" class=\"mx-auto\">\r\n                        </div>\r\n                        <div class=\"vx-col sm:w-full md:w-full lg:w-1/2 d-theme-dark-bg\">\r\n                            <div class=\"p-8\">\r\n                                <div class=\"vx-card__title mb-8\">\r\n                                    <h4 class=\"mb-4\">Login</h4>\r\n                                    <p>Welcome back, please login to your account.</p>\r\n                                </div>\r\n                                <vs-input\r\n                                    v-validate=\"'required'\"\r\n                                    data-vv-validate-on=\"blur\"\r\n                                    name=\"email\"\r\n                                    icon=\"icon icon-user\"\r\n                                    icon-pack=\"feather\"\r\n                                    label-placeholder=\"username\"\r\n                                    v-model=\"username\"\r\n                                    class=\"w-full no-icon-border\"/>\r\n                                <span class=\"text-danger text-sm\">{{ errors.first('username') }}</span>\r\n\r\n                                <vs-input\r\n                                    data-vv-validate-on=\"blur\"\r\n                                    v-validate=\"'required|min:6|max:10'\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    icon=\"icon icon-lock\"\r\n                                    icon-pack=\"feather\"\r\n                                    label-placeholder=\"Password\"\r\n                                    v-model=\"password\"\r\n                                    class=\"w-full mt-6 no-icon-border\" />\r\n                                <span class=\"text-danger text-sm\">{{ errors.first('password') }}</span>\r\n\r\n                               \r\n                                <vs-button class=\"float-right mb-20 mt-5\" id='button-with-loading' :disabled=\"!validateForm\" @click=\"login\">Login</vs-button>\r\n\r\n\r\n                               \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </vx-card>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport service from '@/service/service';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            username: 'demo@demo.com',\r\n            password: 'demodemo',\r\n            checkbox_remember_me: false\r\n        }\r\n    },\r\n    computed: {\r\n        validateForm() {\r\n            return !this.errors.any() && this.username != '' && this.password != '';\r\n        },\r\n    },\r\n    methods: {\r\n        async login() {\r\n            this.$vs.loading({\r\n                background: this.backgroundLoading,\r\n                color: this.colorLoading,\r\n                container: \"#button-with-loading\",\r\n                scale: 0.45\r\n            });\r\n            try {\r\n                console.log(result);\r\n                var result = await service.postData(\"auth/login\", {\r\n                username: this.username,\r\n                password: this.password\r\n                });\r\n                service.setToken(result.token);\r\n\r\n               if(result.code==1){\r\n                    var { role_name, first_name, last_name } = service.getUser().user;\r\n                    this.$store.dispatch(\"updateUserRole\", role_name);\r\n                    this.$acl.change(role_name);\r\n                    // this.$store.dispatch(\"setProfile\", result.img_profile);\r\n                    // this.$store.dispatch(\r\n                    // \"setDisplayUsername\",\r\n                    // first_name + \" \" + last_name\r\n                    // );\r\n                    this.$router.push(\"/dashboard/analytics\");\r\n\r\n                    this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\r\n               }else{\r\n                    await this.$swal(this.$t(\"Login failed\"), this.$t(result.message), \"error\");\r\n               }\r\n            } catch (e) {\r\n                await this.$swal(this.$t(\"Login failed\"), this.$t(e.message), \"error\");\r\n            }\r\n            this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\r\n        },\r\n\r\n        loginAuth0() {\r\n            if (this.$store.state.auth.isUserLoggedIn()) {\r\n                this.notifyAlreadyLogedIn();\r\n                return false\r\n            }\r\n            this.$auth.login({ target: this.$route.query.to });\r\n        },\r\n\r\n        // Google login\r\n        loginWithGoogle() {\r\n            this.$store.dispatch('auth/loginWithGoogle', {notify: this.$vs.notify})\r\n        },\r\n\r\n        // Facebook login\r\n        loginWithFacebook() {\r\n            this.$store.dispatch('auth/loginWithFacebook', {notify: this.$vs.notify})\r\n        },\r\n\r\n        // Twitter login\r\n        loginWithTwitter() {\r\n            this.$store.dispatch('auth/loginWithTwitter', {notify: this.$vs.notify})\r\n        },\r\n\r\n        // Github login\r\n        loginWithGithub() {\r\n            this.$store.dispatch('auth/loginWithGithub', {notify: this.$vs.notify})\r\n        },\r\n\r\n        notifyAlreadyLogedIn() {\r\n            this.$vs.notify({\r\n                title: 'Login Attempt',\r\n                text: 'You are already logged in!',\r\n                iconPack: 'feather',\r\n                icon: 'icon-alert-circle',\r\n                color: 'warning'\r\n            });\r\n        },\r\n        registerUser() {\r\n            if(this.$store.state.auth.isUserLoggedIn()) {\r\n                this.notifyAlreadyLogedIn();\r\n                return false;\r\n            }\r\n            this.$router.push('/pages/register');\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#page-login {\r\n    .social-login {\r\n        .bg-facebook {\r\n          background-color: #1551b1;\r\n        }\r\n        .bg-twitter {\r\n          background-color: #00aaff;\r\n        }\r\n        .bg-google {\r\n          background-color: #4285F4;\r\n        }\r\n        .bg-github {\r\n          background-color: #333;\r\n        }\r\n    }\r\n}\r\n</style>\r\n"]}]}