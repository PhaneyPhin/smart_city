{"remainingRequest":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\src\\views\\pages\\TestResize.vue?vue&type=template&id=0a11a26a&","dependencies":[{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\src\\views\\pages\\TestResize.vue","mtime":1580192141096},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1579332241744},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1579332241739}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"div\",\n        { staticClass: \"w-full\", staticStyle: { \"text-align\": \"right\" } },\n        [\n          _c(\n            \"vs-button\",\n            {\n              attrs: { color: \"primary\" },\n              on: {\n                click: function($event) {\n                  return _vm.addDashboard()\n                }\n              }\n            },\n            [_vm._v(\"add dashboard\")]\n          )\n        ],\n        1\n      ),\n      _c(\"list-chart\"),\n      _c(\n        \"vs-popup\",\n        {\n          attrs: { title: \"Chart Description\", active: _vm.popupActive },\n          on: {\n            \"update:active\": function($event) {\n              _vm.popupActive = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"form\",\n            [\n              _c(\"vs-input\", {\n                directives: [\n                  {\n                    name: \"validate\",\n                    rawName: \"v-validate\",\n                    value: \"required\",\n                    expression: \"'required'\"\n                  }\n                ],\n                staticClass: \"w-full mt-5\",\n                attrs: {\n                  warning: _vm.errors.has(\"chart_title\"),\n                  \"warning-text\": _vm.$t(\"chart title is required\"),\n                  \"label-placeholder\": _vm.$t(\"chart title\"),\n                  \"val-icon-warning\": \"warning\",\n                  name: \"chart_title\",\n                  \"icon-pack\": \"feather\",\n                  icon: \"icon-user\",\n                  \"icon-no-border\": \"\"\n                },\n                model: {\n                  value: _vm.chart_title,\n                  callback: function($$v) {\n                    _vm.chart_title = $$v\n                  },\n                  expression: \"chart_title\"\n                }\n              }),\n              _c(\"vs-input\", {\n                directives: [\n                  {\n                    name: \"validate\",\n                    rawName: \"v-validate\",\n                    value: \"required\",\n                    expression: \"'required'\"\n                  }\n                ],\n                staticClass: \"w-full mt-5\",\n                attrs: {\n                  warning: _vm.errors.has(\"chart_name\"),\n                  \"warning-text\": _vm.$t(\"chart name is required\"),\n                  \"label-placeholder\": _vm.$t(\"chart name\"),\n                  \"val-icon-warning\": \"warning\",\n                  name: \"chart_name\",\n                  \"icon-pack\": \"feather\",\n                  icon: \"icon-user\",\n                  \"icon-no-border\": \"\"\n                },\n                model: {\n                  value: _vm.chart_name,\n                  callback: function($$v) {\n                    _vm.chart_name = $$v\n                  },\n                  expression: \"chart_name\"\n                }\n              }),\n              _c(\"div\", { staticClass: \"mt-5\" }, [\n                _c(\"label\", [_vm._v(\"please select the chart\")]),\n                _c(\n                  \"select\",\n                  {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: \"required\",\n                        expression: \"'required'\"\n                      },\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.chart_type,\n                        expression: \"chart_type\"\n                      }\n                    ],\n                    staticClass: \"vs-inputx vs-input--input normal\",\n                    attrs: { name: \"chart_type\" },\n                    on: {\n                      change: function($event) {\n                        var $$selectedVal = Array.prototype.filter\n                          .call($event.target.options, function(o) {\n                            return o.selected\n                          })\n                          .map(function(o) {\n                            var val = \"_value\" in o ? o._value : o.value\n                            return val\n                          })\n                        _vm.chart_type = $event.target.multiple\n                          ? $$selectedVal\n                          : $$selectedVal[0]\n                      }\n                    }\n                  },\n                  [\n                    _vm._l(_vm.chart_types, function(item, index) {\n                      return _c(\n                        \"option\",\n                        { key: index, domProps: { value: item.chart_type_id } },\n                        [_vm._v(_vm._s(item.chart_type_name))]\n                      )\n                    }),\n                    _vm._v(\"/>\\n            \")\n                  ],\n                  2\n                )\n              ]),\n              _c(\"div\", { staticClass: \"mt-5\" }),\n              _c(\n                \"div\",\n                { staticClass: \"mt-5 vx-row pl-5 pr-5\" },\n                [\n                  _c(\n                    \"vs-button\",\n                    {\n                      staticClass: \"mt-5 block\",\n                      attrs: { type: \"filled\" },\n                      on: {\n                        click: function($event) {\n                          $event.preventDefault()\n                          return _vm.addSeries()\n                        }\n                      }\n                    },\n                    [_vm._v(\"Add Serie\")]\n                  ),\n                  _c(\n                    \"vs-button\",\n                    {\n                      staticClass: \"mt-5 ml-5 block\",\n                      attrs: { type: \"filled\", color: \"danger\" },\n                      on: {\n                        click: function($event) {\n                          $event.preventDefault()\n                          return _vm.removeSerie()\n                        }\n                      }\n                    },\n                    [_vm._v(\"remove one\")]\n                  )\n                ],\n                1\n              ),\n              _vm._l(_vm.list_series, function(serie, index_serie) {\n                return _c(\n                  \"div\",\n                  { key: index_serie, staticClass: \"pl-10 pr-10\" },\n                  [\n                    _c(\"div\", { staticClass: \"mt-5\" }, [\n                      _c(\"label\", [_vm._v(\"Device\")]),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"validate\",\n                              rawName: \"v-validate\",\n                              value: \"required\",\n                              expression: \"'required'\"\n                            },\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: serie.device_id,\n                              expression: \"serie.device_id\"\n                            }\n                          ],\n                          staticClass: \"vs-inputx vs-input--input normal\",\n                          attrs: { name: \"chart_type\" },\n                          on: {\n                            change: [\n                              function($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function(o) {\n                                    return o.selected\n                                  })\n                                  .map(function(o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  serie,\n                                  \"device_id\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function($event) {\n                                return _vm.onDeviceChange(index_serie)\n                              }\n                            ]\n                          }\n                        },\n                        [\n                          _vm._l(_vm.devices, function(item, index) {\n                            return _c(\n                              \"option\",\n                              {\n                                key: index,\n                                domProps: { value: item.device_id }\n                              },\n                              [\n                                _vm._v(\n                                  _vm._s(item.device_name) +\n                                    \"(\" +\n                                    _vm._s(item.device_id) +\n                                    \")\"\n                                )\n                              ]\n                            )\n                          }),\n                          _vm._v(\"/>\\n            \")\n                        ],\n                        2\n                      )\n                    ]),\n                    _c(\"label\", [_vm._v(\"Column\")]),\n                    _c(\n                      \"select\",\n                      {\n                        directives: [\n                          {\n                            name: \"validate\",\n                            rawName: \"v-validate\",\n                            value: \"required\",\n                            expression: \"'required'\"\n                          },\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: serie.column_name,\n                            expression: \"serie.column_name\"\n                          }\n                        ],\n                        staticClass: \"vs-inputx vs-input--input normal\",\n                        attrs: { name: \"chart_type\" },\n                        on: {\n                          change: function($event) {\n                            var $$selectedVal = Array.prototype.filter\n                              .call($event.target.options, function(o) {\n                                return o.selected\n                              })\n                              .map(function(o) {\n                                var val = \"_value\" in o ? o._value : o.value\n                                return val\n                              })\n                            _vm.$set(\n                              serie,\n                              \"column_name\",\n                              $event.target.multiple\n                                ? $$selectedVal\n                                : $$selectedVal[0]\n                            )\n                          }\n                        }\n                      },\n                      [\n                        _vm._l(serie.columns, function(item, index) {\n                          return _c(\n                            \"option\",\n                            {\n                              key: index,\n                              domProps: { value: item.column_name }\n                            },\n                            [_vm._v(_vm._s(item.column_name))]\n                          )\n                        }),\n                        _vm._v(\"/>\\n            \")\n                      ],\n                      2\n                    )\n                  ]\n                )\n              }),\n              _c(\n                \"vs-button\",\n                {\n                  staticClass: \"mt-5 block\",\n                  attrs: { type: \"filled\" },\n                  on: {\n                    click: function($event) {\n                      $event.preventDefault()\n                      return _vm.submitForm($event)\n                    }\n                  }\n                },\n                [_vm._v(\"Submit\")]\n              )\n            ],\n            2\n          )\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}