{"remainingRequest":"D:\\DTC PROJECT\\booking\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DTC PROJECT\\booking\\web\\src\\views\\Schedule.vue?vue&type=style&index=0&id=7c63f19d&scoped=true&lang=css&","dependencies":[{"path":"D:\\DTC PROJECT\\booking\\web\\src\\views\\Schedule.vue","mtime":1577193294172},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\css-loader\\index.js","mtime":1567052517015},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.jqx-fill-state-disabled {\r\n  cursor: default;\r\n  color: #000;\r\n  opacity: 1;\r\n  filter: Alpha(Opacity=45);\r\n}\r\n",{"version":3,"sources":["Schedule.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;AACA;AACA","file":"Schedule.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"w-full mb-base\">\r\n    <vx-card>\r\n      <h6>{{ $t(\"Schedule Table\") }}</h6>\r\n      <div class=\"vx-row mb-10\">\r\n        <div class=\"vx-col md:w-1/3 mt-6\">\r\n          <label>{{ $t(\"Building\") }}</label>\r\n          <vs-select class=\"w-full\" v-model=\"editObj.building_id\" :danger=\"invalid.building_id\">\r\n            <vs-select-item\r\n              :key=\"index\"\r\n              :value=\"item.building_id\"\r\n              :text=\"$t(item.building_name)\"\r\n              v-for=\"(item, index) in buildings\"\r\n            />\r\n          </vs-select>\r\n          <div class=\"errors\" v-if=\"invalid.building_id\">{{ $t(\"please select the buildign\") }}</div>\r\n        </div>\r\n        <div class=\"vx-col md:w-1/3 mt-6\">\r\n          <label>{{ $t(\"room\") }}</label>\r\n          <vs-select class=\"w-full\" v-model=\"editObj.room_id\" :danger=\"invalid.room_id\">\r\n            <vs-select-item\r\n              :key=\"index\"\r\n              :value=\"item.room_id\"\r\n              :text=\"$t(item.room_name)\"\r\n              v-for=\"(item, index) in rooms\"\r\n            />\r\n          </vs-select>\r\n          <div class=\"errors\" v-if=\"invalid.room_id\">{{ $t(\"please select the room_id\") }}</div>\r\n        </div>\r\n        <div class=\"vx-col md:w-1/3 mt-6\">\r\n          <vs-button\r\n            ref=\"loadableButton\"\r\n            id=\"button-with-loading\"\r\n            class=\"vs-con-loading__container mt-5\"\r\n            vslor=\"primary\"\r\n            @click=\"search()\"\r\n          >{{ $t(\"search\") }}</vs-button>\r\n        </div>\r\n      </div>\r\n      <JqxScheduler\r\n        v-if=\"rerender\"\r\n        ref=\"myScheduler\"\r\n        :date=\"date\"\r\n        width=\"100%\"\r\n        height=\"800\"\r\n        :source=\"source\"\r\n        :view=\"'weekView'\"\r\n        :showLegend=\"true\"\r\n        :resources=\"resources\"\r\n        :appointmentDataFields=\"appointmentDataFields\"\r\n        :views=\"views\"\r\n        :editDialogOpen=\"editDialogOpen\"\r\n        :disabled=\"true\"\r\n        :theme=\"'material'\"\r\n      />\r\n    </vx-card>\r\n  </div>\r\n</template>\r\n<style scoped>\r\n.jqx-fill-state-disabled {\r\n  cursor: default;\r\n  color: #000;\r\n  opacity: 1;\r\n  filter: Alpha(Opacity=45);\r\n}\r\n</style>\r\n<script>\r\nimport JqxScheduler from \"jqwidgets-scripts/jqwidgets-vue/vue_jqxscheduler.vue\";\r\nimport service from \"@/service/service\";\r\nimport { async } from \"q\";\r\nimport moment from \"moment\";\r\nexport default {\r\n  components: {\r\n    JqxScheduler\r\n  },\r\n  data: function() {\r\n    return {\r\n      rerender: false,\r\n      submitted: false,\r\n      editObj: { building_id: \"\", room_id: \"\" },\r\n      buildings: [],\r\n      rooms: [],\r\n      date: new jqx.date(),\r\n      source: new jqx.dataAdapter(this.source),\r\n      resources: {\r\n        colorScheme: \"scheme05\",\r\n        dataField: \"calendar\",\r\n        source: new jqx.dataAdapter(this.source)\r\n      },\r\n      appointmentDataFields: {\r\n        from: \"start\",\r\n        to: \"end\",\r\n        id: \"id\",\r\n        description: \"description\",\r\n        location: \"place\",\r\n        subject: \"subject\",\r\n        resourceId: \"calendar\",\r\n        background: \"background\"\r\n      },\r\n      views: [\"dayView\", \"weekView\", \"monthView\", \"agendaView\"]\r\n    };\r\n  },\r\n  beforeCreate: async function() {\r\n    this.editObj = { building_id: \"\", room_id: \"\" };\r\n    var appointments = new Array();\r\n\r\n    this.source = {\r\n      dataType: \"array\",\r\n      dataFields: [\r\n        { name: \"id\", type: \"string\" },\r\n        { name: \"description\", type: \"string\" },\r\n        { name: \"location\", type: \"string\" },\r\n        { name: \"subject\", type: \"string\" },\r\n        { name: \"calendar\", type: \"string\" },\r\n        { name: \"start\", type: \"date\" },\r\n        { name: \"end\", type: \"date\" },\r\n        { name: \"background\", type: \"string\" }\r\n      ],\r\n      id: \"id\",\r\n      localData: appointments\r\n    };\r\n  },\r\n  async created() {\r\n    var result = await service.postData(\"building/getBuilding\", {});\r\n    this.buildings = result.data;\r\n  },\r\n  computed: {\r\n    invalid() {\r\n      var require = x => this.editObj[x] == \"\" && this.submitted;\r\n      return {\r\n        building_id: require(\"building_id\"),\r\n        room_id: require(\"room_id\")\r\n      };\r\n    },\r\n    isInvalid() {\r\n      return this.invalid.building_id || this.invalid.room_id;\r\n    }\r\n  },\r\n  mounted: function() {\r\n    var appointments = new Array();\r\n    this.schedule(appointments);\r\n  },\r\n  methods: {\r\n    editDialogOpen: function(dialog, fields, editAppointment) {\r\n      // this.$refs.myScheduler(\"closeDialog\");\r\n    },\r\n    serperateDate(date) {\r\n      var year = moment(date, \"YYYY-MM-DD HH:mm:ss\").years();\r\n      var month = moment(date, \"YYYY-MM-DD HH:mm:ss\").months();\r\n      var day = moment(date, \"YYYY-MM-DD HH:mm:ss\").dates();\r\n      var hour = moment(date, \"YYYY-MM-DD HH:mm:ss\").hours();\r\n      var minute = moment(date, \"YYYY-MM-DD HH:mm:ss\").minutes();\r\n      var second = moment(date, \"YYYY-MM-DD HH:mm:ss\").seconds();\r\n      return new Date(year, month, day, hour, minute, second);\r\n    },\r\n    async search() {\r\n      this.submitted = true;\r\n      if (!this.isInvalid) {\r\n        var respose = await service.postData(\"get_room_booking\", this.editObj);\r\n        var bookings = respose.data;\r\n        var appointments = new Array();\r\n        bookings.forEach(data => {\r\n          // var { year, month, day, hour, minute, second } = this.serperateDate(\r\n          //   data.start_date\r\n          // );\r\n          // var start_date = new Date(year, month, day, hour, minute, second);\r\n          // var end = this.serperateDate(\r\n          //   data.end_date\r\n          // );\r\n          // var end_date = new Date(year, month, day, hour, minute, second);\r\n          appointments.push({\r\n            id: \"id3\",\r\n            subject:\r\n              data.first_name + \" \" + data.last_name + \" : \" + data.subject,\r\n            calendar: this.editObj.room_id,\r\n            start: this.serperateDate(data.start_date),\r\n            end: this.serperateDate(data.end_date),\r\n            background: \"#00FF00\"\r\n          });\r\n        });\r\n        console.log(appointments);\r\n        this.schedule(appointments);\r\n      }\r\n    },\r\n    schedule(data) {\r\n      this.rerender = false;\r\n      this.$nextTick(() => {\r\n        this.rerender = true;\r\n        this.source = {\r\n          dataType: \"array\",\r\n          dataFields: [\r\n            { name: \"id\", type: \"string\" },\r\n            { name: \"description\", type: \"string\" },\r\n            { name: \"location\", type: \"string\" },\r\n            { name: \"subject\", type: \"string\" },\r\n            { name: \"calendar\", type: \"string\" },\r\n            { name: \"start\", type: \"date\" },\r\n            { name: \"end\", type: \"date\" },\r\n            { background: \"background\" }\r\n          ],\r\n          id: \"id\",\r\n          localData: data\r\n        };\r\n        this.ource = new jqx.dataAdapter(this.source);\r\n        this.resources = {\r\n          colorScheme: \"scheme05\",\r\n          dataField: \"calendar\",\r\n          source: new jqx.dataAdapter(this.source)\r\n        };\r\n        this.$nextTick(() => {\r\n          this.$refs.myScheduler.ensureAppointmentVisible(\"id1\");\r\n        });\r\n      });\r\n    }\r\n  },\r\n  watch: {\r\n    async \"editObj.building_id\"(val) {\r\n      this.editObj.room_id = \"\";\r\n\r\n      var result = await service.postData(\"getRoomByBuilding\", {\r\n        building_id: this.editObj.building_id\r\n      });\r\n      this.rooms = result.data;\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}