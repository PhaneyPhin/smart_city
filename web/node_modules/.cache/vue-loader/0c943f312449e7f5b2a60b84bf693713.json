{"remainingRequest":"D:\\DTC PROJECT\\booking\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DTC PROJECT\\booking\\web\\src\\views\\UpdatePassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DTC PROJECT\\booking\\web\\src\\views\\UpdatePassword.vue","mtime":1578638666245},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport service from \"@/service/service\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      submitted: false,\r\n      editObj: {}\r\n    };\r\n  },\r\n  computed: {\r\n    invalid() {\r\n      var require = x => this.editObj[x] == \"\" && this.submitted;\r\n      return {\r\n        password: require(\"password\"),\r\n        new_password: require(\"new_password\"),\r\n        compare_new_password:\r\n          this.editObj.new_password == this.editObj.password &&\r\n          this.editObj.password != \"\",\r\n        confirm_password:\r\n          this.editObj.confirm_password != this.editObj.new_password &&\r\n          this.submitted\r\n      };\r\n    },\r\n    isInvalid() {\r\n      return (\r\n        this.invalid.password ||\r\n        this.invalid.new_password ||\r\n        this.invalid.confirm_password\r\n      );\r\n    }\r\n  },\r\n  methods: {\r\n    async init() {\r\n      this.submitted = false;\r\n      this.editObj = {\r\n        password: \"\",\r\n        new_password: \"\",\r\n        confirm_password: \"\"\r\n      };\r\n    },\r\n\r\n    async save() {\r\n      this.submitted = true;\r\n      if (!this.isInvalid) {\r\n        try {\r\n          var response = await service.postData(\"updateOwnPassword\", {\r\n            ...service.getUser().user,\r\n            ...this.editObj\r\n          });\r\n          await this.$swal(this.$t(\"success_title\"), \"\", \"success\");\r\n        } catch (e) {\r\n          await this.$swal(\"\", e.message, \"error\");\r\n        }\r\n      }\r\n    }\r\n  },\r\n  async created() {\r\n    this.init();\r\n  },\r\n  beforeCreated() {},\r\n  watch: {}\r\n};\r\n",{"version":3,"sources":["UpdatePassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UpdatePassword.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"vx-col w-full mb-base\">\r\n    <vx-card>\r\n      <div class=\"container\">\r\n        <h4>{{$t(\"Edit Your Password\")}}</h4>\r\n        <div class=\"vx-row mt-10\">\r\n          <div class=\"vx-col lg:w-1/2 md:w-1/2 sm:w-1/2 w-full mt-5\">\r\n            <label>\r\n              {{ $t(\"old password\") }}\r\n              <span class=\"require\">*</span>\r\n            </label>\r\n            <vs-input\r\n              type=\"password\"\r\n              v-model=\"editObj.password\"\r\n              class=\"w-full\"\r\n              :danger=\"invalid.password\"\r\n            />\r\n            <div class=\"errors\" v-if=\"invalid.password\">{{ $t(\"alert_password\") }}</div>\r\n          </div>\r\n          <div class=\"vx-col lg:w-1/2 md:w-1/2 sm:w-1/2 w-full mt-5\">\r\n            <label>\r\n              {{ $t(\"new password\") }}\r\n              <span class=\"require\">*</span>\r\n            </label>\r\n            <vs-input\r\n              type=\"password\"\r\n              v-model=\"editObj.new_password\"\r\n              class=\"w-full\"\r\n              :danger=\"invalid.new_password||invalid.compare_new_password\"\r\n            />\r\n            <div class=\"errors\" v-if=\"invalid.new_password\">{{ $t(\"alert_new_password\") }}</div>\r\n            <div\r\n              class=\"errors\"\r\n              v-if=\"invalid.compare_new_password\"\r\n            >{{ $t(\"alert_compare_password\") }}</div>\r\n          </div>\r\n          <div class=\"vx-col lg:w-1/2 md:w-1/2 sm:w-1/2 w-full mt-5\">\r\n            <label>\r\n              {{ $t(\"confirm password\") }}\r\n              <span class=\"require\">*</span>\r\n            </label>\r\n            <vs-input\r\n              type=\"password\"\r\n              v-model=\"editObj.confirm_password\"\r\n              class=\"w-full\"\r\n              :danger=\"invalid.confirm_password\"\r\n            />\r\n            <div class=\"errors\" v-if=\"invalid.confirm_password\">{{ $t(\"alert_confirm_password\") }}</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"vx-row\">\r\n          <div class=\"vx-col w-full mt-5\">\r\n            <vs-button\r\n              ref=\"loadableButton\"\r\n              id=\"button-with-loading\"\r\n              class=\"vs-con-loading__container mr-5 pl-10 pr-10\"\r\n              vslor=\"primary\"\r\n              @click=\"save\"\r\n            >{{ $t(\"save\") }}</vs-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </vx-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport service from \"@/service/service\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      submitted: false,\r\n      editObj: {}\r\n    };\r\n  },\r\n  computed: {\r\n    invalid() {\r\n      var require = x => this.editObj[x] == \"\" && this.submitted;\r\n      return {\r\n        password: require(\"password\"),\r\n        new_password: require(\"new_password\"),\r\n        compare_new_password:\r\n          this.editObj.new_password == this.editObj.password &&\r\n          this.editObj.password != \"\",\r\n        confirm_password:\r\n          this.editObj.confirm_password != this.editObj.new_password &&\r\n          this.submitted\r\n      };\r\n    },\r\n    isInvalid() {\r\n      return (\r\n        this.invalid.password ||\r\n        this.invalid.new_password ||\r\n        this.invalid.confirm_password\r\n      );\r\n    }\r\n  },\r\n  methods: {\r\n    async init() {\r\n      this.submitted = false;\r\n      this.editObj = {\r\n        password: \"\",\r\n        new_password: \"\",\r\n        confirm_password: \"\"\r\n      };\r\n    },\r\n\r\n    async save() {\r\n      this.submitted = true;\r\n      if (!this.isInvalid) {\r\n        try {\r\n          var response = await service.postData(\"updateOwnPassword\", {\r\n            ...service.getUser().user,\r\n            ...this.editObj\r\n          });\r\n          await this.$swal(this.$t(\"success_title\"), \"\", \"success\");\r\n        } catch (e) {\r\n          await this.$swal(\"\", e.message, \"error\");\r\n        }\r\n      }\r\n    }\r\n  },\r\n  async created() {\r\n    this.init();\r\n  },\r\n  beforeCreated() {},\r\n  watch: {}\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"]}]}