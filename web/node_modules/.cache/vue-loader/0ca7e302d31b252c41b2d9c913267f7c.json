{"remainingRequest":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\src\\views\\pages\\map\\Map.vue?vue&type=template&id=d0d277d8&","dependencies":[{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\src\\views\\pages\\map\\Map.vue","mtime":1579765551412},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1579332241744},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1579332241739}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticStyle: { position: \"relative\" } },\n    [\n      _c(\n        \"vl-map\",\n        {\n          ref: \"map\",\n          staticStyle: { height: \"100vh\" },\n          attrs: {\n            \"load-tiles-while-animating\": true,\n            \"load-tiles-while-interacting\": true,\n            \"data-projection\": \"EPSG:4326\"\n          },\n          on: {\n            postcompose: _vm.onMapPostCompose,\n            pointermove: _vm.onMapPointerMove\n          }\n        },\n        [\n          _c(\"vl-view\", {\n            attrs: {\n              zoom: _vm.zoom,\n              center: _vm.center,\n              rotation: _vm.rotation\n            },\n            on: {\n              \"update:zoom\": function($event) {\n                _vm.zoom = $event\n              },\n              \"update:center\": function($event) {\n                _vm.center = $event\n              },\n              \"update:rotation\": function($event) {\n                _vm.rotation = $event\n              }\n            }\n          }),\n          _c(\n            \"vl-layer-tile\",\n            { attrs: { id: \"osm\" } },\n            [_c(\"vl-source-osm\")],\n            1\n          ),\n          _c(\n            \"vl-layer-tile\",\n            { attrs: { id: \"osm\" } },\n            [_c(\"vl-source-osm\")],\n            1\n          ),\n          _c(\n            \"vl-layer-tile\",\n            { attrs: { id: \"wms\" } },\n            [\n              _c(\"vl-source-wms\", {\n                attrs: {\n                  extParams: _vm.params,\n                  url: _vm.url,\n                  \"style-name\": _vm.styleName,\n                  \"matrix-set\": _vm.matrixSet,\n                  format: _vm.format,\n                  layers: _vm.LAYERS\n                }\n              })\n            ],\n            1\n          ),\n          _c(\"vl-feature\", {\n            attrs: { properties: { start: Date.now(), duration: 1000 } },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(feature) {\n                  return [\n                    _c(\"vl-geom-point\", {\n                      attrs: { coordinates: _vm.marker_post }\n                    }),\n                    _c(\n                      \"vl-style-box\",\n                      [\n                        _c(\"vl-style-icon\", {\n                          attrs: {\n                            src: require(\"@/assets/flag.png\"),\n                            scale: 0.5,\n                            anchor: [0.1, 0.95],\n                            size: [128, 128]\n                          },\n                          on: {\n                            click: function($event) {\n                              return _vm.onMarkerClick()\n                            }\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    feature.geometry\n                      ? _c(\"vl-overlay\", {\n                          attrs: {\n                            position: _vm.pointOnSurface(feature.geometry),\n                            offset: [10, 10]\n                          }\n                        })\n                      : _vm._e()\n                  ]\n                }\n              }\n            ])\n          }),\n          _vm._l(_vm.devices, function(item, index) {\n            return _c(\"vl-feature\", {\n              key: index,\n              attrs: { properties: item.properties },\n              scopedSlots: _vm._u(\n                [\n                  {\n                    key: \"default\",\n                    fn: function(feature) {\n                      return [\n                        _c(\"vl-geom-point\", {\n                          attrs: { coordinates: [item.lon, item.lat] }\n                        }),\n                        _c(\n                          \"vl-style-box\",\n                          [\n                            _c(\"vl-style-icon\", {\n                              attrs: {\n                                src: item.device_icon,\n                                scale: item.size,\n                                anchor: [item.anchor_x, item.anchor_y],\n                                size: [128, 128]\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        item.properties.show\n                          ? _c(\"vl-overlay\", {\n                              attrs: { position: [item.lon, item.lat] },\n                              scopedSlots: _vm._u(\n                                [\n                                  {\n                                    key: \"default\",\n                                    fn: function(scope) {\n                                      return [\n                                        _c(\n                                          \"div\",\n                                          { staticClass: \"overlay-content\" },\n                                          [\n                                            _c(\n                                              \"vx-card\",\n                                              {\n                                                attrs: { title: \"Event Alert\" }\n                                              },\n                                              [\n                                                _vm._v(\n                                                  \"\\n                  Your device is online currently\\n                \\n              \"\n                                                )\n                                              ]\n                                            )\n                                          ],\n                                          1\n                                        )\n                                      ]\n                                    }\n                                  }\n                                ],\n                                null,\n                                true\n                              )\n                            })\n                          : _vm._e()\n                      ]\n                    }\n                  }\n                ],\n                null,\n                true\n              )\n            })\n          })\n        ],\n        2\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"fix-nav\" },\n        [\n          _c(\n            \"vs-navbar\",\n            {\n              staticClass: \"p-2\",\n              model: {\n                value: _vm.activeItem,\n                callback: function($$v) {\n                  _vm.activeItem = $$v\n                },\n                expression: \"activeItem\"\n              }\n            },\n            [\n              _c(\n                \"div\",\n                { attrs: { slot: \"title\" }, slot: \"title\" },\n                [_c(\"vs-navbar-title\", [_c(\"span\", [_vm._v(\"Vuesax\")])])],\n                1\n              ),\n              _c(\"vs-navbar-item\", { attrs: { index: \"0\" } }, [\n                _c(\"a\", { attrs: { href: \"#\" } }, [_vm._v(\"Home\")])\n              ]),\n              _c(\"vs-navbar-item\", { attrs: { index: \"1\" } }, [\n                _c(\"a\", { attrs: { href: \"#\" } }, [_vm._v(\"News\")])\n              ]),\n              _c(\"vs-navbar-item\", { attrs: { index: \"2\" } }, [\n                _c(\"a\", { attrs: { href: \"#\" } }, [_vm._v(\"Update\")])\n              ])\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}