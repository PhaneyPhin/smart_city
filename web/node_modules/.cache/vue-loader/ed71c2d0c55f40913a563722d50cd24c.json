{"remainingRequest":"D:\\DTC PROJECT\\booking\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DTC PROJECT\\booking\\web\\node_modules\\jqwidgets-scripts\\jqwidgets-vue\\vue_jqxscheduler.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\jqwidgets-scripts\\jqwidgets-vue\\vue_jqxscheduler.vue","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport '../jqwidgets/jqxcore.js';\nimport '../jqwidgets/jqxdata.js';\nimport '../jqwidgets/jqxdata.export.js';\nimport '../jqwidgets/jqxdate.js';\nimport '../jqwidgets/jqxbuttons.js';\nimport '../jqwidgets/jqxmenu.js';\nimport '../jqwidgets/jqxtooltip.js';\nimport '../jqwidgets/jqxscrollbar.js';\nimport '../jqwidgets/jqxradiobutton.js';\nimport '../jqwidgets/jqxcheckbox.js';\nimport '../jqwidgets/jqxwindow.js';\nimport '../jqwidgets/jqxlistbox.js';\nimport '../jqwidgets/jqxcolorpicker.js';\nimport '../jqwidgets/jqxcombobox.js';\nimport '../jqwidgets/jqxdropdownlist.js';\nimport '../jqwidgets/jqxnumberinput.js';\nimport '../jqwidgets/jqxinput.js';\nimport '../jqwidgets/globalization/globalize.js';\nimport '../jqwidgets/jqxcalendar.js';\nimport '../jqwidgets/jqxdatetimeinput.js';\nimport '../jqwidgets/jqxscheduler.js';\nimport '../jqwidgets/jqxscheduler.api.js';\n\nexport default {\n    props: {\n        appointmentOpacity: Number,\n        appointmentsMinHeight: Number,\n        appointmentDataFields: Object,\n        appointmentTooltips: Boolean,\n        columnsHeight: Number,\n        contextMenu: Boolean,\n        contextMenuOpen: Function,\n        contextMenuClose: Function,\n        contextMenuItemClick: Function,\n        contextMenuCreate: Function,\n        changedAppointments: Array,\n        disabled: Boolean,\n        date: [Object, Date],\n        dayNameFormat: String,\n        enableHover: Boolean,\n        editDialog: Boolean,\n        editDialogDateTimeFormatString: String,\n        editDialogDateFormatString: String,\n        editDialogOpen: Function,\n        editDialogCreate: Function,\n        editDialogKeyDown: Function,\n        editDialogClose: Function,\n        exportSettings: Object,\n        height: [Number, String],\n        legendPosition: String,\n        legendHeight: Number,\n        localization: Object,\n        min: [Object, Date],\n        max: [Object, Date],\n        ready: Function,\n        renderAppointment: Function,\n        rendering: Function,\n        rendered: Function,\n        rtl: Boolean,\n        resources: Object,\n        rowsHeight: Number,\n        showToolbar: Boolean,\n        showLegend: Boolean,\n        scrollBarSize: Number,\n        source: Object,\n        statuses: Object,\n        touchRowsHeight: Number,\n        theme: String,\n        touchAppointmentsMinHeight: Number,\n        touchScrollBarSize: Number,\n        timeZone: String,\n        touchDayNameFormat: String,\n        toolBarRangeFormat: String,\n        toolBarRangeFormatAbbr: String,\n        toolbarHeight: Number,\n        views: Array,\n        view: [Number, String],\n        width: [Number, String],\n        autoCreate: {\n            default: true,\n            type: Boolean\n        }\n    },\n    created: function () {\n        this.id = 'jqxScheduler' + JQXLite.generateID();\n        this.componentSelector = '#' + this.id;\n    },\n    mounted: function () {\n        if (this.autoCreate) this.__createComponent__();\n    },\n    methods: {\n        createComponent: function (options) {\n            if (!this.autoCreate) this.__createComponent__(options)\n            else console.warn('Component is already created! If you want to use createComponent, please set \"autoCreate\" property to \"false\".');\n        },\n        setOptions: function (options) {\n            JQXLite(this.componentSelector).jqxScheduler(options);\n        },\n        getOptions: function () {\n            const usedProps = Object.keys(this.__manageProps__());\n            const resultToReturn = {};\n            for (let i = 0; i < usedProps.length; i++) {\n                resultToReturn[usedProps[i]] = JQXLite(this.componentSelector).jqxScheduler(usedProps[i]);\n            }\n            return resultToReturn;\n        },\n        addAppointment: function(item) {\n            JQXLite(this.componentSelector).jqxScheduler('addAppointment', item);  \n        },\n        beginAppointmentsUpdate: function() {\n            JQXLite(this.componentSelector).jqxScheduler('beginAppointmentsUpdate');  \n        },\n        clearAppointmentsSelection: function() {\n            JQXLite(this.componentSelector).jqxScheduler('clearAppointmentsSelection');  \n        },\n        clearSelection: function() {\n            JQXLite(this.componentSelector).jqxScheduler('clearSelection');  \n        },\n        closeMenu: function() {\n            JQXLite(this.componentSelector).jqxScheduler('closeMenu');  \n        },\n        closeDialog: function() {\n            JQXLite(this.componentSelector).jqxScheduler('closeDialog');  \n        },\n        deleteAppointment: function(appointmenId) {\n            JQXLite(this.componentSelector).jqxScheduler('deleteAppointment', appointmenId);  \n        },\n        destroy: function() {\n            JQXLite(this.componentSelector).jqxScheduler('destroy');  \n        },\n        endAppointmentsUpdate: function() {\n            JQXLite(this.componentSelector).jqxScheduler('endAppointmentsUpdate');  \n        },\n        ensureAppointmentVisible: function(id) {\n            JQXLite(this.componentSelector).jqxScheduler('ensureAppointmentVisible', id);  \n        },\n        ensureVisible: function(item, resourceId) {\n            JQXLite(this.componentSelector).jqxScheduler('ensureVisible', item, resourceId);  \n        },\n        exportData: function(format) {\n            JQXLite(this.componentSelector).jqxScheduler('exportData', format);  \n        },\n        focus: function() {\n            JQXLite(this.componentSelector).jqxScheduler('focus');  \n        },\n        getAppointmentProperty: function(appointmentId, name) {\n            return JQXLite(this.componentSelector).jqxScheduler('getAppointmentProperty', appointmentId, name);  \n        },\n        getSelection: function() {\n            return JQXLite(this.componentSelector).jqxScheduler('getSelection');  \n        },\n        getAppointments: function() {\n            return JQXLite(this.componentSelector).jqxScheduler('getAppointments');  \n        },\n        getDataAppointments: function() {\n            return JQXLite(this.componentSelector).jqxScheduler('getDataAppointments');  \n        },\n        hideAppointmentsByResource: function(resourcesId) {\n            JQXLite(this.componentSelector).jqxScheduler('hideAppointmentsByResource', resourcesId);  \n        },\n        openMenu: function(left, top) {\n            JQXLite(this.componentSelector).jqxScheduler('openMenu', left, top);  \n        },\n        openDialog: function(left, top) {\n            JQXLite(this.componentSelector).jqxScheduler('openDialog', left, top);  \n        },\n        selectAppointment: function(appointmentId) {\n            JQXLite(this.componentSelector).jqxScheduler('selectAppointment', appointmentId);  \n        },\n        setAppointmentProperty: function(appointmentId, name, value) {\n            JQXLite(this.componentSelector).jqxScheduler('setAppointmentProperty', appointmentId, name, value);  \n        },\n        selectCell: function(date, allday, resourceId) {\n            JQXLite(this.componentSelector).jqxScheduler('selectCell', date, allday, resourceId);  \n        },\n        showAppointmentsByResource: function(resourceId) {\n            JQXLite(this.componentSelector).jqxScheduler('showAppointmentsByResource', resourceId);  \n        },\n        scrollWidth: function() {\n            return JQXLite(this.componentSelector).jqxScheduler('scrollWidth');  \n        },\n        scrollHeight: function() {\n            return JQXLite(this.componentSelector).jqxScheduler('scrollHeight');  \n        },\n        scrollLeft: function(left) {\n            JQXLite(this.componentSelector).jqxScheduler('scrollLeft', left);  \n        },\n        scrollTop: function(top) {\n            JQXLite(this.componentSelector).jqxScheduler('scrollTop', top);  \n        },\n        _appointmentOpacity: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('appointmentOpacity', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('appointmentOpacity');\n            }\n        },\n        _appointmentsMinHeight: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('appointmentsMinHeight', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('appointmentsMinHeight');\n            }\n        },\n        _appointmentDataFields: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('appointmentDataFields', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('appointmentDataFields');\n            }\n        },\n        _appointmentTooltips: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('appointmentTooltips', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('appointmentTooltips');\n            }\n        },\n        _columnsHeight: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('columnsHeight', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('columnsHeight');\n            }\n        },\n        _contextMenu: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('contextMenu', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('contextMenu');\n            }\n        },\n        _contextMenuOpen: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('contextMenuOpen', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('contextMenuOpen');\n            }\n        },\n        _contextMenuClose: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('contextMenuClose', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('contextMenuClose');\n            }\n        },\n        _contextMenuItemClick: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('contextMenuItemClick', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('contextMenuItemClick');\n            }\n        },\n        _contextMenuCreate: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('contextMenuCreate', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('contextMenuCreate');\n            }\n        },\n        _changedAppointments: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('changedAppointments', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('changedAppointments');\n            }\n        },\n        _disabled: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('disabled', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('disabled');\n            }\n        },\n        _date: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('date', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('date');\n            }\n        },\n        _dayNameFormat: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('dayNameFormat', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('dayNameFormat');\n            }\n        },\n        _enableHover: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('enableHover', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('enableHover');\n            }\n        },\n        _editDialog: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('editDialog', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('editDialog');\n            }\n        },\n        _editDialogDateTimeFormatString: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('editDialogDateTimeFormatString', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('editDialogDateTimeFormatString');\n            }\n        },\n        _editDialogDateFormatString: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('editDialogDateFormatString', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('editDialogDateFormatString');\n            }\n        },\n        _editDialogOpen: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('editDialogOpen', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('editDialogOpen');\n            }\n        },\n        _editDialogCreate: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('editDialogCreate', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('editDialogCreate');\n            }\n        },\n        _editDialogKeyDown: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('editDialogKeyDown', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('editDialogKeyDown');\n            }\n        },\n        _editDialogClose: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('editDialogClose', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('editDialogClose');\n            }\n        },\n        _exportSettings: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('exportSettings', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('exportSettings');\n            }\n        },\n        _height: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('height', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('height');\n            }\n        },\n        _legendPosition: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('legendPosition', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('legendPosition');\n            }\n        },\n        _legendHeight: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('legendHeight', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('legendHeight');\n            }\n        },\n        _localization: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('localization', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('localization');\n            }\n        },\n        _min: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('min', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('min');\n            }\n        },\n        _max: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('max', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('max');\n            }\n        },\n        _ready: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('ready', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('ready');\n            }\n        },\n        _renderAppointment: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('renderAppointment', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('renderAppointment');\n            }\n        },\n        _rendering: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('rendering', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('rendering');\n            }\n        },\n        _rendered: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('rendered', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('rendered');\n            }\n        },\n        _rtl: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('rtl', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('rtl');\n            }\n        },\n        _resources: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('resources', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('resources');\n            }\n        },\n        _rowsHeight: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('rowsHeight', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('rowsHeight');\n            }\n        },\n        _showToolbar: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('showToolbar', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('showToolbar');\n            }\n        },\n        _showLegend: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('showLegend', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('showLegend');\n            }\n        },\n        _scrollBarSize: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('scrollBarSize', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('scrollBarSize');\n            }\n        },\n        _source: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('source', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('source');\n            }\n        },\n        _statuses: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('statuses', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('statuses');\n            }\n        },\n        _touchRowsHeight: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('touchRowsHeight', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('touchRowsHeight');\n            }\n        },\n        _theme: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('theme', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('theme');\n            }\n        },\n        _touchAppointmentsMinHeight: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('touchAppointmentsMinHeight', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('touchAppointmentsMinHeight');\n            }\n        },\n        _touchScrollBarSize: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('touchScrollBarSize', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('touchScrollBarSize');\n            }\n        },\n        _timeZone: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('timeZone', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('timeZone');\n            }\n        },\n        _touchDayNameFormat: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('touchDayNameFormat', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('touchDayNameFormat');\n            }\n        },\n        _toolBarRangeFormat: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('toolBarRangeFormat', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('toolBarRangeFormat');\n            }\n        },\n        _toolBarRangeFormatAbbr: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('toolBarRangeFormatAbbr', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('toolBarRangeFormatAbbr');\n            }\n        },\n        _toolbarHeight: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('toolbarHeight', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('toolbarHeight');\n            }\n        },\n        _views: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('views', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('views');\n            }\n        },\n        _view: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('view', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('view');\n            }\n        },\n        _width: function(arg) {\n            if (arg !== undefined) {\n                JQXLite(this.componentSelector).jqxScheduler('width', arg)\n            } else {\n                return JQXLite(this.componentSelector).jqxScheduler('width');\n            }\n        },\n        __createComponent__: function (options) {\n            let widgetOptions;\n            options ? widgetOptions = options : widgetOptions = this.__manageProps__();\n            JQXLite(this.componentSelector).jqxScheduler(widgetOptions);\n            this.__extendProps__();\n            this.__wireEvents__();\n        },\n        __manageProps__: function () {\n            const widgetProps = ['appointmentOpacity','appointmentsMinHeight','appointmentDataFields','appointmentTooltips','columnsHeight','contextMenu','contextMenuOpen','contextMenuClose','contextMenuItemClick','contextMenuCreate','changedAppointments','disabled','date','dayNameFormat','enableHover','editDialog','editDialogDateTimeFormatString','editDialogDateFormatString','editDialogOpen','editDialogCreate','editDialogKeyDown','editDialogClose','exportSettings','height','legendPosition','legendHeight','localization','min','max','ready','renderAppointment','rendering','rendered','rtl','resources','rowsHeight','showToolbar','showLegend','scrollBarSize','source','statuses','touchRowsHeight','theme','touchAppointmentsMinHeight','touchScrollBarSize','timeZone','touchDayNameFormat','toolBarRangeFormat','toolBarRangeFormatAbbr','toolbarHeight','views','view','width'];\n            const componentProps = this.$options.propsData;\n            let options = {};\n\n            for (let prop in componentProps) {\n                if (widgetProps.indexOf(prop) !== -1) {\n                    options[prop] = componentProps[prop];\n                }\n            }\n            return options;\n        },\n        __extendProps__: function () {\n            const that = this;\n\n            Object.defineProperty(that, 'appointmentOpacity', {\n                get: function() {\n                    return that._appointmentOpacity();\n                },\n                set: function(newValue) {\n                    that._appointmentOpacity(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'appointmentsMinHeight', {\n                get: function() {\n                    return that._appointmentsMinHeight();\n                },\n                set: function(newValue) {\n                    that._appointmentsMinHeight(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'appointmentDataFields', {\n                get: function() {\n                    return that._appointmentDataFields();\n                },\n                set: function(newValue) {\n                    that._appointmentDataFields(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'appointmentTooltips', {\n                get: function() {\n                    return that._appointmentTooltips();\n                },\n                set: function(newValue) {\n                    that._appointmentTooltips(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'columnsHeight', {\n                get: function() {\n                    return that._columnsHeight();\n                },\n                set: function(newValue) {\n                    that._columnsHeight(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'contextMenu', {\n                get: function() {\n                    return that._contextMenu();\n                },\n                set: function(newValue) {\n                    that._contextMenu(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'contextMenuOpen', {\n                get: function() {\n                    return that._contextMenuOpen();\n                },\n                set: function(newValue) {\n                    that._contextMenuOpen(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'contextMenuClose', {\n                get: function() {\n                    return that._contextMenuClose();\n                },\n                set: function(newValue) {\n                    that._contextMenuClose(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'contextMenuItemClick', {\n                get: function() {\n                    return that._contextMenuItemClick();\n                },\n                set: function(newValue) {\n                    that._contextMenuItemClick(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'contextMenuCreate', {\n                get: function() {\n                    return that._contextMenuCreate();\n                },\n                set: function(newValue) {\n                    that._contextMenuCreate(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'changedAppointments', {\n                get: function() {\n                    return that._changedAppointments();\n                },\n                set: function(newValue) {\n                    that._changedAppointments(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'disabled', {\n                get: function() {\n                    return that._disabled();\n                },\n                set: function(newValue) {\n                    that._disabled(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'date', {\n                get: function() {\n                    return that._date();\n                },\n                set: function(newValue) {\n                    that._date(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'dayNameFormat', {\n                get: function() {\n                    return that._dayNameFormat();\n                },\n                set: function(newValue) {\n                    that._dayNameFormat(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'enableHover', {\n                get: function() {\n                    return that._enableHover();\n                },\n                set: function(newValue) {\n                    that._enableHover(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'editDialog', {\n                get: function() {\n                    return that._editDialog();\n                },\n                set: function(newValue) {\n                    that._editDialog(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'editDialogDateTimeFormatString', {\n                get: function() {\n                    return that._editDialogDateTimeFormatString();\n                },\n                set: function(newValue) {\n                    that._editDialogDateTimeFormatString(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'editDialogDateFormatString', {\n                get: function() {\n                    return that._editDialogDateFormatString();\n                },\n                set: function(newValue) {\n                    that._editDialogDateFormatString(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'editDialogOpen', {\n                get: function() {\n                    return that._editDialogOpen();\n                },\n                set: function(newValue) {\n                    that._editDialogOpen(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'editDialogCreate', {\n                get: function() {\n                    return that._editDialogCreate();\n                },\n                set: function(newValue) {\n                    that._editDialogCreate(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'editDialogKeyDown', {\n                get: function() {\n                    return that._editDialogKeyDown();\n                },\n                set: function(newValue) {\n                    that._editDialogKeyDown(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'editDialogClose', {\n                get: function() {\n                    return that._editDialogClose();\n                },\n                set: function(newValue) {\n                    that._editDialogClose(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'exportSettings', {\n                get: function() {\n                    return that._exportSettings();\n                },\n                set: function(newValue) {\n                    that._exportSettings(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'height', {\n                get: function() {\n                    return that._height();\n                },\n                set: function(newValue) {\n                    that._height(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'legendPosition', {\n                get: function() {\n                    return that._legendPosition();\n                },\n                set: function(newValue) {\n                    that._legendPosition(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'legendHeight', {\n                get: function() {\n                    return that._legendHeight();\n                },\n                set: function(newValue) {\n                    that._legendHeight(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'localization', {\n                get: function() {\n                    return that._localization();\n                },\n                set: function(newValue) {\n                    that._localization(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'min', {\n                get: function() {\n                    return that._min();\n                },\n                set: function(newValue) {\n                    that._min(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'max', {\n                get: function() {\n                    return that._max();\n                },\n                set: function(newValue) {\n                    that._max(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'ready', {\n                get: function() {\n                    return that._ready();\n                },\n                set: function(newValue) {\n                    that._ready(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'renderAppointment', {\n                get: function() {\n                    return that._renderAppointment();\n                },\n                set: function(newValue) {\n                    that._renderAppointment(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'rendering', {\n                get: function() {\n                    return that._rendering();\n                },\n                set: function(newValue) {\n                    that._rendering(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'rendered', {\n                get: function() {\n                    return that._rendered();\n                },\n                set: function(newValue) {\n                    that._rendered(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'rtl', {\n                get: function() {\n                    return that._rtl();\n                },\n                set: function(newValue) {\n                    that._rtl(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'resources', {\n                get: function() {\n                    return that._resources();\n                },\n                set: function(newValue) {\n                    that._resources(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'rowsHeight', {\n                get: function() {\n                    return that._rowsHeight();\n                },\n                set: function(newValue) {\n                    that._rowsHeight(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'showToolbar', {\n                get: function() {\n                    return that._showToolbar();\n                },\n                set: function(newValue) {\n                    that._showToolbar(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'showLegend', {\n                get: function() {\n                    return that._showLegend();\n                },\n                set: function(newValue) {\n                    that._showLegend(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'scrollBarSize', {\n                get: function() {\n                    return that._scrollBarSize();\n                },\n                set: function(newValue) {\n                    that._scrollBarSize(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'source', {\n                get: function() {\n                    return that._source();\n                },\n                set: function(newValue) {\n                    that._source(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'statuses', {\n                get: function() {\n                    return that._statuses();\n                },\n                set: function(newValue) {\n                    that._statuses(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'touchRowsHeight', {\n                get: function() {\n                    return that._touchRowsHeight();\n                },\n                set: function(newValue) {\n                    that._touchRowsHeight(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'theme', {\n                get: function() {\n                    return that._theme();\n                },\n                set: function(newValue) {\n                    that._theme(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'touchAppointmentsMinHeight', {\n                get: function() {\n                    return that._touchAppointmentsMinHeight();\n                },\n                set: function(newValue) {\n                    that._touchAppointmentsMinHeight(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'touchScrollBarSize', {\n                get: function() {\n                    return that._touchScrollBarSize();\n                },\n                set: function(newValue) {\n                    that._touchScrollBarSize(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'timeZone', {\n                get: function() {\n                    return that._timeZone();\n                },\n                set: function(newValue) {\n                    that._timeZone(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'touchDayNameFormat', {\n                get: function() {\n                    return that._touchDayNameFormat();\n                },\n                set: function(newValue) {\n                    that._touchDayNameFormat(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'toolBarRangeFormat', {\n                get: function() {\n                    return that._toolBarRangeFormat();\n                },\n                set: function(newValue) {\n                    that._toolBarRangeFormat(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'toolBarRangeFormatAbbr', {\n                get: function() {\n                    return that._toolBarRangeFormatAbbr();\n                },\n                set: function(newValue) {\n                    that._toolBarRangeFormatAbbr(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'toolbarHeight', {\n                get: function() {\n                    return that._toolbarHeight();\n                },\n                set: function(newValue) {\n                    that._toolbarHeight(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'views', {\n                get: function() {\n                    return that._views();\n                },\n                set: function(newValue) {\n                    that._views(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'view', {\n                get: function() {\n                    return that._view();\n                },\n                set: function(newValue) {\n                    that._view(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n            Object.defineProperty(that, 'width', {\n                get: function() {\n                    return that._width();\n                },\n                set: function(newValue) {\n                    that._width(newValue);\n                },\n                enumerable: true,\n                configurable: true\n            });\n        },\n        __wireEvents__: function () {\n            const that = this;\n\n            JQXLite(this.componentSelector).on('appointmentChange', function (event) { that.$emit('appointmentChange', event); });\n            JQXLite(this.componentSelector).on('appointmentClick', function (event) { that.$emit('appointmentClick', event); });\n            JQXLite(this.componentSelector).on('appointmentDoubleClick', function (event) { that.$emit('appointmentDoubleClick', event); });\n            JQXLite(this.componentSelector).on('appointmentDelete', function (event) { that.$emit('appointmentDelete', event); });\n            JQXLite(this.componentSelector).on('appointmentAdd', function (event) { that.$emit('appointmentAdd', event); });\n            JQXLite(this.componentSelector).on('bindingComplete', function (event) { that.$emit('bindingComplete', event); });\n            JQXLite(this.componentSelector).on('cellClick', function (event) { that.$emit('cellClick', event); });\n            JQXLite(this.componentSelector).on('cellDoubleClick', function (event) { that.$emit('cellDoubleClick', event); });\n            JQXLite(this.componentSelector).on('contextMenuOpen', function (event) { that.$emit('contextMenuOpen', event); });\n            JQXLite(this.componentSelector).on('contextMenuClose', function (event) { that.$emit('contextMenuClose', event); });\n            JQXLite(this.componentSelector).on('contextMenuItemClick', function (event) { that.$emit('contextMenuItemClick', event); });\n            JQXLite(this.componentSelector).on('contextMenuCreate', function (event) { that.$emit('contextMenuCreate', event); });\n            JQXLite(this.componentSelector).on('dateChange', function (event) { that.$emit('dateChange', event); });\n            JQXLite(this.componentSelector).on('editRecurrenceDialogOpen', function (event) { that.$emit('editRecurrenceDialogOpen', event); });\n            JQXLite(this.componentSelector).on('editRecurrenceDialogClose', function (event) { that.$emit('editRecurrenceDialogClose', event); });\n            JQXLite(this.componentSelector).on('editDialogCreate', function (event) { that.$emit('editDialogCreate', event); });\n            JQXLite(this.componentSelector).on('editDialogOpen', function (event) { that.$emit('editDialogOpen', event); });\n            JQXLite(this.componentSelector).on('editDialogClose', function (event) { that.$emit('editDialogClose', event); });\n            JQXLite(this.componentSelector).on('viewChange', function (event) { that.$emit('viewChange', event); });\n        }\n    }\n}\n",{"version":3,"sources":["vue_jqxscheduler.vue"],"names":[],"mappingsfile":"vue_jqxscheduler.vue","sourceRoot":"node_modules/jqwidgets-scripts/jqwidgets-vue","sourcesContent":["<template>\n    <div v-bind:id=\"id\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    import '../jqwidgets/jqxcore.js';\n    import '../jqwidgets/jqxdata.js';\n    import '../jqwidgets/jqxdata.export.js';\n    import '../jqwidgets/jqxdate.js';\n    import '../jqwidgets/jqxbuttons.js';\n    import '../jqwidgets/jqxmenu.js';\n    import '../jqwidgets/jqxtooltip.js';\n    import '../jqwidgets/jqxscrollbar.js';\n    import '../jqwidgets/jqxradiobutton.js';\n    import '../jqwidgets/jqxcheckbox.js';\n    import '../jqwidgets/jqxwindow.js';\n    import '../jqwidgets/jqxlistbox.js';\n    import '../jqwidgets/jqxcolorpicker.js';\n    import '../jqwidgets/jqxcombobox.js';\n    import '../jqwidgets/jqxdropdownlist.js';\n    import '../jqwidgets/jqxnumberinput.js';\n    import '../jqwidgets/jqxinput.js';\n    import '../jqwidgets/globalization/globalize.js';\n    import '../jqwidgets/jqxcalendar.js';\n    import '../jqwidgets/jqxdatetimeinput.js';\n    import '../jqwidgets/jqxscheduler.js';\n    import '../jqwidgets/jqxscheduler.api.js';\n\n    export default {\n        props: {\n            appointmentOpacity: Number,\n            appointmentsMinHeight: Number,\n            appointmentDataFields: Object,\n            appointmentTooltips: Boolean,\n            columnsHeight: Number,\n            contextMenu: Boolean,\n            contextMenuOpen: Function,\n            contextMenuClose: Function,\n            contextMenuItemClick: Function,\n            contextMenuCreate: Function,\n            changedAppointments: Array,\n            disabled: Boolean,\n            date: [Object, Date],\n            dayNameFormat: String,\n            enableHover: Boolean,\n            editDialog: Boolean,\n            editDialogDateTimeFormatString: String,\n            editDialogDateFormatString: String,\n            editDialogOpen: Function,\n            editDialogCreate: Function,\n            editDialogKeyDown: Function,\n            editDialogClose: Function,\n            exportSettings: Object,\n            height: [Number, String],\n            legendPosition: String,\n            legendHeight: Number,\n            localization: Object,\n            min: [Object, Date],\n            max: [Object, Date],\n            ready: Function,\n            renderAppointment: Function,\n            rendering: Function,\n            rendered: Function,\n            rtl: Boolean,\n            resources: Object,\n            rowsHeight: Number,\n            showToolbar: Boolean,\n            showLegend: Boolean,\n            scrollBarSize: Number,\n            source: Object,\n            statuses: Object,\n            touchRowsHeight: Number,\n            theme: String,\n            touchAppointmentsMinHeight: Number,\n            touchScrollBarSize: Number,\n            timeZone: String,\n            touchDayNameFormat: String,\n            toolBarRangeFormat: String,\n            toolBarRangeFormatAbbr: String,\n            toolbarHeight: Number,\n            views: Array,\n            view: [Number, String],\n            width: [Number, String],\n            autoCreate: {\n                default: true,\n                type: Boolean\n            }\n        },\n        created: function () {\n            this.id = 'jqxScheduler' + JQXLite.generateID();\n            this.componentSelector = '#' + this.id;\n        },\n        mounted: function () {\n            if (this.autoCreate) this.__createComponent__();\n        },\n        methods: {\n            createComponent: function (options) {\n                if (!this.autoCreate) this.__createComponent__(options)\n                else console.warn('Component is already created! If you want to use createComponent, please set \"autoCreate\" property to \"false\".');\n            },\n            setOptions: function (options) {\n                JQXLite(this.componentSelector).jqxScheduler(options);\n            },\n            getOptions: function () {\n                const usedProps = Object.keys(this.__manageProps__());\n                const resultToReturn = {};\n                for (let i = 0; i < usedProps.length; i++) {\n                    resultToReturn[usedProps[i]] = JQXLite(this.componentSelector).jqxScheduler(usedProps[i]);\n                }\n                return resultToReturn;\n            },\n            addAppointment: function(item) {\n                JQXLite(this.componentSelector).jqxScheduler('addAppointment', item);  \n            },\n            beginAppointmentsUpdate: function() {\n                JQXLite(this.componentSelector).jqxScheduler('beginAppointmentsUpdate');  \n            },\n            clearAppointmentsSelection: function() {\n                JQXLite(this.componentSelector).jqxScheduler('clearAppointmentsSelection');  \n            },\n            clearSelection: function() {\n                JQXLite(this.componentSelector).jqxScheduler('clearSelection');  \n            },\n            closeMenu: function() {\n                JQXLite(this.componentSelector).jqxScheduler('closeMenu');  \n            },\n            closeDialog: function() {\n                JQXLite(this.componentSelector).jqxScheduler('closeDialog');  \n            },\n            deleteAppointment: function(appointmenId) {\n                JQXLite(this.componentSelector).jqxScheduler('deleteAppointment', appointmenId);  \n            },\n            destroy: function() {\n                JQXLite(this.componentSelector).jqxScheduler('destroy');  \n            },\n            endAppointmentsUpdate: function() {\n                JQXLite(this.componentSelector).jqxScheduler('endAppointmentsUpdate');  \n            },\n            ensureAppointmentVisible: function(id) {\n                JQXLite(this.componentSelector).jqxScheduler('ensureAppointmentVisible', id);  \n            },\n            ensureVisible: function(item, resourceId) {\n                JQXLite(this.componentSelector).jqxScheduler('ensureVisible', item, resourceId);  \n            },\n            exportData: function(format) {\n                JQXLite(this.componentSelector).jqxScheduler('exportData', format);  \n            },\n            focus: function() {\n                JQXLite(this.componentSelector).jqxScheduler('focus');  \n            },\n            getAppointmentProperty: function(appointmentId, name) {\n                return JQXLite(this.componentSelector).jqxScheduler('getAppointmentProperty', appointmentId, name);  \n            },\n            getSelection: function() {\n                return JQXLite(this.componentSelector).jqxScheduler('getSelection');  \n            },\n            getAppointments: function() {\n                return JQXLite(this.componentSelector).jqxScheduler('getAppointments');  \n            },\n            getDataAppointments: function() {\n                return JQXLite(this.componentSelector).jqxScheduler('getDataAppointments');  \n            },\n            hideAppointmentsByResource: function(resourcesId) {\n                JQXLite(this.componentSelector).jqxScheduler('hideAppointmentsByResource', resourcesId);  \n            },\n            openMenu: function(left, top) {\n                JQXLite(this.componentSelector).jqxScheduler('openMenu', left, top);  \n            },\n            openDialog: function(left, top) {\n                JQXLite(this.componentSelector).jqxScheduler('openDialog', left, top);  \n            },\n            selectAppointment: function(appointmentId) {\n                JQXLite(this.componentSelector).jqxScheduler('selectAppointment', appointmentId);  \n            },\n            setAppointmentProperty: function(appointmentId, name, value) {\n                JQXLite(this.componentSelector).jqxScheduler('setAppointmentProperty', appointmentId, name, value);  \n            },\n            selectCell: function(date, allday, resourceId) {\n                JQXLite(this.componentSelector).jqxScheduler('selectCell', date, allday, resourceId);  \n            },\n            showAppointmentsByResource: function(resourceId) {\n                JQXLite(this.componentSelector).jqxScheduler('showAppointmentsByResource', resourceId);  \n            },\n            scrollWidth: function() {\n                return JQXLite(this.componentSelector).jqxScheduler('scrollWidth');  \n            },\n            scrollHeight: function() {\n                return JQXLite(this.componentSelector).jqxScheduler('scrollHeight');  \n            },\n            scrollLeft: function(left) {\n                JQXLite(this.componentSelector).jqxScheduler('scrollLeft', left);  \n            },\n            scrollTop: function(top) {\n                JQXLite(this.componentSelector).jqxScheduler('scrollTop', top);  \n            },\n            _appointmentOpacity: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('appointmentOpacity', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('appointmentOpacity');\n                }\n            },\n            _appointmentsMinHeight: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('appointmentsMinHeight', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('appointmentsMinHeight');\n                }\n            },\n            _appointmentDataFields: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('appointmentDataFields', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('appointmentDataFields');\n                }\n            },\n            _appointmentTooltips: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('appointmentTooltips', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('appointmentTooltips');\n                }\n            },\n            _columnsHeight: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('columnsHeight', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('columnsHeight');\n                }\n            },\n            _contextMenu: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('contextMenu', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('contextMenu');\n                }\n            },\n            _contextMenuOpen: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('contextMenuOpen', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('contextMenuOpen');\n                }\n            },\n            _contextMenuClose: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('contextMenuClose', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('contextMenuClose');\n                }\n            },\n            _contextMenuItemClick: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('contextMenuItemClick', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('contextMenuItemClick');\n                }\n            },\n            _contextMenuCreate: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('contextMenuCreate', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('contextMenuCreate');\n                }\n            },\n            _changedAppointments: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('changedAppointments', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('changedAppointments');\n                }\n            },\n            _disabled: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('disabled', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('disabled');\n                }\n            },\n            _date: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('date', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('date');\n                }\n            },\n            _dayNameFormat: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('dayNameFormat', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('dayNameFormat');\n                }\n            },\n            _enableHover: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('enableHover', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('enableHover');\n                }\n            },\n            _editDialog: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('editDialog', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('editDialog');\n                }\n            },\n            _editDialogDateTimeFormatString: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('editDialogDateTimeFormatString', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('editDialogDateTimeFormatString');\n                }\n            },\n            _editDialogDateFormatString: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('editDialogDateFormatString', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('editDialogDateFormatString');\n                }\n            },\n            _editDialogOpen: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('editDialogOpen', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('editDialogOpen');\n                }\n            },\n            _editDialogCreate: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('editDialogCreate', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('editDialogCreate');\n                }\n            },\n            _editDialogKeyDown: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('editDialogKeyDown', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('editDialogKeyDown');\n                }\n            },\n            _editDialogClose: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('editDialogClose', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('editDialogClose');\n                }\n            },\n            _exportSettings: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('exportSettings', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('exportSettings');\n                }\n            },\n            _height: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('height', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('height');\n                }\n            },\n            _legendPosition: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('legendPosition', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('legendPosition');\n                }\n            },\n            _legendHeight: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('legendHeight', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('legendHeight');\n                }\n            },\n            _localization: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('localization', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('localization');\n                }\n            },\n            _min: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('min', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('min');\n                }\n            },\n            _max: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('max', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('max');\n                }\n            },\n            _ready: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('ready', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('ready');\n                }\n            },\n            _renderAppointment: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('renderAppointment', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('renderAppointment');\n                }\n            },\n            _rendering: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('rendering', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('rendering');\n                }\n            },\n            _rendered: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('rendered', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('rendered');\n                }\n            },\n            _rtl: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('rtl', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('rtl');\n                }\n            },\n            _resources: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('resources', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('resources');\n                }\n            },\n            _rowsHeight: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('rowsHeight', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('rowsHeight');\n                }\n            },\n            _showToolbar: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('showToolbar', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('showToolbar');\n                }\n            },\n            _showLegend: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('showLegend', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('showLegend');\n                }\n            },\n            _scrollBarSize: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('scrollBarSize', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('scrollBarSize');\n                }\n            },\n            _source: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('source', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('source');\n                }\n            },\n            _statuses: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('statuses', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('statuses');\n                }\n            },\n            _touchRowsHeight: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('touchRowsHeight', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('touchRowsHeight');\n                }\n            },\n            _theme: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('theme', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('theme');\n                }\n            },\n            _touchAppointmentsMinHeight: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('touchAppointmentsMinHeight', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('touchAppointmentsMinHeight');\n                }\n            },\n            _touchScrollBarSize: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('touchScrollBarSize', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('touchScrollBarSize');\n                }\n            },\n            _timeZone: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('timeZone', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('timeZone');\n                }\n            },\n            _touchDayNameFormat: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('touchDayNameFormat', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('touchDayNameFormat');\n                }\n            },\n            _toolBarRangeFormat: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('toolBarRangeFormat', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('toolBarRangeFormat');\n                }\n            },\n            _toolBarRangeFormatAbbr: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('toolBarRangeFormatAbbr', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('toolBarRangeFormatAbbr');\n                }\n            },\n            _toolbarHeight: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('toolbarHeight', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('toolbarHeight');\n                }\n            },\n            _views: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('views', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('views');\n                }\n            },\n            _view: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('view', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('view');\n                }\n            },\n            _width: function(arg) {\n                if (arg !== undefined) {\n                    JQXLite(this.componentSelector).jqxScheduler('width', arg)\n                } else {\n                    return JQXLite(this.componentSelector).jqxScheduler('width');\n                }\n            },\n            __createComponent__: function (options) {\n                let widgetOptions;\n                options ? widgetOptions = options : widgetOptions = this.__manageProps__();\n                JQXLite(this.componentSelector).jqxScheduler(widgetOptions);\n                this.__extendProps__();\n                this.__wireEvents__();\n            },\n            __manageProps__: function () {\n                const widgetProps = ['appointmentOpacity','appointmentsMinHeight','appointmentDataFields','appointmentTooltips','columnsHeight','contextMenu','contextMenuOpen','contextMenuClose','contextMenuItemClick','contextMenuCreate','changedAppointments','disabled','date','dayNameFormat','enableHover','editDialog','editDialogDateTimeFormatString','editDialogDateFormatString','editDialogOpen','editDialogCreate','editDialogKeyDown','editDialogClose','exportSettings','height','legendPosition','legendHeight','localization','min','max','ready','renderAppointment','rendering','rendered','rtl','resources','rowsHeight','showToolbar','showLegend','scrollBarSize','source','statuses','touchRowsHeight','theme','touchAppointmentsMinHeight','touchScrollBarSize','timeZone','touchDayNameFormat','toolBarRangeFormat','toolBarRangeFormatAbbr','toolbarHeight','views','view','width'];\n                const componentProps = this.$options.propsData;\n                let options = {};\n\n                for (let prop in componentProps) {\n                    if (widgetProps.indexOf(prop) !== -1) {\n                        options[prop] = componentProps[prop];\n                    }\n                }\n                return options;\n            },\n            __extendProps__: function () {\n                const that = this;\n\n                Object.defineProperty(that, 'appointmentOpacity', {\n                    get: function() {\n                        return that._appointmentOpacity();\n                    },\n                    set: function(newValue) {\n                        that._appointmentOpacity(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'appointmentsMinHeight', {\n                    get: function() {\n                        return that._appointmentsMinHeight();\n                    },\n                    set: function(newValue) {\n                        that._appointmentsMinHeight(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'appointmentDataFields', {\n                    get: function() {\n                        return that._appointmentDataFields();\n                    },\n                    set: function(newValue) {\n                        that._appointmentDataFields(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'appointmentTooltips', {\n                    get: function() {\n                        return that._appointmentTooltips();\n                    },\n                    set: function(newValue) {\n                        that._appointmentTooltips(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'columnsHeight', {\n                    get: function() {\n                        return that._columnsHeight();\n                    },\n                    set: function(newValue) {\n                        that._columnsHeight(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'contextMenu', {\n                    get: function() {\n                        return that._contextMenu();\n                    },\n                    set: function(newValue) {\n                        that._contextMenu(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'contextMenuOpen', {\n                    get: function() {\n                        return that._contextMenuOpen();\n                    },\n                    set: function(newValue) {\n                        that._contextMenuOpen(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'contextMenuClose', {\n                    get: function() {\n                        return that._contextMenuClose();\n                    },\n                    set: function(newValue) {\n                        that._contextMenuClose(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'contextMenuItemClick', {\n                    get: function() {\n                        return that._contextMenuItemClick();\n                    },\n                    set: function(newValue) {\n                        that._contextMenuItemClick(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'contextMenuCreate', {\n                    get: function() {\n                        return that._contextMenuCreate();\n                    },\n                    set: function(newValue) {\n                        that._contextMenuCreate(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'changedAppointments', {\n                    get: function() {\n                        return that._changedAppointments();\n                    },\n                    set: function(newValue) {\n                        that._changedAppointments(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'disabled', {\n                    get: function() {\n                        return that._disabled();\n                    },\n                    set: function(newValue) {\n                        that._disabled(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'date', {\n                    get: function() {\n                        return that._date();\n                    },\n                    set: function(newValue) {\n                        that._date(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'dayNameFormat', {\n                    get: function() {\n                        return that._dayNameFormat();\n                    },\n                    set: function(newValue) {\n                        that._dayNameFormat(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'enableHover', {\n                    get: function() {\n                        return that._enableHover();\n                    },\n                    set: function(newValue) {\n                        that._enableHover(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'editDialog', {\n                    get: function() {\n                        return that._editDialog();\n                    },\n                    set: function(newValue) {\n                        that._editDialog(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'editDialogDateTimeFormatString', {\n                    get: function() {\n                        return that._editDialogDateTimeFormatString();\n                    },\n                    set: function(newValue) {\n                        that._editDialogDateTimeFormatString(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'editDialogDateFormatString', {\n                    get: function() {\n                        return that._editDialogDateFormatString();\n                    },\n                    set: function(newValue) {\n                        that._editDialogDateFormatString(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'editDialogOpen', {\n                    get: function() {\n                        return that._editDialogOpen();\n                    },\n                    set: function(newValue) {\n                        that._editDialogOpen(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'editDialogCreate', {\n                    get: function() {\n                        return that._editDialogCreate();\n                    },\n                    set: function(newValue) {\n                        that._editDialogCreate(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'editDialogKeyDown', {\n                    get: function() {\n                        return that._editDialogKeyDown();\n                    },\n                    set: function(newValue) {\n                        that._editDialogKeyDown(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'editDialogClose', {\n                    get: function() {\n                        return that._editDialogClose();\n                    },\n                    set: function(newValue) {\n                        that._editDialogClose(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'exportSettings', {\n                    get: function() {\n                        return that._exportSettings();\n                    },\n                    set: function(newValue) {\n                        that._exportSettings(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'height', {\n                    get: function() {\n                        return that._height();\n                    },\n                    set: function(newValue) {\n                        that._height(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'legendPosition', {\n                    get: function() {\n                        return that._legendPosition();\n                    },\n                    set: function(newValue) {\n                        that._legendPosition(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'legendHeight', {\n                    get: function() {\n                        return that._legendHeight();\n                    },\n                    set: function(newValue) {\n                        that._legendHeight(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'localization', {\n                    get: function() {\n                        return that._localization();\n                    },\n                    set: function(newValue) {\n                        that._localization(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'min', {\n                    get: function() {\n                        return that._min();\n                    },\n                    set: function(newValue) {\n                        that._min(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'max', {\n                    get: function() {\n                        return that._max();\n                    },\n                    set: function(newValue) {\n                        that._max(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'ready', {\n                    get: function() {\n                        return that._ready();\n                    },\n                    set: function(newValue) {\n                        that._ready(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'renderAppointment', {\n                    get: function() {\n                        return that._renderAppointment();\n                    },\n                    set: function(newValue) {\n                        that._renderAppointment(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'rendering', {\n                    get: function() {\n                        return that._rendering();\n                    },\n                    set: function(newValue) {\n                        that._rendering(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'rendered', {\n                    get: function() {\n                        return that._rendered();\n                    },\n                    set: function(newValue) {\n                        that._rendered(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'rtl', {\n                    get: function() {\n                        return that._rtl();\n                    },\n                    set: function(newValue) {\n                        that._rtl(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'resources', {\n                    get: function() {\n                        return that._resources();\n                    },\n                    set: function(newValue) {\n                        that._resources(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'rowsHeight', {\n                    get: function() {\n                        return that._rowsHeight();\n                    },\n                    set: function(newValue) {\n                        that._rowsHeight(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'showToolbar', {\n                    get: function() {\n                        return that._showToolbar();\n                    },\n                    set: function(newValue) {\n                        that._showToolbar(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'showLegend', {\n                    get: function() {\n                        return that._showLegend();\n                    },\n                    set: function(newValue) {\n                        that._showLegend(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'scrollBarSize', {\n                    get: function() {\n                        return that._scrollBarSize();\n                    },\n                    set: function(newValue) {\n                        that._scrollBarSize(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'source', {\n                    get: function() {\n                        return that._source();\n                    },\n                    set: function(newValue) {\n                        that._source(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'statuses', {\n                    get: function() {\n                        return that._statuses();\n                    },\n                    set: function(newValue) {\n                        that._statuses(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'touchRowsHeight', {\n                    get: function() {\n                        return that._touchRowsHeight();\n                    },\n                    set: function(newValue) {\n                        that._touchRowsHeight(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'theme', {\n                    get: function() {\n                        return that._theme();\n                    },\n                    set: function(newValue) {\n                        that._theme(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'touchAppointmentsMinHeight', {\n                    get: function() {\n                        return that._touchAppointmentsMinHeight();\n                    },\n                    set: function(newValue) {\n                        that._touchAppointmentsMinHeight(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'touchScrollBarSize', {\n                    get: function() {\n                        return that._touchScrollBarSize();\n                    },\n                    set: function(newValue) {\n                        that._touchScrollBarSize(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'timeZone', {\n                    get: function() {\n                        return that._timeZone();\n                    },\n                    set: function(newValue) {\n                        that._timeZone(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'touchDayNameFormat', {\n                    get: function() {\n                        return that._touchDayNameFormat();\n                    },\n                    set: function(newValue) {\n                        that._touchDayNameFormat(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'toolBarRangeFormat', {\n                    get: function() {\n                        return that._toolBarRangeFormat();\n                    },\n                    set: function(newValue) {\n                        that._toolBarRangeFormat(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'toolBarRangeFormatAbbr', {\n                    get: function() {\n                        return that._toolBarRangeFormatAbbr();\n                    },\n                    set: function(newValue) {\n                        that._toolBarRangeFormatAbbr(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'toolbarHeight', {\n                    get: function() {\n                        return that._toolbarHeight();\n                    },\n                    set: function(newValue) {\n                        that._toolbarHeight(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'views', {\n                    get: function() {\n                        return that._views();\n                    },\n                    set: function(newValue) {\n                        that._views(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'view', {\n                    get: function() {\n                        return that._view();\n                    },\n                    set: function(newValue) {\n                        that._view(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(that, 'width', {\n                    get: function() {\n                        return that._width();\n                    },\n                    set: function(newValue) {\n                        that._width(newValue);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n            },\n            __wireEvents__: function () {\n                const that = this;\n\n                JQXLite(this.componentSelector).on('appointmentChange', function (event) { that.$emit('appointmentChange', event); });\n                JQXLite(this.componentSelector).on('appointmentClick', function (event) { that.$emit('appointmentClick', event); });\n                JQXLite(this.componentSelector).on('appointmentDoubleClick', function (event) { that.$emit('appointmentDoubleClick', event); });\n                JQXLite(this.componentSelector).on('appointmentDelete', function (event) { that.$emit('appointmentDelete', event); });\n                JQXLite(this.componentSelector).on('appointmentAdd', function (event) { that.$emit('appointmentAdd', event); });\n                JQXLite(this.componentSelector).on('bindingComplete', function (event) { that.$emit('bindingComplete', event); });\n                JQXLite(this.componentSelector).on('cellClick', function (event) { that.$emit('cellClick', event); });\n                JQXLite(this.componentSelector).on('cellDoubleClick', function (event) { that.$emit('cellDoubleClick', event); });\n                JQXLite(this.componentSelector).on('contextMenuOpen', function (event) { that.$emit('contextMenuOpen', event); });\n                JQXLite(this.componentSelector).on('contextMenuClose', function (event) { that.$emit('contextMenuClose', event); });\n                JQXLite(this.componentSelector).on('contextMenuItemClick', function (event) { that.$emit('contextMenuItemClick', event); });\n                JQXLite(this.componentSelector).on('contextMenuCreate', function (event) { that.$emit('contextMenuCreate', event); });\n                JQXLite(this.componentSelector).on('dateChange', function (event) { that.$emit('dateChange', event); });\n                JQXLite(this.componentSelector).on('editRecurrenceDialogOpen', function (event) { that.$emit('editRecurrenceDialogOpen', event); });\n                JQXLite(this.componentSelector).on('editRecurrenceDialogClose', function (event) { that.$emit('editRecurrenceDialogClose', event); });\n                JQXLite(this.componentSelector).on('editDialogCreate', function (event) { that.$emit('editDialogCreate', event); });\n                JQXLite(this.componentSelector).on('editDialogOpen', function (event) { that.$emit('editDialogOpen', event); });\n                JQXLite(this.componentSelector).on('editDialogClose', function (event) { that.$emit('editDialogClose', event); });\n                JQXLite(this.componentSelector).on('viewChange', function (event) { that.$emit('viewChange', event); });\n            }\n        }\n    }\n</script>\n"]}]}