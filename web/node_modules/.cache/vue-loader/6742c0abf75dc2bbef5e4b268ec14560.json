{"remainingRequest":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\src\\views\\pages\\map\\Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\src\\views\\pages\\map\\Map.vue","mtime":1579486442793},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1579332188909},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1579332241739}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { createProj, addProj, findPointOnSurface, createStyle, createMultiPointGeom, loadingBBox } from 'vuelayers/lib/ol-ext'\r\nconst easeInOut = t => 1 - Math.pow(1 - t, 3)\r\nimport service from '@/service/service'\r\n  export default {\r\n    data () {\r\n      return { \r\n        zoom: 8,\r\n        center: service.center ,\r\n        marker_post:service.center,\r\n        rotation: 0,\r\n        geolocPosition: undefined,\r\n      }\r\n    },\r\n    methods:{\r\n        pointOnSurface: findPointOnSurface,\r\n        onMapPostCompose ({ vectorContext, frameState }) {\r\n            if (!this.$refs.marker || !this.$refs.marker.$feature) return\r\n\r\n            const feature = this.$refs.marker.$feature\r\n            if (!feature.getGeometry() || !feature.getStyle()) return\r\n\r\n            const flashGeom = feature.getGeometry().clone()\r\n            const duration = feature.get('duration')\r\n            const elapsed = frameState.time - feature.get('start')\r\n            const elapsedRatio = elapsed / duration\r\n            const radius = easeInOut(elapsedRatio) * 35 + 5\r\n            const opacity = easeInOut(1 - elapsedRatio)\r\n            const fillOpacity = easeInOut(0.5 - elapsedRatio)\r\n\r\n            vectorContext.setStyle(createStyle({\r\n                imageRadius: radius,\r\n                fillColor: [119, 170, 203, fillOpacity],\r\n                strokeColor: [119, 170, 203, opacity],\r\n                strokeWidth: 2 + opacity,\r\n            }))\r\n\r\n            vectorContext.drawGeometry(flashGeom)\r\n            vectorContext.setStyle(feature.getStyle()(feature)[0])\r\n            vectorContext.drawGeometry(feature.getGeometry())\r\n\r\n            if (elapsed > duration) {\r\n                feature.set('start', Date.now())\r\n            }\r\n\r\n       this.$refs.map.render()\r\n    },\r\n    }\r\n  }\r\n",{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Map.vue","sourceRoot":"src/views/pages/map","sourcesContent":["<template>\r\n  <div style=\"position:relative\">\r\n    <vl-map :load-tiles-while-animating=\"true\"  ref=\"map\" :load-tiles-while-interacting=\"true\"\r\n             data-projection=\"EPSG:4326\" style=\"height: 700px\"  @postcompose=\"onMapPostCompose\">\r\n      <vl-view :zoom.sync=\"zoom\" :center.sync=\"center\" :rotation.sync=\"rotation\"></vl-view>\r\n\r\n\r\n\r\n      <vl-layer-tile id=\"osm\">\r\n        <vl-source-osm></vl-source-osm>\r\n      </vl-layer-tile>\r\n      <vl-layer-tile id=\"osm\">\r\n          <vl-source-osm></vl-source-osm>\r\n      </vl-layer-tile>\r\n\r\n     <vl-feature id=\"marker\" ref=\"marker\" :properties=\"{ start: Date.now(), duration: 1000 }\">\r\n        <template slot-scope=\"feature\">\r\n          <vl-geom-point :coordinates=\"marker_post\"></vl-geom-point>\r\n          <vl-style-box>\r\n            <vl-style-icon :src=\"require('@/assets/flag.png')\" :scale=\"0.5\" :anchor=\"[0.1, 0.95]\" :size=\"[128, 128]\"></vl-style-icon>\r\n          </vl-style-box>\r\n          <!-- overlay binded to feature -->\r\n          <vl-overlay v-if=\"feature.geometry\" :position=\"pointOnSurface(feature.geometry)\" :offset=\"[10, 10]\">\r\n            \r\n          </vl-overlay>\r\n        </template>\r\n      </vl-feature>\r\n\r\n        \r\n    </vl-map>\r\n    <div class=\"map-panel\">\r\n        <div class=\"panel-content\">\r\n            Hello here is tabe\r\n        </div>\r\n    </div>\r\n    <div class=\"fix-nav\">\r\n        <vs-navbar v-model=\"activeItem\" class=\"p-2\">\r\n  \r\n    <div slot=\"title\">\r\n      <vs-navbar-title>\r\n        <span>Vuesax</span>\r\n      </vs-navbar-title>\r\n    </div>\r\n\r\n    <vs-navbar-item index=\"0\">\r\n      <a href=\"#\">Home</a>\r\n    </vs-navbar-item>\r\n\r\n    <vs-navbar-item index=\"1\">\r\n      <a href=\"#\">News</a>\r\n    </vs-navbar-item>\r\n\r\n    <vs-navbar-item index=\"2\">\r\n      <a href=\"#\">Update</a>\r\n    </vs-navbar-item>\r\n  </vs-navbar>\r\n    </div>\r\n \r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { createProj, addProj, findPointOnSurface, createStyle, createMultiPointGeom, loadingBBox } from 'vuelayers/lib/ol-ext'\r\nconst easeInOut = t => 1 - Math.pow(1 - t, 3)\r\nimport service from '@/service/service'\r\n  export default {\r\n    data () {\r\n      return { \r\n        zoom: 8,\r\n        center: service.center ,\r\n        marker_post:service.center,\r\n        rotation: 0,\r\n        geolocPosition: undefined,\r\n      }\r\n    },\r\n    methods:{\r\n        pointOnSurface: findPointOnSurface,\r\n        onMapPostCompose ({ vectorContext, frameState }) {\r\n            if (!this.$refs.marker || !this.$refs.marker.$feature) return\r\n\r\n            const feature = this.$refs.marker.$feature\r\n            if (!feature.getGeometry() || !feature.getStyle()) return\r\n\r\n            const flashGeom = feature.getGeometry().clone()\r\n            const duration = feature.get('duration')\r\n            const elapsed = frameState.time - feature.get('start')\r\n            const elapsedRatio = elapsed / duration\r\n            const radius = easeInOut(elapsedRatio) * 35 + 5\r\n            const opacity = easeInOut(1 - elapsedRatio)\r\n            const fillOpacity = easeInOut(0.5 - elapsedRatio)\r\n\r\n            vectorContext.setStyle(createStyle({\r\n                imageRadius: radius,\r\n                fillColor: [119, 170, 203, fillOpacity],\r\n                strokeColor: [119, 170, 203, opacity],\r\n                strokeWidth: 2 + opacity,\r\n            }))\r\n\r\n            vectorContext.drawGeometry(flashGeom)\r\n            vectorContext.setStyle(feature.getStyle()(feature)[0])\r\n            vectorContext.drawGeometry(feature.getGeometry())\r\n\r\n            if (elapsed > duration) {\r\n                feature.set('start', Date.now())\r\n            }\r\n\r\n       this.$refs.map.render()\r\n    },\r\n    }\r\n  }\r\n</script>\r\n<style lang=\"scss\">\r\n .map-panel {\r\n  position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    width: 22em;\r\n}\r\n.panel-content{\r\n    background:#fff;\r\n    border-radius: 6px;\r\n    -webkit-box-shadow: 0 2px 3px rgba(10,10,10,.1), 0 0 0 1px rgba(10,10,10,.1);\r\n    box-shadow: 0 2px 3px rgba(10,10,10,.1), 0 0 0 1px rgba(10,10,10,.1);\r\n    color: #4a4a4a;\r\n    display: block;\r\n    height:500px;\r\n    padding: 1.25rem;\r\n}\r\n .fix-nav {\r\n  position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    padding:20px;\r\n    width: 100%;\r\n}\r\n</style>"]}]}