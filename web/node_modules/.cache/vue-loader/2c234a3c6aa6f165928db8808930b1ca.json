{"remainingRequest":"D:\\DTC PROJECT\\booking\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DTC PROJECT\\booking\\web\\src\\views\\pages\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DTC PROJECT\\booking\\web\\src\\views\\pages\\Login.vue","mtime":1578637697548},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport service from \"@/service/service\";\nexport default {\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      checkbox_remember_me: false\n    };\n  },\n  computed: {\n    validateForm() {\n      return !this.errors.any() && this.email != \"\" && this.password != \"\";\n    }\n  },\n  methods: {\n    async login() {\n      this.$vs.loading({\n        background: this.backgroundLoading,\n        color: this.colorLoading,\n        container: \"#button-with-loading\",\n        scale: 0.45\n      });\n      try {\n        console.log(result);\n        var result = await service.postData(\"login\", {\n          username: this.username,\n          password: this.password\n        });\n        service.setToken(result.token);\n\n        var { role_name, first_name, last_name } = service.getUser().user;\n        this.$store.dispatch(\"updateUserRole\", role_name);\n        this.$acl.change(role_name);\n        this.$store.dispatch(\"setProfile\", result.img_profile);\n        this.$store.dispatch(\n          \"setDisplayUsername\",\n          first_name + \" \" + last_name\n        );\n        this.$router.push(\"/home\");\n\n        this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\n      } catch (e) {\n        await this.$swal(this.$t(\"Login failed\"), this.$t(e.message), \"error\");\n      }\n      this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\n      // this.$store.dispatch('auth/loginAttempt', payload);\n    }\n  }\n};\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views/pages","sourcesContent":["<!-- =========================================================================================\n    File Name: Login.vue\n    Description: Login Page\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n  <div\n    class=\"h-screen flex w-full bg-img vx-row no-gutter items-center justify-center\"\n    id=\"page-login\"\n  >\n    <div class=\"vx-col sm:w-1/2 md:w-1/2 lg:w-3/4 xl:w-3/5 sm:m-0 m-4\">\n      <vx-card>\n        <div slot=\"no-body\" class=\"full-page-bg-color\">\n          <div class=\"vx-row no-gutter justify-center items-center\">\n            <div class=\"vx-col hidden lg:block lg:w-1/2\">\n              <img src=\"@/assets/images/pages/login.png\" alt=\"login\" class=\"mx-auto\" />\n            </div>\n            <div class=\"vx-col sm:w-full md:w-full lg:w-1/2 d-theme-dark-bg\">\n              <div class=\"p-8\">\n                <div class=\"vx-card__title mb-8\">\n                  <h4 class=\"mb-4\">{{$t('Login')}}</h4>\n                  <p>{{$t('Welcome back, please login to your account.')}}</p>\n                </div>\n                <vs-input\n                  v-validate=\"'required'\"\n                  data-vv-validate-on=\"blur\"\n                  name=\"username\"\n                  icon=\"icon icon-user\"\n                  icon-pack=\"feather\"\n                  label-placeholder=\"username\"\n                  v-model=\"username\"\n                  class=\"w-full no-icon-border\"\n                />\n                <span class=\"text-danger text-sm\">{{ errors.first('username') }}</span>\n\n                <vs-input\n                  data-vv-validate-on=\"blur\"\n                  v-validate=\"'required'\"\n                  type=\"password\"\n                  name=\"password\"\n                  icon=\"icon icon-lock\"\n                  icon-pack=\"feather\"\n                  label-placeholder=\"Password\"\n                  v-model=\"password\"\n                  class=\"w-full mt-6 no-icon-border\"\n                />\n                <span class=\"text-danger text-sm\">{{ errors.first('password') }}</span>\n\n                <br />\n\n                <vs-button\n                  id=\"button-with-loading\"\n                  class=\"vs-con-loading__container right\"\n                  :disabled=\"!validateForm\"\n                  @click=\"login\"\n                >{{$t('Login')}}</vs-button>\n                <br />\n              </div>\n            </div>\n          </div>\n        </div>\n      </vx-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport service from \"@/service/service\";\nexport default {\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      checkbox_remember_me: false\n    };\n  },\n  computed: {\n    validateForm() {\n      return !this.errors.any() && this.email != \"\" && this.password != \"\";\n    }\n  },\n  methods: {\n    async login() {\n      this.$vs.loading({\n        background: this.backgroundLoading,\n        color: this.colorLoading,\n        container: \"#button-with-loading\",\n        scale: 0.45\n      });\n      try {\n        console.log(result);\n        var result = await service.postData(\"login\", {\n          username: this.username,\n          password: this.password\n        });\n        service.setToken(result.token);\n\n        var { role_name, first_name, last_name } = service.getUser().user;\n        this.$store.dispatch(\"updateUserRole\", role_name);\n        this.$acl.change(role_name);\n        this.$store.dispatch(\"setProfile\", result.img_profile);\n        this.$store.dispatch(\n          \"setDisplayUsername\",\n          first_name + \" \" + last_name\n        );\n        this.$router.push(\"/home\");\n\n        this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\n      } catch (e) {\n        await this.$swal(this.$t(\"Login failed\"), this.$t(e.message), \"error\");\n      }\n      this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\n      // this.$store.dispatch('auth/loginAttempt', payload);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n#page-login {\n  .social-login {\n    .bg-facebook {\n      background-color: #1551b1;\n    }\n    .bg-twitter {\n      background-color: #00aaff;\n    }\n    .bg-google {\n      background-color: #4285f4;\n    }\n    .bg-github {\n      background-color: #333;\n    }\n  }\n}\n</style>\n"]}]}