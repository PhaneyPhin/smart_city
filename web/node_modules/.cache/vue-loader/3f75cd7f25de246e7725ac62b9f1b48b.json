{"remainingRequest":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\src\\views\\pages\\map\\Map.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\src\\views\\pages\\map\\Map.vue","mtime":1580020466025},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\css-loader\\index.js","mtime":1579332198977},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1579332241743},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\postcss-loader\\lib\\index.js","mtime":1579332225877},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1579332232707},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1579332241739}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n .map-panel {\n  position: absolute;\n    top: 0;\n    right: 0;\n    width: 22em;\n}\n.panel-content{\n    background:#fff;\n    border-radius: 6px;\n    -webkit-box-shadow: 0 2px 3px rgba(10,10,10,.1), 0 0 0 1px rgba(10,10,10,.1);\n    box-shadow: 0 2px 3px rgba(10,10,10,.1), 0 0 0 1px rgba(10,10,10,.1);\n    color: #4a4a4a;\n    display: block;\n    height:500px;\n    padding: 1.25rem;\n}\n .fix-nav {\n  position: absolute;\n    bottom: 0;\n    right: 0;\n    padding:20px;\n    width: 100%;\n}\n.overlay-content{\n  background:black;\n}\n",{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Map.vue","sourceRoot":"src/views/pages/map","sourcesContent":["<template>\r\n  <div style=\"position:relative\">\r\n    <vl-map :load-tiles-while-animating=\"true\"  ref=\"map\" :load-tiles-while-interacting=\"true\"\r\n             data-projection=\"EPSG:4326\" style=\"height: 100vh;\"  @postcompose=\"onMapPostCompose\" @pointermove=\"onMapPointerMove\">\r\n      <vl-view :zoom.sync=\"zoom\" :center.sync=\"center\" :rotation.sync=\"rotation\"></vl-view>\r\n\r\n\r\n\r\n      <vl-layer-tile id=\"osm\">\r\n        <vl-source-osm></vl-source-osm>\r\n      </vl-layer-tile>\r\n      <vl-layer-tile id=\"osm\">\r\n          <vl-source-osm></vl-source-osm>\r\n      </vl-layer-tile>\r\n      <vl-layer-tile id=\"wms\">\r\n        <vl-source-wms :extParams=\"params\" :url=\"url\" \r\n                        :style-name=\"styleName\" :matrix-set=\"matrixSet\" :format=\"format\" :layers=\"LAYERS\"></vl-source-wms>\r\n      </vl-layer-tile>\r\n     <vl-feature  :properties=\"{ start: Date.now(), duration: 1000 }\">\r\n        <template slot-scope=\"feature\">\r\n          <vl-geom-point :coordinates=\"marker_post\"></vl-geom-point>\r\n          <vl-style-box>\r\n            <vl-style-icon :src=\"require('@/assets/flag.png')\" @click=\"onMarkerClick()\" :scale=\"0.5\" :anchor=\"[0.1, 0.95]\" :size=\"[128, 128]\"></vl-style-icon>\r\n          </vl-style-box>\r\n          <!-- overlay binded to feature -->\r\n          <vl-overlay v-if=\"feature.geometry\" :position=\"pointOnSurface(feature.geometry)\" :offset=\"[10, 10]\">\r\n            \r\n          </vl-overlay>\r\n        </template>\r\n      </vl-feature>\r\n      <vl-feature v-for=\"(item,index) of devices\" :key=\"index\" :properties=\"item.properties\">\r\n        <template slot-scope=\"feature\">\r\n          <vl-geom-point :coordinates=\"[item.lon,item.lat]\"></vl-geom-point>\r\n          <vl-style-box>\r\n            <vl-style-icon :src=\"item.device_icon\" :scale=\"item.size\" :anchor=\"[item.anchor_x,item.anchor_y]\" :size=\"[128, 128]\"></vl-style-icon>\r\n          </vl-style-box>\r\n         <vl-overlay v-if=\"item.properties.show\" :position=\"[item.lon,item.lat]\">\r\n            <template slot-scope=\"scope\">\r\n              <div class=\"overlay-content\">\r\n                <vx-card title=\"Event Alert\">\r\n                    Your device is online currently\r\n                  \r\n                </vx-card>\r\n              </div>\r\n            </template>\r\n      </vl-overlay>\r\n        </template>\r\n      </vl-feature>\r\n\r\n        \r\n    </vl-map>\r\n    <!-- <div class=\"map-panel\">\r\n        <div class=\"panel-content\">\r\n            Hello here is tab\r\n        </div>\r\n    </div> -->\r\n    <div class=\"fix-nav\">\r\n        <vs-navbar v-model=\"activeItem\" class=\"p-2\">\r\n  \r\n    <div slot=\"title\">\r\n      <vs-navbar-title>\r\n        <span>Vuesax</span>\r\n      </vs-navbar-title>\r\n    </div>\r\n\r\n    <vs-navbar-item index=\"0\">\r\n      <a href=\"#\">Home</a>\r\n    </vs-navbar-item>\r\n\r\n    <vs-navbar-item index=\"1\">\r\n      <a href=\"#\">News</a>\r\n    </vs-navbar-item>\r\n\r\n    <vs-navbar-item index=\"2\">\r\n      <a href=\"#\">Update</a>\r\n    </vs-navbar-item>\r\n  </vs-navbar>\r\n    </div>\r\n \r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { createProj, addProj, findPointOnSurface, createStyle, createMultiPointGeom, loadingBBox } from 'vuelayers/lib/ol-ext'\r\nconst easeInOut = t => 1 - Math.pow(1 - t, 3)\r\nimport service from '@/service/service'\r\n  export default {\r\n    data () {\r\n      return { \r\n        zoom: 8,\r\n        center: service.center ,\r\n        marker_post:service.center,\r\n        rotation: 0,\r\n        devices:[],\r\n        geolocPosition: undefined,\r\n        activeitem:0,\r\n         url: 'https://www.deemap.com/DeeMap/gwc/service/wms?customer_key=1xwg5CAuhFz8z2Rw',\r\n        layerName: '0',\r\n        matrixSet: 'EPSG:900913',\r\n        format: 'image/png8',\r\n        styleName: 'default',\r\n        LAYERS: localStorage.getItem(\"lang\") == 'EN' ? \"DeeMap2_THA_Map_EN\" : \"DeeMap2_THA_Map\",\r\n        attribution: 'Tiles Â© <a href=\"https://services.arcgisonline.com/arcgis/rest/' +\r\n                                'services/Demographics/USA_Population_Density/MapServer/\">ArcGIS</a>',\r\n         activeItem:\"\", \r\n        params: {\r\n         \r\n          \"FORMAT\": \"image/png8\",\r\n          \"VERSION\": \"1.1.1\",\r\n          \"SRS\": \"EPSG:900913\",\r\n          \"TILES\": true,\r\n        }\r\n      }\r\n    },\r\n    created(){\r\n      this.getDevice();\r\n    },\r\n    methods:{\r\n      onMapPointerMove: function ({ pixel }) {\r\n        \r\n          let hit = this.$refs.map.forEachFeatureAtPixel(pixel, x => {\r\n            let temp = x.getProperties()\r\n            return temp.index\r\n          });\r\n\r\n          this.devices = this.devices.map(x =>{\r\n            x.properties.show = false\r\n            return x\r\n          })\r\n          if (hit) {\r\n            console.log(hit);\r\n            let filter  = this.devices.map(x => x.properties.index).indexOf(hit)\r\n            this.devices[filter].properties.show = true\r\n          }\r\n        },\r\n      onMarkerClick(){\r\n        this.$swal('clicked','','success');\r\n      },\r\n      async getDevice(){\r\n          var deviceResponse=await this.$service.postData('device/getDevice',{});\r\n          this.devices=deviceResponse.data.map((item,index)=>{\r\n            item.show=false;\r\n            item.properties={index};\r\n            return item;\r\n          });\r\n        },\r\n        pointOnSurface: findPointOnSurface,\r\n        onMapPostCompose ({ vectorContext, frameState }) {\r\n            document.querySelector('canvas').style.filter=\"invert(90%)\"\r\n            if (!this.$refs.marker || !this.$refs.marker.$feature) return\r\n\r\n            const feature = this.$refs.marker.$feature\r\n            if (!feature.getGeometry() || !feature.getStyle()) return\r\n\r\n            const flashGeom = feature.getGeometry().clone()\r\n            const duration = feature.get('duration')\r\n            const elapsed = frameState.time - feature.get('start')\r\n            const elapsedRatio = elapsed / duration\r\n            const radius = easeInOut(elapsedRatio) * 35 + 5\r\n            const opacity = easeInOut(1 - elapsedRatio)\r\n            const fillOpacity = easeInOut(0.5 - elapsedRatio)\r\n\r\n            vectorContext.setStyle(createStyle({\r\n                imageRadius: radius,\r\n                fillColor: [119, 170, 203, fillOpacity],\r\n                strokeColor: [119, 170, 203, opacity],\r\n                strokeWidth: 2 + opacity,\r\n            }))\r\n\r\n            vectorContext.drawGeometry(flashGeom)\r\n            vectorContext.setStyle(feature.getStyle()(feature)[0])\r\n            vectorContext.drawGeometry(feature.getGeometry())\r\n\r\n            if (elapsed > duration) {\r\n                feature.set('start', Date.now())\r\n            }\r\n       \r\n       this.$refs.map.render();\r\n       \r\n    },\r\n    }\r\n  }\r\n</script>\r\n<style lang=\"scss\">\r\n .map-panel {\r\n  position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    width: 22em;\r\n}\r\n.panel-content{\r\n    background:#fff;\r\n    border-radius: 6px;\r\n    -webkit-box-shadow: 0 2px 3px rgba(10,10,10,.1), 0 0 0 1px rgba(10,10,10,.1);\r\n    box-shadow: 0 2px 3px rgba(10,10,10,.1), 0 0 0 1px rgba(10,10,10,.1);\r\n    color: #4a4a4a;\r\n    display: block;\r\n    height:500px;\r\n    padding: 1.25rem;\r\n}\r\n .fix-nav {\r\n  position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    padding:20px;\r\n    width: 100%;\r\n}\r\n.overlay-content{\r\n  background:black;\r\n}\r\n</style>"]}]}