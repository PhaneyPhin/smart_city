{"remainingRequest":"D:\\demo\\vuesax-admin-v3.2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\demo\\vuesax-admin-v3.2\\src\\views\\demo\\File.vue?vue&type=style&index=0&id=28ed3663&lang=scss&scoped=true&","dependencies":[{"path":"D:\\demo\\vuesax-admin-v3.2\\src\\views\\demo\\File.vue","mtime":1567083717275},{"path":"D:\\demo\\vuesax-admin-v3.2\\node_modules\\css-loader\\index.js","mtime":1567052517015},{"path":"D:\\demo\\vuesax-admin-v3.2\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\demo\\vuesax-admin-v3.2\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\demo\\vuesax-admin-v3.2\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\demo\\vuesax-admin-v3.2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\demo\\vuesax-admin-v3.2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.require{\n  color: red;\n}\n\n.danger input {\n  padding: .7rem;\n  font-size: 1rem;\n  border-radius: 5px;\n  border: 1px solid red;\n  color: #626262;\n  width: 100%;\n}\n .error{\n  color:red;\n   font-size:80%;\n}\n.text-center .vs-table-text{\n  text-align: center;\n}\n",{"version":3,"sources":["File.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"File.vue","sourceRoot":"src/views/demo","sourcesContent":["<template >\r\n\r\n  <div class=\"vx-col w-full mb-base\" v-if=\"renderComponent\">\r\n\r\n    <vx-card>\r\n       <vs-tabs>\r\n         <vs-tab label=\"File Data\">\r\n            <div class=\"tab-text\">\r\n              <vs-table pagination max-items=\"10\" search :data=\"files\">\r\n\r\n                    <template slot=\"thead\">\r\n                      <vs-th sort-key=\"username\">{{$t('username')}}</vs-th>\r\n                      <vs-th sort-key=\"file_name\">{{$t('file_name')}}</vs-th>\r\n                      <vs-th sort-key=\"upload_date\">{{$t('upload_date')}}</vs-th>\r\n\r\n\r\n                      <vs-th class=\"text-center\">{{$t(\"download\")}}</vs-th>\r\n                      <vs-th>{{$t(\"delete\")}}</vs-th>\r\n                    </template>\r\n\r\n                    <template slot-scope=\"{data}\">\r\n                      <vs-tr :data=\"tr\" :key=\"index\" v-for=\"(tr, index) in data\">\r\n\r\n                        <vs-td :data=\"tr.username\">\r\n                          {{tr.username}}\r\n                        </vs-td>\r\n\r\n                        <vs-td :data=\"tr.file_name\">\r\n                          {{ tr.file_name }}\r\n                        </vs-td>\r\n\r\n                        <vs-td :data=\"tr.upload_date\">\r\n                          {{ tr.upload_date }}\r\n                        </vs-td>\r\n\r\n\r\n                        <vs-td class=\"text-center\">\r\n                          <feather-icon icon=\"DownloadIcon\" class=\"cursor-pointer w-6 h-6\" size=\"small\" @click=\"download(tr)\"></feather-icon>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                          <feather-icon icon=\"Trash2Icon\" class=\"cursor-pointer w-6 h-6\" size=\"small\" @click=\"delete_file(tr)\"></feather-icon>\r\n                        </vs-td>\r\n                      </vs-tr>\r\n                    </template>\r\n                  </vs-table>\r\n            </div>\r\n          </vs-tab>\r\n          <vs-tab label=\"Upload File\">\r\n            <div class=\"tab-text\">\r\n               <div class=\"vx-row\">\r\n                  <div class=\"vx-col md:w-1/3\">\r\n                    <label for=\"\">choose file</label>\r\n                    <vs-input type=\"file\" @change=\"handleFileUpload($event)\"/>\r\n                  </div>\r\n                  <div class=\"vx-col md:w-1/3\">\r\n                    <div class=\"mt-6\">\r\n                      <vs-button color=\"rgb(62, 201, 214)\" type=\"filled\" @click=\"upload()\">upload</vs-button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n          </vs-tab>\r\n\r\n    </vs-tabs>\r\n\r\n    </vx-card>\r\n\r\n  </div>\r\n  <!-- <button>click</button> -->\r\n</template>\r\n<style lang=\"scss\" scoped>\r\n\r\n  .require{\r\n    color: red;\r\n  }\r\n\r\n  .danger input {\r\n    padding: .7rem;\r\n    font-size: 1rem;\r\n    border-radius: 5px;\r\n    border: 1px solid red;\r\n    color: #626262;\r\n    width: 100%;\r\n  }\r\n   .error{\r\n    color:red;\r\n     font-size:80%;\r\n  }\r\n  .text-center .vs-table-text{\r\n    text-align: center;\r\n  }\r\n</style>\r\n\r\n\r\n<script>\r\nimport Datepicker from 'vuejs-datepicker';\r\nimport service from '@/service/service';\r\n\r\nimport moment from 'moment';\r\n// import firebase from 'firebase/app'à¸§\r\n// import * as firebase from 'firebase/app';\r\n\r\n// import '@firebase/messaging';\r\nexport default {\r\n  components:{\r\n    Datepicker\r\n  },\r\n   data(){\r\n      return {\r\n         'tableList': [\r\n        'vs-th: Component',\r\n        'vs-tr: Component',\r\n        'vs-td: Component',\r\n        'thread: Slot',\r\n        'tbody: Slot',\r\n        'header: Slot'\r\n      ],\r\n      url:`${service.url}/upload_file?username=${service.getUser().username}`,\r\n      popupActive:false,\r\n      renderComponent:true,\r\n      files:[],\r\n      file:\"\"\r\n      }\r\n   },\r\n\r\n   computed:{\r\n      validateForm() {\r\n\r\n        }\r\n   },\r\n   created(){\r\n\r\n    this.get_file();\r\n   },\r\n   methods: {\r\n     get_file(){\r\n        service.postData(\"get_file\",{username:service.getUser().username}).then((result)=>{\r\n       this.files=result.map((item)=>{\r\n         item.upload_date=moment(item.upload_date).format('DD/MM/YYYY HH:mm:ss');\r\n         return item;\r\n       });\r\n     })\r\n\r\n\r\n     },\r\n     forceRerender(){\r\n       this.renderComponent=false;\r\n       this.$nextTick(()=>{\r\n         this.renderComponent=true;\r\n         this.get_file();\r\n       })\r\n     },\r\n     handleFileUpload(e){\r\n        this.file = e.target.files[0];\r\n\r\n      },\r\n      upload(){\r\n       if(this.file!=\"\"){\r\n          // console.log(e);\r\n          let formData = new FormData();\r\n          formData.append('file', this.file);\r\n          service.upload(\"upload_file?username=\"+service.getUser().username,formData).then((result)=>{\r\n            this.$swal('file was uploaded','','success').then((result)=>{\r\n              this.forceRerender();\r\n            });\r\n          })\r\n       }\r\n      },\r\n      successUpload(){\r\n      this.$vs.notify({color:'success',title:'Upload Success',text:'Lorem ipsum dolor sit amet, consectetur'})\r\n    },\r\n    download(file){\r\n      var win = window.open(\"http://localhost:3000/files/\"+file.file_name, '_blank');\r\n      win.focus();\r\n    },\r\n    delete_file(file){\r\n      this.$swal({\r\n          title: 'Are you sure to delete this file?',\r\n          text: \"You won't be able to revert this!\",\r\n          type: 'warning',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          confirmButtonText: 'delete'\r\n        }).then((result) => {\r\n          console.log(result);\r\n          if (result.value) {\r\n            service.postData(\"delete_file\",{file_id:file.file_id}).then((result)=>{\r\n                this.$swal('file was deleted','','success').then((result)=>{\r\n                  this.forceRerender();\r\n                });\r\n              })\r\n          }\r\n      })\r\n\r\n    }\r\n   },\r\n  watch: {\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n"]}]}