{"remainingRequest":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\src\\views\\pages\\devices\\Device.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\src\\views\\pages\\devices\\Device.vue","mtime":1580530451489},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1579332188909},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1579332241739}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport EditUser from '../users/EditUser';\r\nimport service from '@/service/service';\r\nimport AddUser from '../users/AddUser';\r\nimport ChangePassword from '../users/ChangePassword';\r\nimport { createProj, addProj, findPointOnSurface, createStyle, createMultiPointGeom, loadingBBox } from 'vuelayers/lib/ol-ext'\r\nconst easeInOut = t => 1 - Math.pow(1 - t, 3)\r\nexport default {\r\n  components:{\r\n      EditUser,\r\n      ChangePassword,\r\n      AddUser\r\n  },\r\n  data() {\r\n    return {\r\n      submitted:false,\r\n      popupActive:false,\r\n      viewConfig:false,\r\n      editObj:{\r\n           lon:service.center[0],\r\n            lat:service.center[1],\r\n            size:1\r\n      },\r\n      showing_device:{},\r\n      sizes:[],\r\n      configs:[],\r\n      rendermap:false,\r\n      devices:[],\r\n      src_img:\"\",\r\n      device_types:[],\r\n     \r\n      change_password:false,\r\n      roles:[],\r\n      devices:[],\r\n      addUserPopUp:false,\r\n      title:\"Add Device\",\r\n       zoom: 8,\r\n        center: service.center ,\r\n        marker_post:service.center,\r\n        rotation: 0,\r\n        geolocPosition: undefined,\r\n      popupConfig:false,\r\n    };\r\n  },\r\n  computed:{\r\n    \r\n   \r\n  },\r\n  async created(){\r\n     this.getData();\r\n     for(var i=1;i<=40;i++){\r\n       this.sizes.push(i/10);\r\n     }\r\n  },\r\n  methods:{\r\n    edit(tr){\r\n      this.editObj = {...tr};\r\n      this.editObj.password='';\r\n      this.title='Edit Device'\r\n      this.popupActive = true;\r\n      this.$nextTick(()=>{\r\n        this.rendermap=true;\r\n      })\r\n    },\r\n    async delete_device(tr){\r\n      this.$swal({\r\n                title: this.$t(\"Delete this device?\"),\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                icon:'question',\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                cancelButtonText: this.$t(\"cancel\"),\r\n                confirmButtonText: this.$t(\"delete\"),\r\n                showLoaderOnConfirm: true,\r\n                preConfirm: () => {\r\n                return service\r\n                    .postData(\"device/deleteDevice\", { device_id: tr.device_id })\r\n                    .then(result => {\r\n                    return result;\r\n                    });\r\n                }\r\n            }).then(result => {\r\n                if (result.value) {\r\n                if (result.value.code) {\r\n                    this.$swal(this.$t(\"data was deleted\"), \"\", \"success\").then(result => {\r\n                    this.getData();\r\n                    });\r\n                } else {\r\n                    this.$swal(result.value.message, \"\", \"error\");\r\n                }\r\n                }\r\n            });\r\n    },\r\n    async save_config(){\r\n      var obj={};\r\n      this.configs.forEach((item)=>{\r\n          obj[item.name]=item.value;\r\n      })\r\n      obj=JSON.stringify(obj);\r\n\r\n      try{\r\n        var configRespnse=await this.$service.postData('device/updateDeviceConfig',{device_id:this.showing_device.device_id,config:obj});\r\n        if(configRespnse.code==1){\r\n          \r\n          this.viewConfig=false;\r\n          await this.$swal('data was saved!','','success');\r\n\r\n        }else{\r\n          this.viewConfig=false;\r\n          await this.$swal('',configRespnse.message,'error');\r\n        }\r\n      }catch(e){\r\n        console.log(e);\r\n      }\r\n    },\r\n    async getData(){\r\n         try{\r\n            var deviceResponse=await service.postData(\"device/getDevice\",{});\r\n            this.devices=deviceResponse.data;\r\n            var device_typeResponse=await this.$service.postData('device-type/getDeviceType',{});\r\n            this.device_types=device_typeResponse.data;\r\n           \r\n      }catch(e){\r\n          console.log(e);\r\n      }\r\n    },\r\n    async previewFiles(event) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = () => {\r\n        this.editObj.device_icon = reader.result;\r\n      };\r\n    },\r\n    closepopup(){\r\n        this.popupActive=false;\r\n        this.addUserPopUp=false;\r\n        this.getData();\r\n    }\r\n    ,\r\n    addDevice(){\r\n        this.title=\"Add Device\";\r\n        this.editObj={\r\n           device_id:\"\",\r\n           device_name:\"\",\r\n           device_icon:\"\",\r\n           device_type_id:\"\",\r\n            lon:service.center[0],\r\n            lat:service.center[1],\r\n            anchor_x:0.1,\r\n            anchor_y:0.95,\r\n            size:1\r\n        }\r\n        this.$nextTick(()=>{\r\n            this.rendermap=true;\r\n        })\r\n        this.popupActive=true;\r\n\r\n    },\r\n    choose_position(e){\r\n        this.editObj.lon=e.coordinate[0];\r\n        this.editObj.lat=e.coordinate[1];\r\n    },\r\n    save(){\r\n        this.$validator.validateAll().then(async result => {\r\n            if(result){\r\n                var url=\"\";\r\n                if(this.editObj.device_id==\"\"){\r\n                    var result=await this.$service.postData('device/addDevice',this.editObj);\r\n                }else{\r\n                    var result=await this.$service.postData('device/updateDevice',this.editObj);\r\n                }\r\n                \r\n                if(result.code==1){\r\n                        this.$swal(this.$t('data was saved!!'),'','success');\r\n                    }  else{\r\n                        this.$vs.notify({\r\n                            title:'Danger',\r\n                            text:result.message,\r\n                            color:'success'\r\n                        })\r\n                    }   \r\n                this.popupActive=false;\r\n                this.getData();\r\n            }\r\n        });\r\n        \r\n        },\r\n        async addConfig(tr){\r\n          this.viewConfig=true;\r\n          this.showing_device=tr;\r\n          try{\r\n             var configResponse=await this.$service.postData('device/getDeviceConfig',{device_id:tr.device_id});\r\n             if(configResponse.code==1){\r\n               this.configs=configResponse.data;\r\n               console.log(this.configs);\r\n             }else{\r\n               this.viewConfig=false;\r\n               this.$swal('',configResponse.message,'error');\r\n             }\r\n          }catch(e){\r\n            console.log(e);\r\n          }\r\n        },\r\n        parseFloat:parseFloat,\r\n        pointOnSurface: findPointOnSurface,\r\n        onMapPostCompose ({ vectorContext, frameState }) {\r\n            // document.querySelector('canvas').style.filter=\"invert(90%)\"\r\n            if (!this.$refs.marker || !this.$refs.marker.$feature) return\r\n\r\n            const feature = this.$refs.marker.$feature\r\n            if (!feature.getGeometry() || !feature.getStyle()) return\r\n\r\n            const flashGeom = feature.getGeometry().clone()\r\n            const duration = feature.get('duration')\r\n            const elapsed = frameState.time - feature.get('start')\r\n            const elapsedRatio = elapsed / duration\r\n            const radius = easeInOut(elapsedRatio) * 35 + 5\r\n            const opacity = easeInOut(1 - elapsedRatio)\r\n            const fillOpacity = easeInOut(0.5 - elapsedRatio)\r\n\r\n            vectorContext.setStyle(createStyle({\r\n                imageRadius: radius,\r\n                fillColor: [119, 170, 203, fillOpacity],\r\n                strokeColor: [119, 170, 203, opacity],\r\n                strokeWidth: 2 + opacity,\r\n            }))\r\n\r\n            vectorContext.drawGeometry(flashGeom)\r\n            vectorContext.setStyle(feature.getStyle()(feature)[0])\r\n            vectorContext.drawGeometry(feature.getGeometry())\r\n\r\n            if (elapsed > duration) {\r\n                feature.set('start', Date.now())\r\n            }\r\n\r\n       this.$refs.map.render()\r\n    },\r\n    }\r\n}\r\n",{"version":3,"sources":["Device.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"Device.vue","sourceRoot":"src/views/pages/devices","sourcesContent":["<template>\r\n  <vx-card>\r\n    <vs-button color=\"primary\" @click=\"addDevice()\">Add Device</vs-button>\r\n    <vs-table max-items=\"10\" search pagination :data=\"devices\">\r\n      <template slot=\"thead\">\r\n        <vs-th sort-key=\"device_id\">device id</vs-th>\r\n        <vs-th sort-key=\"device_name\">device name</vs-th>\r\n        <vs-th>lat</vs-th>\r\n        <vs-th>lon</vs-th>\r\n        <vs-th>add config</vs-th>\r\n        <vs-th>edit</vs-th>\r\n        <vs-th>delete</vs-th>\r\n      </template>\r\n\r\n      <template slot-scope=\"{data}\">\r\n        <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n          <vs-td :data=\"tr.device_id\">{{ tr.device_id }}</vs-td>\r\n\r\n          <vs-td :data=\"tr.device_name\">{{ tr.device_name }}</vs-td>\r\n          <vs-td :data=\"tr.lat\">{{ tr.lat}}</vs-td>\r\n\r\n          <vs-td :data=\"tr.lon\">{{ tr.lon }}</vs-td>\r\n          <vs-td > \r\n            <feather-icon\r\n              icon=\"EditIcon\"\r\n              class=\"cursor-pointer w-6 h-6 text-warning\"\r\n              size=\"small\"\r\n              @click=\"\r\n                        addConfig(tr)\r\n                      \"\r\n            ></feather-icon>\r\n          </vs-td>\r\n          <vs-td > \r\n            <feather-icon\r\n              icon=\"EditIcon\"\r\n              class=\"cursor-pointer w-6 h-6 text-warning\"\r\n              size=\"small\"\r\n              @click=\"\r\n                        edit(tr)\r\n                      \"\r\n            ></feather-icon>\r\n          </vs-td>\r\n          <vs-td>\r\n            <feather-icon\r\n              icon=\"Trash2Icon\"\r\n              class=\"cursor-pointer w-6 h-6 text-danger\"\r\n              size=\"small\"\r\n              @click=\"delete_device(tr)\"\r\n            ></feather-icon>\r\n          </vs-td>\r\n        </vs-tr>\r\n      </template>\r\n    </vs-table>\r\n    <vs-popup class=\"holamundo\" title=\"View Config\" :active.sync=\"viewConfig\">\r\n          <div class=\"w-full\" v-if=\"configs.length>0\">\r\n            <vs-input v-for=\"(item,index) in configs\" :key=\"index\"\r\n                :label-placeholder=\"item.name\"\r\n                val-icon-warning=\"warning\"\r\n                :name=\"item.name\"\r\n                v-model=\"item.value\"\r\n                class=\"w-full mt-10\"\r\n                icon-pack=\"feather\"\r\n                icon=\"icon-user\"\r\n                icon-no-border\r\n                />\r\n              <div class=\"mt-10\">\r\n                 <vs-button\r\n                        ref=\"loadableButton\"\r\n                        id=\"button-with-loading\"\r\n                        class=\"vs-con-loading__container mr-5 ml-5\"\r\n                        vslor=\"primary\"\r\n                        @click=\"save_config()\"\r\n                    >{{ $t(\"save\") }}</vs-button>\r\n                     <vs-button\r\n                       \r\n                        color=\"danger\"\r\n                        type=\"border\"\r\n                        @click=\"viewConfig = false\"\r\n                    >{{ $t(\"cancel\") }}</vs-button>\r\n                   \r\n                </div>\r\n          </div>\r\n          <div class=\"w-full\" v-if=\"configs.length==0\">\r\n            <div class=\"align-center center\">No config field in this device type</div>\r\n          </div>\r\n    </vs-popup>\r\n    <vs-popup class=\"holamundo\"  fullscreen :title=\"title\" :active.sync=\"popupActive\">\r\n        \r\n        <div class=\"vx-row\">\r\n        <div class='w-full md:w-1/2 mt-10 pl-5'>\r\n             <vs-input\r\n                :warning=\"errors.has('device_name')\"\r\n                :warning-text=\"$t('device name is required')\"\r\n                :label-placeholder=\"$t('device name')\"\r\n                val-icon-warning=\"warning\"\r\n                v-validate=\"'required'\"\r\n                name=\"device_name\"\r\n                v-model=\"editObj.device_name\"\r\n                class=\"w-full\"\r\n                icon-pack=\"feather\"\r\n                icon=\"icon-user\"\r\n                icon-no-border\r\n                />\r\n        </div>\r\n\r\n        <div class=\"w-1/2 md:w-1/4 mt-10 pl-5 pr-5\">\r\n            <vs-input\r\n                :warning=\"errors.has('lat')\"\r\n                :warning-text=\"$t('please select location in map')\"\r\n                :label-placeholder=\"$t('lat')\"\r\n                val-icon-warning=\"warning\"\r\n                v-validate=\"'required'\"\r\n                name=\"lat\"\r\n                v-model=\"editObj.lat\"\r\n                class=\"w-full\"\r\n                icon-pack=\"feather\"\r\n                icon=\"icon-user\"\r\n                icon-no-border\r\n                />\r\n        </div>\r\n        \r\n        <div class=\"w-1/2 md:w-1/4 mt-10 pl-5 pr-5\">\r\n             <vs-input\r\n                :warning=\"errors.has('lon')\"\r\n                :warning-text=\"$t('please select location in map')\"\r\n                :label-placeholder=\"$t('lon')\"\r\n                val-icon-warning=\"warning\"\r\n                v-validate=\"'required'\"\r\n                name=\"lon\"\r\n                v-model=\"editObj.lon\"\r\n                class=\"w-full\"\r\n                icon-pack=\"feather\"\r\n                icon=\"icon-user\"\r\n                icon-no-border\r\n                />\r\n                \r\n        </div>\r\n        </div>\r\n        <div class=\"vx-row\">\r\n            <div class=\"vx-col w-full md:w-1/3 mt-10 mb-10\">\r\n            <div class=\"w-full pb-5\">\r\n                \r\n                \r\n                        <label class=\"mt-10\">device type</label>\r\n                       <vs-select \r\n                            :warning=\"errors.has('device_type')\"\r\n                            :warning-text=\"$t('device type id is required')\"\r\n                            val-icon-warning=\"warning\"\r\n                            v-validate=\"'required'\"\r\n                            name=\"device_type\"\r\n                            class=\"w-full\" v-model=\"editObj.device_type_id\"\r\n                            >\r\n                          <vs-select-item\r\n                            :value=\"item.device_type_id\"\r\n                            :text=\"item.device_type_name\"\r\n                            :key=\"index\"\r\n                            v-for=\"(item,index) of device_types\"\r\n                          />\r\n                      </vs-select>\r\n            </div>\r\n            <label class=\"mt-10\" for>{{ $t(\"device_icon\") }}</label>\r\n            <div class=\"con-upload\" v-if=\"editObj.device_icon == '' || editObj.device_icon == null\">\r\n              <!---->\r\n              <div class=\"con-img-upload\">\r\n                <div class=\"con-input-upload\">\r\n                  <input type=\"file\" @change=\"previewFiles\" ref=\"myFiles\" />\r\n                  <span class=\"text-input\">upload device icon</span>\r\n                  <span class=\"input-progress\" style=\"width: 0%;\"></span>\r\n                  <button\r\n                    disabled=\"disabled\"\r\n                    type=\"button\"\r\n                    title=\"Upload\"\r\n                    class=\"btn-upload-all vs-upload--button-upload\"\r\n                  >\r\n                    <i translate=\"translate\" class=\"material-icons notranslate\">cloud_upload</i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"con-upload\" v-if=\"editObj.device_icon != '' && editObj.device_icon != null\">\r\n              <div class=\"con-img-upload\">\r\n                <div class=\"img-upload\">\r\n                  <button class=\"btn-x-file\" @click=\"editObj.device_icon=''\">\r\n                    <i translate=\"translate\" class=\"material-icons notranslate\">clear</i>\r\n                  </button>\r\n                  <button class=\"btn-upload-file\">\r\n                    <i translate=\"translate\" class=\"material-icons notranslate\">cloud_upload</i>\r\n                    <span>%</span>\r\n                  </button>\r\n                  <img :src=\"editObj.device_icon\" style=\"max-width: none; max-height: 100%;\" />\r\n                  <!---->\r\n                </div>\r\n                <div class=\"con-input-upload disabled-upload\">\r\n                  <input type=\"file\" accept=\"image/*\" disabled=\"disabled\" />\r\n                  <span class=\"text-input\">upload profile picture</span>\r\n                  <span class=\"input-progress\" style=\"width: 0%;\"></span>\r\n                  <button\r\n                    type=\"button\"\r\n                    title=\"Upload\"\r\n                    class=\"btn-upload-all vs-upload--button-upload\"\r\n                  >\r\n                    <i translate=\"translate\" class=\"material-icons notranslate\">cloud_upload</i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"mt-10\">\r\n                <h5>Anchor (value 0-1)</h5>\r\n                <div class=\"vx-row\">\r\n                  <div class=\"w-1/2 pl-5 pr-5\">\r\n                     <vs-input\r\n                        :warning=\"errors.has('anchor_x')\"\r\n                        :warning-text=\"$t(errors.first('anchor_x'))\"\r\n                        :label-placeholder=\"$t('anchor x')\"\r\n                        val-icon-warning=\"warning\"\r\n                        v-validate=\"'required|between:0,1'\"\r\n                        name=\"anchor_x\"\r\n                        v-model=\"editObj.anchor_x\"\r\n                        class=\"w-full\"\r\n                        />\r\n                  </div>\r\n                  <div class=\"w-1/2 pl-5 pr-5\">\r\n                     <vs-input\r\n                        :warning=\"errors.has('anchor_y')\"\r\n                        :warning-text=\"$t(errors.first('anchor_y'))\"\r\n                        :label-placeholder=\"$t('anchor y')\"\r\n                        val-icon-warning=\"warning\"\r\n                        v-validate=\"'required|between:0,1'\"\r\n                        name=\"anchor_y\"\r\n                        v-model=\"editObj.anchor_y\"\r\n                        class=\"w-full\"\r\n                        />\r\n                  </div>\r\n                  <div class=\"w-1/2 pl-5 pr-5\">\r\n                        <label class=\"mt-10\">size</label>\r\n                       <vs-select \r\n                            :warning=\"errors.has('size')\"\r\n                            :warning-text=\"$t('size is required')\"\r\n                            val-icon-warning=\"warning\"\r\n                            v-validate=\"'required'\"\r\n                            name=\"size\"\r\n                            class=\"w-full\" v-model=\"editObj.size\"\r\n                            >\r\n                          <vs-select-item\r\n                            :value=\"item\"\r\n                            :text=\"item\"\r\n                            :key=\"index\"\r\n                            v-for=\"(item,index) of sizes\"\r\n                          />\r\n                      </vs-select>\r\n                  </div>\r\n                 \r\n                \r\n               \r\n                </div>\r\n            </div>\r\n            <div class=\"mt-10\">\r\n                 <vs-button\r\n                        ref=\"loadableButton\"\r\n                        id=\"button-with-loading\"\r\n                        class=\"vs-con-loading__container mr-5 ml-5\"\r\n                        vslor=\"primary\"\r\n                        @click=\"save()\"\r\n                    >{{ $t(\"save\") }}</vs-button>\r\n                     <vs-button\r\n                       \r\n                        color=\"danger\"\r\n                        type=\"border\"\r\n                        @click=\"popupActive = false\"\r\n                    >{{ $t(\"cancel\") }}</vs-button>\r\n                   \r\n                </div>\r\n          </div>\r\n          <div class=\"vx-col w-full md:w-2/3 p-5 \">\r\n            <vl-map v-if=\"rendermap\" :load-tiles-while-animating=\"true\"  ref=\"map\" :load-tiles-while-interacting=\"true\"\r\n             data-projection=\"EPSG:4326\" style=\"height: 700px\"  @postcompose=\"onMapPostCompose\" @click=\"choose_position\">\r\n                <vl-view :zoom.sync=\"zoom\" :center.sync=\"center\" :rotation.sync=\"rotation\"></vl-view>\r\n\r\n\r\n\r\n                <vl-layer-tile id=\"osm\">\r\n                    <vl-source-osm></vl-source-osm>\r\n                </vl-layer-tile>\r\n                <vl-layer-tile id=\"osm\">\r\n                    <vl-source-osm></vl-source-osm>\r\n                </vl-layer-tile>\r\n\r\n                <vl-feature id=\"marker\" ref=\"marker\" :properties=\"{ start: Date.now(), duration: 1000 }\">\r\n                    <template slot-scope=\"feature\">\r\n                    <vl-geom-point :coordinates=\"editObj.lat==''||editObj.lon==''?[0,0]:[parseFloat(editObj.lon),parseFloat(editObj.lat)]\"></vl-geom-point>\r\n                    <vl-style-box>\r\n                        <vl-style-icon :src=\"editObj.device_icon==''?require('@/assets/flag.png'):editObj.device_icon\" :scale=\"editObj.size?editObj.size:1\" :anchor=\"editObj.anchor_x==''||editObj.anchor_y==''?[0.1, 0.95]:[editObj.anchor_x,editObj.anchor_y]\" :size=\"[128, 128]\"></vl-style-icon>\r\n                    </vl-style-box>\r\n                    <!-- overlay binded to feature -->\r\n                    <vl-overlay v-if=\"feature.geometry\" :position=\"pointOnSurface(feature.geometry)\" :offset=\"[10, 10]\">\r\n                        \r\n                    </vl-overlay>\r\n                    </template>\r\n                </vl-feature>\r\n\r\n                    \r\n                </vl-map>\r\n          </div>\r\n        </div>\r\n        \r\n      </vs-popup>\r\n  </vx-card>\r\n</template>\r\n\r\n<script>\r\nimport EditUser from '../users/EditUser';\r\nimport service from '@/service/service';\r\nimport AddUser from '../users/AddUser';\r\nimport ChangePassword from '../users/ChangePassword';\r\nimport { createProj, addProj, findPointOnSurface, createStyle, createMultiPointGeom, loadingBBox } from 'vuelayers/lib/ol-ext'\r\nconst easeInOut = t => 1 - Math.pow(1 - t, 3)\r\nexport default {\r\n  components:{\r\n      EditUser,\r\n      ChangePassword,\r\n      AddUser\r\n  },\r\n  data() {\r\n    return {\r\n      submitted:false,\r\n      popupActive:false,\r\n      viewConfig:false,\r\n      editObj:{\r\n           lon:service.center[0],\r\n            lat:service.center[1],\r\n            size:1\r\n      },\r\n      showing_device:{},\r\n      sizes:[],\r\n      configs:[],\r\n      rendermap:false,\r\n      devices:[],\r\n      src_img:\"\",\r\n      device_types:[],\r\n     \r\n      change_password:false,\r\n      roles:[],\r\n      devices:[],\r\n      addUserPopUp:false,\r\n      title:\"Add Device\",\r\n       zoom: 8,\r\n        center: service.center ,\r\n        marker_post:service.center,\r\n        rotation: 0,\r\n        geolocPosition: undefined,\r\n      popupConfig:false,\r\n    };\r\n  },\r\n  computed:{\r\n    \r\n   \r\n  },\r\n  async created(){\r\n     this.getData();\r\n     for(var i=1;i<=40;i++){\r\n       this.sizes.push(i/10);\r\n     }\r\n  },\r\n  methods:{\r\n    edit(tr){\r\n      this.editObj = {...tr};\r\n      this.editObj.password='';\r\n      this.title='Edit Device'\r\n      this.popupActive = true;\r\n      this.$nextTick(()=>{\r\n        this.rendermap=true;\r\n      })\r\n    },\r\n    async delete_device(tr){\r\n      this.$swal({\r\n                title: this.$t(\"Delete this device?\"),\r\n                type: \"warning\",\r\n                showCancelButton: true,\r\n                icon:'question',\r\n                confirmButtonColor: \"#3085d6\",\r\n                cancelButtonColor: \"#d33\",\r\n                cancelButtonText: this.$t(\"cancel\"),\r\n                confirmButtonText: this.$t(\"delete\"),\r\n                showLoaderOnConfirm: true,\r\n                preConfirm: () => {\r\n                return service\r\n                    .postData(\"device/deleteDevice\", { device_id: tr.device_id })\r\n                    .then(result => {\r\n                    return result;\r\n                    });\r\n                }\r\n            }).then(result => {\r\n                if (result.value) {\r\n                if (result.value.code) {\r\n                    this.$swal(this.$t(\"data was deleted\"), \"\", \"success\").then(result => {\r\n                    this.getData();\r\n                    });\r\n                } else {\r\n                    this.$swal(result.value.message, \"\", \"error\");\r\n                }\r\n                }\r\n            });\r\n    },\r\n    async save_config(){\r\n      var obj={};\r\n      this.configs.forEach((item)=>{\r\n          obj[item.name]=item.value;\r\n      })\r\n      obj=JSON.stringify(obj);\r\n\r\n      try{\r\n        var configRespnse=await this.$service.postData('device/updateDeviceConfig',{device_id:this.showing_device.device_id,config:obj});\r\n        if(configRespnse.code==1){\r\n          \r\n          this.viewConfig=false;\r\n          await this.$swal('data was saved!','','success');\r\n\r\n        }else{\r\n          this.viewConfig=false;\r\n          await this.$swal('',configRespnse.message,'error');\r\n        }\r\n      }catch(e){\r\n        console.log(e);\r\n      }\r\n    },\r\n    async getData(){\r\n         try{\r\n            var deviceResponse=await service.postData(\"device/getDevice\",{});\r\n            this.devices=deviceResponse.data;\r\n            var device_typeResponse=await this.$service.postData('device-type/getDeviceType',{});\r\n            this.device_types=device_typeResponse.data;\r\n           \r\n      }catch(e){\r\n          console.log(e);\r\n      }\r\n    },\r\n    async previewFiles(event) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = () => {\r\n        this.editObj.device_icon = reader.result;\r\n      };\r\n    },\r\n    closepopup(){\r\n        this.popupActive=false;\r\n        this.addUserPopUp=false;\r\n        this.getData();\r\n    }\r\n    ,\r\n    addDevice(){\r\n        this.title=\"Add Device\";\r\n        this.editObj={\r\n           device_id:\"\",\r\n           device_name:\"\",\r\n           device_icon:\"\",\r\n           device_type_id:\"\",\r\n            lon:service.center[0],\r\n            lat:service.center[1],\r\n            anchor_x:0.1,\r\n            anchor_y:0.95,\r\n            size:1\r\n        }\r\n        this.$nextTick(()=>{\r\n            this.rendermap=true;\r\n        })\r\n        this.popupActive=true;\r\n\r\n    },\r\n    choose_position(e){\r\n        this.editObj.lon=e.coordinate[0];\r\n        this.editObj.lat=e.coordinate[1];\r\n    },\r\n    save(){\r\n        this.$validator.validateAll().then(async result => {\r\n            if(result){\r\n                var url=\"\";\r\n                if(this.editObj.device_id==\"\"){\r\n                    var result=await this.$service.postData('device/addDevice',this.editObj);\r\n                }else{\r\n                    var result=await this.$service.postData('device/updateDevice',this.editObj);\r\n                }\r\n                \r\n                if(result.code==1){\r\n                        this.$swal(this.$t('data was saved!!'),'','success');\r\n                    }  else{\r\n                        this.$vs.notify({\r\n                            title:'Danger',\r\n                            text:result.message,\r\n                            color:'success'\r\n                        })\r\n                    }   \r\n                this.popupActive=false;\r\n                this.getData();\r\n            }\r\n        });\r\n        \r\n        },\r\n        async addConfig(tr){\r\n          this.viewConfig=true;\r\n          this.showing_device=tr;\r\n          try{\r\n             var configResponse=await this.$service.postData('device/getDeviceConfig',{device_id:tr.device_id});\r\n             if(configResponse.code==1){\r\n               this.configs=configResponse.data;\r\n               console.log(this.configs);\r\n             }else{\r\n               this.viewConfig=false;\r\n               this.$swal('',configResponse.message,'error');\r\n             }\r\n          }catch(e){\r\n            console.log(e);\r\n          }\r\n        },\r\n        parseFloat:parseFloat,\r\n        pointOnSurface: findPointOnSurface,\r\n        onMapPostCompose ({ vectorContext, frameState }) {\r\n            // document.querySelector('canvas').style.filter=\"invert(90%)\"\r\n            if (!this.$refs.marker || !this.$refs.marker.$feature) return\r\n\r\n            const feature = this.$refs.marker.$feature\r\n            if (!feature.getGeometry() || !feature.getStyle()) return\r\n\r\n            const flashGeom = feature.getGeometry().clone()\r\n            const duration = feature.get('duration')\r\n            const elapsed = frameState.time - feature.get('start')\r\n            const elapsedRatio = elapsed / duration\r\n            const radius = easeInOut(elapsedRatio) * 35 + 5\r\n            const opacity = easeInOut(1 - elapsedRatio)\r\n            const fillOpacity = easeInOut(0.5 - elapsedRatio)\r\n\r\n            vectorContext.setStyle(createStyle({\r\n                imageRadius: radius,\r\n                fillColor: [119, 170, 203, fillOpacity],\r\n                strokeColor: [119, 170, 203, opacity],\r\n                strokeWidth: 2 + opacity,\r\n            }))\r\n\r\n            vectorContext.drawGeometry(flashGeom)\r\n            vectorContext.setStyle(feature.getStyle()(feature)[0])\r\n            vectorContext.drawGeometry(feature.getGeometry())\r\n\r\n            if (elapsed > duration) {\r\n                feature.set('start', Date.now())\r\n            }\r\n\r\n       this.$refs.map.render()\r\n    },\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n</style>"]}]}