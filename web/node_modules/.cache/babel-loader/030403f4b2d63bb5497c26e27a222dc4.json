{"remainingRequest":"D:\\DTC PROJECT\\booking\\web\\node_modules\\thread-loader\\dist\\cjs.js!D:\\DTC PROJECT\\booking\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!D:\\DTC PROJECT\\booking\\web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\DTC PROJECT\\booking\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DTC PROJECT\\booking\\web\\src\\views\\Schedule.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DTC PROJECT\\booking\\web\\src\\views\\Schedule.vue","mtime":1577327973779},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\DTC PROJECT\\\\booking\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport JqxScheduler from \"jqwidgets-scripts/jqwidgets-vue/vue_jqxscheduler.vue\";\nimport service from \"@/service/service\";\nimport { async } from \"q\";\nimport moment from \"moment\";\nexport default {\n  components: {\n    JqxScheduler: JqxScheduler\n  },\n  data: function data() {\n    return {\n      rerender: false,\n      submitted: false,\n      editObj: {\n        building_id: \"\",\n        room_id: \"\"\n      },\n      buildings: [],\n      rooms: [],\n      date: new jqx.date(),\n      source: new jqx.dataAdapter(this.source),\n      resources: {\n        colorScheme: \"scheme05\",\n        dataField: \"calendar\",\n        source: new jqx.dataAdapter(this.source)\n      },\n      appointmentDataFields: {\n        from: \"start\",\n        to: \"end\",\n        id: \"id\",\n        description: \"description\",\n        location: \"place\",\n        subject: \"subject\",\n        resourceId: \"calendar\",\n        background: \"background\"\n      },\n      views: [\"dayView\", \"weekView\", \"monthView\", \"agendaView\"]\n    };\n  },\n  beforeCreate: function () {\n    var _beforeCreate = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var appointments;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.editObj = {\n                building_id: \"\",\n                room_id: \"\"\n              };\n              appointments = new Array();\n              this.source = {\n                dataType: \"array\",\n                dataFields: [{\n                  name: \"id\",\n                  type: \"string\"\n                }, {\n                  name: \"description\",\n                  type: \"string\"\n                }, {\n                  name: \"location\",\n                  type: \"string\"\n                }, {\n                  name: \"subject\",\n                  type: \"string\"\n                }, {\n                  name: \"calendar\",\n                  type: \"string\"\n                }, {\n                  name: \"start\",\n                  type: \"date\"\n                }, {\n                  name: \"end\",\n                  type: \"date\"\n                }, {\n                  name: \"background\",\n                  type: \"string\"\n                }],\n                id: \"id\",\n                localData: appointments\n              };\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function beforeCreate() {\n      return _beforeCreate.apply(this, arguments);\n    };\n  }(),\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      var result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return service.postData(\"building/getBuilding\", {});\n\n            case 2:\n              result = _context2.sent;\n              this.buildings = result.data;\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    return function created() {\n      return _created.apply(this, arguments);\n    };\n  }(),\n  computed: {\n    invalid: function invalid() {\n      var _this = this;\n\n      var require = function require(x) {\n        return _this.editObj[x] == \"\" && _this.submitted;\n      };\n\n      return {\n        building_id: require(\"building_id\"),\n        room_id: require(\"room_id\")\n      };\n    },\n    isInvalid: function isInvalid() {\n      return this.invalid.building_id || this.invalid.room_id;\n    }\n  },\n  mounted: function mounted() {\n    var appointments = new Array();\n    this.schedule(appointments);\n  },\n  methods: {\n    editDialogOpen: function editDialogOpen(dialog, fields, editAppointment) {// this.$refs.myScheduler(\"closeDialog\");\n    },\n    serperateDate: function serperateDate(date) {\n      var year = moment(date, \"YYYY-MM-DD HH:mm:ss\").years();\n      var month = moment(date, \"YYYY-MM-DD HH:mm:ss\").months();\n      var day = moment(date, \"YYYY-MM-DD HH:mm:ss\").dates();\n      var hour = moment(date, \"YYYY-MM-DD HH:mm:ss\").hours();\n      var minute = moment(date, \"YYYY-MM-DD HH:mm:ss\").minutes();\n      var second = moment(date, \"YYYY-MM-DD HH:mm:ss\").seconds();\n      return new Date(year, month, day, hour, minute, second);\n    },\n    search: function () {\n      var _search = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        var respose, bookings, appointments;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.submitted = true;\n\n                if (this.isInvalid) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                _context3.next = 4;\n                return service.postData(\"get_room_booking\", this.editObj);\n\n              case 4:\n                respose = _context3.sent;\n                bookings = respose.data;\n                appointments = new Array();\n                bookings.forEach(function (data) {\n                  // var { year, month, day, hour, minute, second } = this.serperateDate(\n                  //   data.start_date\n                  // );\n                  // var start_date = new Date(year, month, day, hour, minute, second);\n                  // var end = this.serperateDate(\n                  //   data.end_date\n                  // );\n                  // var end_date = new Date(year, month, day, hour, minute, second);\n                  appointments.push({\n                    id: \"id3\",\n                    subject: data.first_name + \" \" + data.last_name + \" : \" + data.subject,\n                    calendar: _this2.editObj.room_id,\n                    start: _this2.serperateDate(data.start_date),\n                    end: _this2.serperateDate(data.end_date),\n                    background: \"#00FF00\"\n                  });\n                });\n                console.log(appointments);\n                this.schedule(appointments);\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function search() {\n        return _search.apply(this, arguments);\n      };\n    }(),\n    schedule: function schedule(data) {\n      var _this3 = this;\n\n      this.rerender = false;\n      this.$nextTick(function () {\n        _this3.rerender = true;\n        _this3.source = {\n          dataType: \"array\",\n          dataFields: [{\n            name: \"id\",\n            type: \"string\"\n          }, {\n            name: \"description\",\n            type: \"string\"\n          }, {\n            name: \"location\",\n            type: \"string\"\n          }, {\n            name: \"subject\",\n            type: \"string\"\n          }, {\n            name: \"calendar\",\n            type: \"string\"\n          }, {\n            name: \"start\",\n            type: \"date\"\n          }, {\n            name: \"end\",\n            type: \"date\"\n          }, {\n            background: \"background\"\n          }],\n          id: \"id\",\n          localData: data\n        };\n        _this3.ource = new jqx.dataAdapter(_this3.source);\n        _this3.resources = {\n          colorScheme: \"scheme05\",\n          dataField: \"calendar\",\n          source: new jqx.dataAdapter(_this3.source)\n        };\n\n        _this3.$nextTick(function () {\n          _this3.$refs.myScheduler.ensureAppointmentVisible(\"id1\");\n        });\n      });\n    }\n  },\n  watch: {\n    \"editObj.building_id\": function () {\n      var _editObjBuilding_id = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(val) {\n        var result;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.editObj.room_id = \"\";\n                _context4.next = 3;\n                return service.postData(\"getRoomByBuilding\", {\n                  building_id: this.editObj.building_id\n                });\n\n              case 3:\n                result = _context4.sent;\n                this.rooms = result.data;\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function editObjBuilding_id(_x) {\n        return _editObjBuilding_id.apply(this, arguments);\n      };\n    }()\n  }\n};",{"version":3,"sources":["Schedule.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"w-full mb-base\">\r\n    <vx-card>\r\n      <h6>{{ $t(\"Schedule Table\") }}</h6>\r\n      <div class=\"vx-row mb-10\">\r\n        <div class=\"vx-col md:w-1/3 sm:w-1/2 w-full mt-6\">\r\n          <label>{{ $t(\"Building\") }}</label>\r\n          <vs-select class=\"w-full\" v-model=\"editObj.building_id\" :danger=\"invalid.building_id\">\r\n            <vs-select-item\r\n              :key=\"index\"\r\n              :value=\"item.building_id\"\r\n              :text=\"$t(item.building_name)\"\r\n              v-for=\"(item, index) in buildings\"\r\n            />\r\n          </vs-select>\r\n          <div class=\"errors\" v-if=\"invalid.building_id\">{{ $t(\"please select the buildign\") }}</div>\r\n        </div>\r\n        <div class=\"vx-col md:w-1/3 sm:w-1/2 w-full mt-6\">\r\n          <label>{{ $t(\"room\") }}</label>\r\n          <vs-select class=\"w-full\" v-model=\"editObj.room_id\" :danger=\"invalid.room_id\">\r\n            <vs-select-item\r\n              :key=\"index\"\r\n              :value=\"item.room_id\"\r\n              :text=\"$t(item.room_name)\"\r\n              v-for=\"(item, index) in rooms\"\r\n            />\r\n          </vs-select>\r\n          <div class=\"errors\" v-if=\"invalid.room_id\">{{ $t(\"please select the room_id\") }}</div>\r\n        </div>\r\n        <div class=\"vx-col md:w-1/3 w-full mt-6\">\r\n          <div class=\"vx-row md:pl-0 md:pr-10 pl-4 pr-4\">\r\n            <vs-button\r\n              ref=\"loadableButton\"\r\n              id=\"button-with-loading\"\r\n              class=\"vs-con-loading__container mt-5 sm:w-1/2 md:w-full lg:w-1/2 w-full\"\r\n              vslor=\"primary\"\r\n              @click=\"search()\"\r\n            >{{ $t(\"search\") }}</vs-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <JqxScheduler\r\n        v-if=\"rerender\"\r\n        ref=\"myScheduler\"\r\n        :date=\"date\"\r\n        width=\"100%\"\r\n        height=\"800\"\r\n        :source=\"source\"\r\n        :view=\"'weekView'\"\r\n        :showLegend=\"true\"\r\n        :resources=\"resources\"\r\n        :appointmentDataFields=\"appointmentDataFields\"\r\n        :views=\"views\"\r\n        :editDialogOpen=\"editDialogOpen\"\r\n        :disabled=\"true\"\r\n        :theme=\"'material'\"\r\n      />\r\n    </vx-card>\r\n  </div>\r\n</template>\r\n<style scoped>\r\n.jqx-fill-state-disabled {\r\n  cursor: default;\r\n  color: #000;\r\n  opacity: 1;\r\n  filter: Alpha(Opacity=45);\r\n}\r\n</style>\r\n<script>\r\nimport JqxScheduler from \"jqwidgets-scripts/jqwidgets-vue/vue_jqxscheduler.vue\";\r\nimport service from \"@/service/service\";\r\nimport { async } from \"q\";\r\nimport moment from \"moment\";\r\nexport default {\r\n  components: {\r\n    JqxScheduler\r\n  },\r\n  data: function() {\r\n    return {\r\n      rerender: false,\r\n      submitted: false,\r\n      editObj: { building_id: \"\", room_id: \"\" },\r\n      buildings: [],\r\n      rooms: [],\r\n      date: new jqx.date(),\r\n      source: new jqx.dataAdapter(this.source),\r\n      resources: {\r\n        colorScheme: \"scheme05\",\r\n        dataField: \"calendar\",\r\n        source: new jqx.dataAdapter(this.source)\r\n      },\r\n      appointmentDataFields: {\r\n        from: \"start\",\r\n        to: \"end\",\r\n        id: \"id\",\r\n        description: \"description\",\r\n        location: \"place\",\r\n        subject: \"subject\",\r\n        resourceId: \"calendar\",\r\n        background: \"background\"\r\n      },\r\n      views: [\"dayView\", \"weekView\", \"monthView\", \"agendaView\"]\r\n    };\r\n  },\r\n  beforeCreate: async function() {\r\n    this.editObj = { building_id: \"\", room_id: \"\" };\r\n    var appointments = new Array();\r\n\r\n    this.source = {\r\n      dataType: \"array\",\r\n      dataFields: [\r\n        { name: \"id\", type: \"string\" },\r\n        { name: \"description\", type: \"string\" },\r\n        { name: \"location\", type: \"string\" },\r\n        { name: \"subject\", type: \"string\" },\r\n        { name: \"calendar\", type: \"string\" },\r\n        { name: \"start\", type: \"date\" },\r\n        { name: \"end\", type: \"date\" },\r\n        { name: \"background\", type: \"string\" }\r\n      ],\r\n      id: \"id\",\r\n      localData: appointments\r\n    };\r\n  },\r\n  async created() {\r\n    var result = await service.postData(\"building/getBuilding\", {});\r\n    this.buildings = result.data;\r\n  },\r\n  computed: {\r\n    invalid() {\r\n      var require = x => this.editObj[x] == \"\" && this.submitted;\r\n      return {\r\n        building_id: require(\"building_id\"),\r\n        room_id: require(\"room_id\")\r\n      };\r\n    },\r\n    isInvalid() {\r\n      return this.invalid.building_id || this.invalid.room_id;\r\n    }\r\n  },\r\n  mounted: function() {\r\n    var appointments = new Array();\r\n    this.schedule(appointments);\r\n  },\r\n  methods: {\r\n    editDialogOpen: function(dialog, fields, editAppointment) {\r\n      // this.$refs.myScheduler(\"closeDialog\");\r\n    },\r\n    serperateDate(date) {\r\n      var year = moment(date, \"YYYY-MM-DD HH:mm:ss\").years();\r\n      var month = moment(date, \"YYYY-MM-DD HH:mm:ss\").months();\r\n      var day = moment(date, \"YYYY-MM-DD HH:mm:ss\").dates();\r\n      var hour = moment(date, \"YYYY-MM-DD HH:mm:ss\").hours();\r\n      var minute = moment(date, \"YYYY-MM-DD HH:mm:ss\").minutes();\r\n      var second = moment(date, \"YYYY-MM-DD HH:mm:ss\").seconds();\r\n      return new Date(year, month, day, hour, minute, second);\r\n    },\r\n    async search() {\r\n      this.submitted = true;\r\n      if (!this.isInvalid) {\r\n        var respose = await service.postData(\"get_room_booking\", this.editObj);\r\n        var bookings = respose.data;\r\n        var appointments = new Array();\r\n        bookings.forEach(data => {\r\n          // var { year, month, day, hour, minute, second } = this.serperateDate(\r\n          //   data.start_date\r\n          // );\r\n          // var start_date = new Date(year, month, day, hour, minute, second);\r\n          // var end = this.serperateDate(\r\n          //   data.end_date\r\n          // );\r\n          // var end_date = new Date(year, month, day, hour, minute, second);\r\n          appointments.push({\r\n            id: \"id3\",\r\n            subject:\r\n              data.first_name + \" \" + data.last_name + \" : \" + data.subject,\r\n            calendar: this.editObj.room_id,\r\n            start: this.serperateDate(data.start_date),\r\n            end: this.serperateDate(data.end_date),\r\n            background: \"#00FF00\"\r\n          });\r\n        });\r\n        console.log(appointments);\r\n        this.schedule(appointments);\r\n      }\r\n    },\r\n    schedule(data) {\r\n      this.rerender = false;\r\n      this.$nextTick(() => {\r\n        this.rerender = true;\r\n        this.source = {\r\n          dataType: \"array\",\r\n          dataFields: [\r\n            { name: \"id\", type: \"string\" },\r\n            { name: \"description\", type: \"string\" },\r\n            { name: \"location\", type: \"string\" },\r\n            { name: \"subject\", type: \"string\" },\r\n            { name: \"calendar\", type: \"string\" },\r\n            { name: \"start\", type: \"date\" },\r\n            { name: \"end\", type: \"date\" },\r\n            { background: \"background\" }\r\n          ],\r\n          id: \"id\",\r\n          localData: data\r\n        };\r\n        this.ource = new jqx.dataAdapter(this.source);\r\n        this.resources = {\r\n          colorScheme: \"scheme05\",\r\n          dataField: \"calendar\",\r\n          source: new jqx.dataAdapter(this.source)\r\n        };\r\n        this.$nextTick(() => {\r\n          this.$refs.myScheduler.ensureAppointmentVisible(\"id1\");\r\n        });\r\n      });\r\n    }\r\n  },\r\n  watch: {\r\n    async \"editObj.building_id\"(val) {\r\n      this.editObj.room_id = \"\";\r\n\r\n      var result = await service.postData(\"getRoomByBuilding\", {\r\n        building_id: this.editObj.building_id\r\n      });\r\n      this.rooms = result.data;\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/views"}]}