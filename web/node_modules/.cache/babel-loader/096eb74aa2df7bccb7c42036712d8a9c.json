{"remainingRequest":"D:\\DTC PROJECT\\booking\\web\\node_modules\\thread-loader\\dist\\cjs.js!D:\\DTC PROJECT\\booking\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!D:\\DTC PROJECT\\booking\\web\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\DTC PROJECT\\booking\\web\\src\\acl\\acl.js","dependencies":[{"path":"D:\\DTC PROJECT\\booking\\web\\src\\acl\\acl.js","mtime":1578624444696},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.promise\";\nimport Vue from 'vue';\nimport { AclInstaller, AclCreate, AclRule } from 'vue-acl';\nimport router from '@/router';\nimport service from '@/service/service';\nVue.use(AclInstaller);\nvar initialRole = 'public';\nvar user = service.getUser();\n\nif (user != \"\") {\n  var role_name = user.user.role_name;\n  initialRole = role_name;\n} else {\n  initialRole = 'public';\n} // alert(initialRole);\n\n\nexport default new AclCreate({\n  initial: initialRole,\n  notfound: '/home',\n  router: router,\n  acceptLocalRules: true,\n  globalRules: {\n    admin: new AclRule('admin').generate(),\n    approver: new AclRule('approver').or('admin').generate(),\n    member: new AclRule('approver').or('admin').or('member').generate(),\n    public: new AclRule('public').or('approver').or('admin').or('member').generate(),\n    notAdmin: new AclRule('approver').generate() // public: new AclRule('public').or('admin').or('editor').generate(),\n\n  }\n});",{"version":3,"sources":["D:\\DTC PROJECT\\booking\\web\\src\\acl\\acl.js"],"names":["Vue","AclInstaller","AclCreate","AclRule","router","service","use","initialRole","user","getUser","role_name","initial","notfound","acceptLocalRules","globalRules","admin","generate","approver","or","member","public","notAdmin"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,OAAlC,QAAiD,SAAjD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACAL,GAAG,CAACM,GAAJ,CAAQL,YAAR;AAEA,IAAIM,WAAW,GAAG,QAAlB;AACA,IAAIC,IAAI,GAAGH,OAAO,CAACI,OAAR,EAAX;;AACA,IAAID,IAAI,IAAI,EAAZ,EAAgB;AAAA,MACRE,SADQ,GACMF,IAAI,CAACA,IADX,CACRE,SADQ;AAEdH,EAAAA,WAAW,GAAGG,SAAd;AACD,CAHD,MAGO;AACLH,EAAAA,WAAW,GAAG,QAAd;AACD,C,CACD;;;AACA,eAAe,IAAIL,SAAJ,CAAc;AAC3BS,EAAAA,OAAO,EAAEJ,WADkB;AAE3BK,EAAAA,QAAQ,EAAE,OAFiB;AAG3BR,EAAAA,MAAM,EAANA,MAH2B;AAI3BS,EAAAA,gBAAgB,EAAE,IAJS;AAK3BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,KAAK,EAAE,IAAIZ,OAAJ,CAAY,OAAZ,EAAqBa,QAArB,EADI;AAEXC,IAAAA,QAAQ,EAAE,IAAId,OAAJ,CAAY,UAAZ,EAAwBe,EAAxB,CAA2B,OAA3B,EAAoCF,QAApC,EAFC;AAGXG,IAAAA,MAAM,EAAE,IAAIhB,OAAJ,CAAY,UAAZ,EAAwBe,EAAxB,CAA2B,OAA3B,EAAoCA,EAApC,CAAuC,QAAvC,EAAiDF,QAAjD,EAHG;AAIXI,IAAAA,MAAM,EAAE,IAAIjB,OAAJ,CAAY,QAAZ,EAAsBe,EAAtB,CAAyB,UAAzB,EAAqCA,EAArC,CAAwC,OAAxC,EAAiDA,EAAjD,CAAoD,QAApD,EAA8DF,QAA9D,EAJG;AAKXK,IAAAA,QAAQ,EAAE,IAAIlB,OAAJ,CAAY,UAAZ,EAAwBa,QAAxB,EALC,CAMX;;AANW;AALc,CAAd,CAAf","sourcesContent":["import Vue from 'vue'\nimport { AclInstaller, AclCreate, AclRule } from 'vue-acl'\nimport router from '@/router'\nimport service from '@/service/service';\nVue.use(AclInstaller)\n\nlet initialRole = 'public';\nvar user = service.getUser();\nif (user != \"\") {\n  var { role_name } = user.user;\n  initialRole = role_name;\n} else {\n  initialRole = 'public'\n}\n// alert(initialRole);\nexport default new AclCreate({\n  initial: initialRole,\n  notfound: '/home',\n  router,\n  acceptLocalRules: true,\n  globalRules: {\n    admin: new AclRule('admin').generate(),\n    approver: new AclRule('approver').or('admin').generate(),\n    member: new AclRule('approver').or('admin').or('member').generate(),\n    public: new AclRule('public').or('approver').or('admin').or('member').generate(),\n    notAdmin: new AclRule('approver').generate()\n    // public: new AclRule('public').or('admin').or('editor').generate(),\n  }\n})\n"]}]}