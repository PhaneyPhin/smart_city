{"remainingRequest":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\src\\views\\pages\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\src\\views\\pages\\Login.vue","mtime":1580272951486},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1579332236814},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1579332188909},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1579332241739}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Sovannarith Phan\\\\Utility_Website\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport service from '@/service/service';\nexport default {\n  data: function data() {\n    return {\n      username: 'demo@demo.com',\n      password: 'demodemo',\n      checkbox_remember_me: false\n    };\n  },\n  computed: {\n    validateForm: function validateForm() {\n      return !this.errors.any() && this.username != '' && this.password != '';\n    }\n  },\n  methods: {\n    login: function () {\n      var _login = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var result, _service$getUser$user, role_name, first_name, last_name;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.$vs.loading({\n                  background: this.backgroundLoading,\n                  color: this.colorLoading,\n                  container: \"#button-with-loading\",\n                  scale: 0.45\n                });\n                _context.prev = 1;\n                console.log(result);\n                _context.next = 5;\n                return service.postData(\"auth/login\", {\n                  username: this.username,\n                  password: this.password\n                });\n\n              case 5:\n                result = _context.sent;\n                service.setToken(result.token);\n\n                if (!(result.code == 1)) {\n                  _context.next = 15;\n                  break;\n                }\n\n                _service$getUser$user = service.getUser().user, role_name = _service$getUser$user.role_name, first_name = _service$getUser$user.first_name, last_name = _service$getUser$user.last_name;\n                this.$store.dispatch(\"updateUserRole\", role_name);\n                this.$acl.change(role_name); // this.$store.dispatch(\"setProfile\", result.img_profile);\n                // this.$store.dispatch(\n                // \"setDisplayUsername\",\n                // first_name + \" \" + last_name\n                // );\n\n                this.$router.push(\"/dashboard/analytics\");\n                this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\n                _context.next = 17;\n                break;\n\n              case 15:\n                _context.next = 17;\n                return this.$swal(this.$t(\"Login failed\"), this.$t(result.message), \"error\");\n\n              case 17:\n                _context.next = 23;\n                break;\n\n              case 19:\n                _context.prev = 19;\n                _context.t0 = _context[\"catch\"](1);\n                _context.next = 23;\n                return this.$swal(this.$t(\"Login failed\"), this.$t(_context.t0.message), \"error\");\n\n              case 23:\n                this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 19]]);\n      }));\n\n      return function login() {\n        return _login.apply(this, arguments);\n      };\n    }(),\n    loginAuth0: function loginAuth0() {\n      if (this.$store.state.auth.isUserLoggedIn()) {\n        this.notifyAlreadyLogedIn();\n        return false;\n      }\n\n      this.$auth.login({\n        target: this.$route.query.to\n      });\n    },\n    // Google login\n    loginWithGoogle: function loginWithGoogle() {\n      this.$store.dispatch('auth/loginWithGoogle', {\n        notify: this.$vs.notify\n      });\n    },\n    // Facebook login\n    loginWithFacebook: function loginWithFacebook() {\n      this.$store.dispatch('auth/loginWithFacebook', {\n        notify: this.$vs.notify\n      });\n    },\n    // Twitter login\n    loginWithTwitter: function loginWithTwitter() {\n      this.$store.dispatch('auth/loginWithTwitter', {\n        notify: this.$vs.notify\n      });\n    },\n    // Github login\n    loginWithGithub: function loginWithGithub() {\n      this.$store.dispatch('auth/loginWithGithub', {\n        notify: this.$vs.notify\n      });\n    },\n    notifyAlreadyLogedIn: function notifyAlreadyLogedIn() {\n      this.$vs.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      });\n    },\n    registerUser: function registerUser() {\n      if (this.$store.state.auth.isUserLoggedIn()) {\n        this.notifyAlreadyLogedIn();\n        return false;\n      }\n\n      this.$router.push('/pages/register');\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\r\n    File Name: Login.vue\r\n    Description: Login Page\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n    <div class=\"h-screen flex w-full bg-img vx-row no-gutter items-center justify-center\" id=\"page-login\">\r\n        <div class=\"vx-col sm:w-1/2 md:w-1/2 lg:w-3/4 xl:w-3/5 sm:m-0 m-4\">\r\n            <vx-card>\r\n                <div slot=\"no-body\" class=\"full-page-bg-color\">\r\n                    <div class=\"vx-row no-gutter justify-center items-center\">\r\n                        <div class=\"vx-col hidden lg:block lg:w-1/2\">\r\n                            <img src=\"@/assets/images/pages/login.png\" alt=\"login\" class=\"mx-auto\">\r\n                        </div>\r\n                        <div class=\"vx-col sm:w-full md:w-full lg:w-1/2 d-theme-dark-bg\">\r\n                            <div class=\"p-8\">\r\n                                <div class=\"vx-card__title mb-8\">\r\n                                    <h4 class=\"mb-4\">Login</h4>\r\n                                    <p>Welcome back, please login to your account.</p>\r\n                                </div>\r\n                                <vs-input\r\n                                    v-validate=\"'required'\"\r\n                                    data-vv-validate-on=\"blur\"\r\n                                    name=\"email\"\r\n                                    icon=\"icon icon-user\"\r\n                                    icon-pack=\"feather\"\r\n                                    label-placeholder=\"username\"\r\n                                    v-model=\"username\"\r\n                                    class=\"w-full no-icon-border\"/>\r\n                                <span class=\"text-danger text-sm\">{{ errors.first('username') }}</span>\r\n\r\n                                <vs-input\r\n                                    data-vv-validate-on=\"blur\"\r\n                                    v-validate=\"'required|min:6|max:10'\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    icon=\"icon icon-lock\"\r\n                                    icon-pack=\"feather\"\r\n                                    label-placeholder=\"Password\"\r\n                                    v-model=\"password\"\r\n                                    class=\"w-full mt-6 no-icon-border\" />\r\n                                <span class=\"text-danger text-sm\">{{ errors.first('password') }}</span>\r\n\r\n                               \r\n                                <vs-button class=\"float-right mb-20 mt-5\" id='button-with-loading' :disabled=\"!validateForm\" @click=\"login\">Login</vs-button>\r\n\r\n\r\n                               \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </vx-card>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport service from '@/service/service';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            username: 'demo@demo.com',\r\n            password: 'demodemo',\r\n            checkbox_remember_me: false\r\n        }\r\n    },\r\n    computed: {\r\n        validateForm() {\r\n            return !this.errors.any() && this.username != '' && this.password != '';\r\n        },\r\n    },\r\n    methods: {\r\n        async login() {\r\n            this.$vs.loading({\r\n                background: this.backgroundLoading,\r\n                color: this.colorLoading,\r\n                container: \"#button-with-loading\",\r\n                scale: 0.45\r\n            });\r\n            try {\r\n                console.log(result);\r\n                var result = await service.postData(\"auth/login\", {\r\n                username: this.username,\r\n                password: this.password\r\n                });\r\n                service.setToken(result.token);\r\n\r\n               if(result.code==1){\r\n                    var { role_name, first_name, last_name } = service.getUser().user;\r\n                    this.$store.dispatch(\"updateUserRole\", role_name);\r\n                    this.$acl.change(role_name);\r\n                    // this.$store.dispatch(\"setProfile\", result.img_profile);\r\n                    // this.$store.dispatch(\r\n                    // \"setDisplayUsername\",\r\n                    // first_name + \" \" + last_name\r\n                    // );\r\n                    this.$router.push(\"/dashboard/analytics\");\r\n\r\n                    this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\r\n               }else{\r\n                    await this.$swal(this.$t(\"Login failed\"), this.$t(result.message), \"error\");\r\n               }\r\n            } catch (e) {\r\n                await this.$swal(this.$t(\"Login failed\"), this.$t(e.message), \"error\");\r\n            }\r\n            this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\r\n        },\r\n\r\n        loginAuth0() {\r\n            if (this.$store.state.auth.isUserLoggedIn()) {\r\n                this.notifyAlreadyLogedIn();\r\n                return false\r\n            }\r\n            this.$auth.login({ target: this.$route.query.to });\r\n        },\r\n\r\n        // Google login\r\n        loginWithGoogle() {\r\n            this.$store.dispatch('auth/loginWithGoogle', {notify: this.$vs.notify})\r\n        },\r\n\r\n        // Facebook login\r\n        loginWithFacebook() {\r\n            this.$store.dispatch('auth/loginWithFacebook', {notify: this.$vs.notify})\r\n        },\r\n\r\n        // Twitter login\r\n        loginWithTwitter() {\r\n            this.$store.dispatch('auth/loginWithTwitter', {notify: this.$vs.notify})\r\n        },\r\n\r\n        // Github login\r\n        loginWithGithub() {\r\n            this.$store.dispatch('auth/loginWithGithub', {notify: this.$vs.notify})\r\n        },\r\n\r\n        notifyAlreadyLogedIn() {\r\n            this.$vs.notify({\r\n                title: 'Login Attempt',\r\n                text: 'You are already logged in!',\r\n                iconPack: 'feather',\r\n                icon: 'icon-alert-circle',\r\n                color: 'warning'\r\n            });\r\n        },\r\n        registerUser() {\r\n            if(this.$store.state.auth.isUserLoggedIn()) {\r\n                this.notifyAlreadyLogedIn();\r\n                return false;\r\n            }\r\n            this.$router.push('/pages/register');\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#page-login {\r\n    .social-login {\r\n        .bg-facebook {\r\n          background-color: #1551b1;\r\n        }\r\n        .bg-twitter {\r\n          background-color: #00aaff;\r\n        }\r\n        .bg-google {\r\n          background-color: #4285F4;\r\n        }\r\n        .bg-github {\r\n          background-color: #333;\r\n        }\r\n    }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/pages"}]}