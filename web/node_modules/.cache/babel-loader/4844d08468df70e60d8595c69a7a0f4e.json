{"remainingRequest":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\src\\views\\pages\\TestResize.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\src\\views\\pages\\TestResize.vue","mtime":1580192141096},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1579332188909},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\Utility_Website\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1579332241739}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Sovannarith Phan\\\\Utility_Website\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\Sovannarith Phan\\\\Utility_Website\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/defineProperty\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ListChart from \"./ListChart\";\nimport { Validator } from \"vee-validate\";\nimport service from \"@/service/service\";\nimport ChartOptions from '@/service/chartsOption';\nvar dict = {\n  custom: {\n    chart_title: {\n      required: \"Please enter chart name\",\n      alpha: \"Your first name may only contain alphabetic characters\"\n    },\n    chart_name: {\n      required: \"Please enter your last name\",\n      alpha: \"Your last name may only contain alphabetic characters\"\n    }\n  }\n};\nexport default {\n  components: {\n    \"list-chart\": ListChart\n  },\n  data: function data() {\n    var _ref;\n\n    return _ref = {\n      chart_name: \"\",\n      chart_title: \"\",\n      popupActive: false,\n      chart_type: \"\",\n      chart_types: [],\n      devices: [],\n      columns: [[]],\n      select1: \"\"\n    }, _defineProperty(_ref, \"columns\", []), _defineProperty(_ref, \"device\", \"\"), _defineProperty(_ref, \"column_name\", \"\"), _defineProperty(_ref, \"list_series\", []), _ref;\n  },\n  computed: {},\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var deviceResponse;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // var chartTypeResponse = await service.postData(\n              //   \"dashboard/getchart_type\",\n              //   {}\n              // );\n              console.log(ChartOptions);\n              this.chart_types = ChartOptions.map(function (item, index) {\n                return {\n                  chart_type_id: index,\n                  chart_type_name: item.type_name\n                };\n              });\n              _context.next = 4;\n              return service.postData('device/getDeviceTest', {});\n\n            case 4:\n              deviceResponse = _context.sent;\n              this.devices = deviceResponse.data;\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function created() {\n      return _created.apply(this, arguments);\n    };\n  }(),\n  methods: {\n    addDashboard: function addDashboard() {\n      this.popupActive = true; // this.$store.dispatch(\"push_list_charts\", { title: \"Hello world\" });\n    },\n    submitForm: function submitForm() {\n      var _this = this;\n\n      this.$validator.validateAll().then(function (result) {\n        if (result) {\n          // if form have no errors\n          _this.$store.dispatch(\"push_list_charts\", {\n            chart_title: _this.chart_title,\n            chart_name: _this.chart_name,\n            chart_type_id: _this.chart_type,\n            width: 500,\n            height: 300,\n            x: 0,\n            y: 300,\n            series: _this.list_series.map(function (item) {\n              return {\n                device_id: item.device_id,\n                column_name: item.column_name\n              };\n            })\n          });\n\n          _this.popupActive = false;\n        } else {// form have errors\n        }\n      });\n    },\n    removeSerie: function removeSerie() {\n      if (this.list_series.length > 0) {\n        this.list_series.pop();\n      }\n    },\n    onDeviceChange: function () {\n      var _onDeviceChange = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(index) {\n        var columResponse;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return service.postData('device/getFieldDevice', {\n                  device_id: this.list_series[index].device_id\n                });\n\n              case 2:\n                columResponse = _context2.sent;\n                this.list_series[index].columns = columResponse.data;\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function onDeviceChange(_x) {\n        return _onDeviceChange.apply(this, arguments);\n      };\n    }(),\n    addSeries: function addSeries() {\n      this.list_series.push({\n        device_id: \"\",\n        column_name: \"\",\n        columns: []\n      });\n    }\n  },\n  watch: {\n    equipment: function () {\n      var _equipment = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(val) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function equipment(_x2) {\n        return _equipment.apply(this, arguments);\n      };\n    }()\n  }\n};",{"version":3,"sources":["TestResize.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"w-full\" style=\"text-align:right\">\r\n      <vs-button color=\"primary\" @click=\"addDashboard()\">add dashboard</vs-button>\r\n    </div>\r\n    <list-chart />\r\n\r\n    <vs-popup class title=\"Chart Description\" :active.sync=\"popupActive\">\r\n      <form>\r\n        <vs-input\r\n          :warning=\"errors.has('chart_title')\"\r\n          :warning-text=\"$t('chart title is required')\"\r\n          :label-placeholder=\"$t('chart title')\"\r\n          val-icon-warning=\"warning\"\r\n          v-validate=\"'required'\"\r\n          name=\"chart_title\"\r\n          v-model=\"chart_title\"\r\n          class=\"w-full mt-5\"\r\n          icon-pack=\"feather\"\r\n          icon=\"icon-user\"\r\n          icon-no-border\r\n        />\r\n        <vs-input\r\n          :warning=\"errors.has('chart_name')\"\r\n          :warning-text=\"$t('chart name is required')\"\r\n          :label-placeholder=\"$t('chart name')\"\r\n          val-icon-warning=\"warning\"\r\n          v-validate=\"'required'\"\r\n          name=\"chart_name\"\r\n          v-model=\"chart_name\"\r\n          class=\"w-full mt-5\"\r\n          icon-pack=\"feather\"\r\n          icon=\"icon-user\"\r\n          icon-no-border\r\n        />\r\n        <div class=\"mt-5\">\r\n            <label >please select the chart</label>\r\n            <select\r\n              name=\"chart_type\"\r\n              class=\"vs-inputx vs-input--input normal\"\r\n              v-validate=\"'required'\"\r\n              v-model=\"chart_type\"\r\n            >\r\n              <option\r\n              \r\n                v-for=\"(item,index) in chart_types\"\r\n                :value=\"item.chart_type_id\"\r\n                :key=\"index\"\r\n              >{{item.chart_type_name}}</option>/>\r\n              <!-- <vs-select-item :value=\"2\" :text=\"$t('Bar Chart')\" /> -->\r\n            </select>\r\n\r\n        </div>\r\n        <div class=\"mt-5\"></div>\r\n        \r\n        <div class=\"mt-5 vx-row pl-5 pr-5\">\r\n          <vs-button type=\"filled\" @click.prevent=\"addSeries()\" class=\"mt-5 block\">Add Serie</vs-button>\r\n          <vs-button type=\"filled\" color=\"danger\" @click.prevent=\"removeSerie()\" class=\"mt-5 ml-5 block\">remove one</vs-button>\r\n        </div>\r\n        <div v-for=\"(serie,index_serie) of list_series\" :key=\"index_serie\" class=\"pl-10 pr-10\">\r\n            <div class=\"mt-5\">\r\n            <label >Device</label>\r\n            <select\r\n              name=\"chart_type\"\r\n              class=\"vs-inputx vs-input--input normal\"\r\n              v-validate=\"'required'\"\r\n              v-model=\"serie.device_id\"\r\n              @change=\"onDeviceChange(index_serie)\"\r\n            >\r\n              <option\r\n              \r\n                v-for=\"(item,index) in devices\"\r\n                :value=\"item.device_id\"\r\n                :key=\"index\"\r\n              >{{item.device_name}}({{item.device_id}})</option>/>\r\n              <!-- <vs-select-item :value=\"2\" :text=\"$t('Bar Chart')\" /> -->\r\n            </select>\r\n          </div>\r\n            <label >Column</label>\r\n            <select\r\n              name=\"chart_type\"\r\n              class=\"vs-inputx vs-input--input normal\"\r\n              v-validate=\"'required'\"\r\n              v-model=\"serie.column_name\"\r\n            >\r\n              <option\r\n              \r\n                v-for=\"(item,index) in serie.columns\"\r\n                :value=\"item.column_name\"\r\n                :key=\"index\"\r\n              >{{item.column_name}}</option>/>\r\n              <!-- <vs-select-item :value=\"2\" :text=\"$t('Bar Chart')\" /> -->\r\n          </select>\r\n        </div>\r\n        <vs-button type=\"filled\" @click.prevent=\"submitForm\" class=\"mt-5 block\">Submit</vs-button>\r\n      </form>\r\n    </vs-popup>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ListChart from \"./ListChart\";\r\nimport { Validator } from \"vee-validate\";\r\nimport service from \"@/service/service\";\r\nimport ChartOptions from '@/service/chartsOption'\r\nconst dict = {\r\n  custom: {\r\n    chart_title: {\r\n      required: \"Please enter chart name\",\r\n      alpha: \"Your first name may only contain alphabetic characters\"\r\n    },\r\n    chart_name: {\r\n      required: \"Please enter your last name\",\r\n      alpha: \"Your last name may only contain alphabetic characters\"\r\n    }\r\n  }\r\n};\r\nexport default {\r\n  components: {\r\n    \"list-chart\": ListChart\r\n  },\r\n  data: function() {\r\n    return {\r\n      chart_name: \"\",\r\n      chart_title: \"\",\r\n      popupActive: false,\r\n      chart_type:\"\",\r\n      chart_types: [],\r\n      devices:[],\r\n      columns:[[]],\r\n      select1:\"\",\r\n      columns:[],\r\n      device:\"\",\r\n      column_name:\"\",\r\n      list_series:[]\r\n    };\r\n  },\r\n  computed: {},\r\n  async created() {\r\n    // var chartTypeResponse = await service.postData(\r\n    //   \"dashboard/getchart_type\",\r\n    //   {}\r\n    // );\r\n    console.log(ChartOptions);\r\n    this.chart_types = ChartOptions.map((item,index)=>{\r\n      return {chart_type_id:index,chart_type_name:item.type_name};\r\n    });\r\n    var deviceResponse=await service.postData('device/getDeviceTest',{});\r\n    this.devices=deviceResponse.data;\r\n\r\n\r\n  },\r\n  methods: {\r\n    addDashboard() {\r\n      this.popupActive = true;\r\n\r\n      // this.$store.dispatch(\"push_list_charts\", { title: \"Hello world\" });\r\n    },\r\n    submitForm() {\r\n      this.$validator.validateAll().then(result => {\r\n        if (result) {\r\n          // if form have no errors\r\n\r\n          this.$store.dispatch(\"push_list_charts\", {\r\n            chart_title: this.chart_title,\r\n            chart_name: this.chart_name,\r\n            chart_type_id: this.chart_type,\r\n             width:500,\r\n             height:300,\r\n             x:0,\r\n             y:300,\r\n            series:this.list_series.map((item)=>{\r\n              return {\r\n                device_id:item.device_id,\r\n                column_name:item.column_name\r\n               \r\n              }\r\n            })\r\n          });\r\n          this.popupActive = false;\r\n        } else {\r\n          // form have errors\r\n        }\r\n      });\r\n    },\r\n    removeSerie(){\r\n      if(this.list_series.length>0){\r\n        this.list_series.pop();\r\n      }\r\n    },\r\n    async onDeviceChange(index){\r\n      // alert(index)\r\n      var columResponse=await service.postData('device/getFieldDevice',{device_id:this.list_series[index].device_id});\r\n      this.list_series[index].columns=columResponse.data;\r\n    },\r\n    addSeries(){\r\n      this.list_series.push({device_id:\"\",column_name:\"\",columns:[]})\r\n    },\r\n    // async onEquipmentChange(index){\r\n    //   // alert(index)\r\n    //   console.log(this.list_series[index]);\r\n    //  var columResponse=await service.postData('equipment/getFieldEquipment',{device_id:this.list_series[index].equipment});\r\n    //   this.list_series[index].columns=columResponse.data;\r\n      \r\n    // }\r\n  },\r\n  watch:{\r\n    async equipment(val){\r\n      \r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\niframe {\r\n  border: 1px solid black;\r\n  width: 500px;\r\n  height: 500px;\r\n}\r\n\r\n.output {\r\n  background: #eee;\r\n}\r\n.span-text-validation-warning {\r\n  color: rgba(255, 159, 67, 1) !important;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/pages"}]}