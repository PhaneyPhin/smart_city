{"remainingRequest":"D:\\DTC PROJECT\\booking\\web\\node_modules\\thread-loader\\dist\\cjs.js!D:\\DTC PROJECT\\booking\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!D:\\DTC PROJECT\\booking\\web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\DTC PROJECT\\booking\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\DTC PROJECT\\booking\\web\\src\\views\\pages\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\DTC PROJECT\\booking\\web\\src\\views\\pages\\Login.vue","mtime":1578637697548},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\DTC PROJECT\\booking\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\DTC PROJECT\\\\booking\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport service from \"@/service/service\";\nexport default {\n  data: function data() {\n    return {\n      username: \"\",\n      password: \"\",\n      checkbox_remember_me: false\n    };\n  },\n  computed: {\n    validateForm: function validateForm() {\n      return !this.errors.any() && this.email != \"\" && this.password != \"\";\n    }\n  },\n  methods: {\n    login: function () {\n      var _login = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var result, _service$getUser$user, role_name, first_name, last_name;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.$vs.loading({\n                  background: this.backgroundLoading,\n                  color: this.colorLoading,\n                  container: \"#button-with-loading\",\n                  scale: 0.45\n                });\n                _context.prev = 1;\n                console.log(result);\n                _context.next = 5;\n                return service.postData(\"login\", {\n                  username: this.username,\n                  password: this.password\n                });\n\n              case 5:\n                result = _context.sent;\n                service.setToken(result.token);\n                _service$getUser$user = service.getUser().user, role_name = _service$getUser$user.role_name, first_name = _service$getUser$user.first_name, last_name = _service$getUser$user.last_name;\n                this.$store.dispatch(\"updateUserRole\", role_name);\n                this.$acl.change(role_name);\n                this.$store.dispatch(\"setProfile\", result.img_profile);\n                this.$store.dispatch(\"setDisplayUsername\", first_name + \" \" + last_name);\n                this.$router.push(\"/home\");\n                this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\n                _context.next = 20;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](1);\n                _context.next = 20;\n                return this.$swal(this.$t(\"Login failed\"), this.$t(_context.t0.message), \"error\");\n\n              case 20:\n                this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\"); // this.$store.dispatch('auth/loginAttempt', payload);\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 16]]);\n      }));\n\n      return function login() {\n        return _login.apply(this, arguments);\n      };\n    }()\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA,OAAA,OAAA,MAAA,mBAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,oBAAA,EAAA;AAHA,KAAA;AAKA,GAPA;AAQA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,aAAA,CAAA,KAAA,MAAA,CAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,EAAA,IAAA,KAAA,QAAA,IAAA,EAAA;AACA;AAHA,GARA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,KADA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEA,qBAAA,GAAA,CAAA,OAAA,CAAA;AACA,kBAAA,UAAA,EAAA,KAAA,iBADA;AAEA,kBAAA,KAAA,EAAA,KAAA,YAFA;AAGA,kBAAA,SAAA,EAAA,sBAHA;AAIA,kBAAA,KAAA,EAAA;AAJA,iBAAA;AAFA;AASA,gBAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AATA;AAAA,uBAUA,OAAA,CAAA,QAAA,CAAA,OAAA,EAAA;AACA,kBAAA,QAAA,EAAA,KAAA,QADA;AAEA,kBAAA,QAAA,EAAA,KAAA;AAFA,iBAAA,CAVA;;AAAA;AAUA,gBAAA,MAVA;AAcA,gBAAA,OAAA,CAAA,QAAA,CAAA,MAAA,CAAA,KAAA;AAdA,wCAgBA,OAAA,CAAA,OAAA,GAAA,IAhBA,EAgBA,SAhBA,yBAgBA,SAhBA,EAgBA,UAhBA,yBAgBA,UAhBA,EAgBA,SAhBA,yBAgBA,SAhBA;AAiBA,qBAAA,MAAA,CAAA,QAAA,CAAA,gBAAA,EAAA,SAAA;AACA,qBAAA,IAAA,CAAA,MAAA,CAAA,SAAA;AACA,qBAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA,MAAA,CAAA,WAAA;AACA,qBAAA,MAAA,CAAA,QAAA,CACA,oBADA,EAEA,UAAA,GAAA,GAAA,GAAA,SAFA;AAIA,qBAAA,OAAA,CAAA,IAAA,CAAA,OAAA;AAEA,qBAAA,GAAA,CAAA,OAAA,CAAA,KAAA,CAAA,wCAAA;AA1BA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,uBA4BA,KAAA,KAAA,CAAA,KAAA,EAAA,CAAA,cAAA,CAAA,EAAA,KAAA,EAAA,CAAA,YAAA,OAAA,CAAA,EAAA,OAAA,CA5BA;;AAAA;AA8BA,qBAAA,GAAA,CAAA,OAAA,CAAA,KAAA,CAAA,wCAAA,EA9BA,CA+BA;;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA,CAAA","sourcesContent":["<!-- =========================================================================================\n    File Name: Login.vue\n    Description: Login Page\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n  <div\n    class=\"h-screen flex w-full bg-img vx-row no-gutter items-center justify-center\"\n    id=\"page-login\"\n  >\n    <div class=\"vx-col sm:w-1/2 md:w-1/2 lg:w-3/4 xl:w-3/5 sm:m-0 m-4\">\n      <vx-card>\n        <div slot=\"no-body\" class=\"full-page-bg-color\">\n          <div class=\"vx-row no-gutter justify-center items-center\">\n            <div class=\"vx-col hidden lg:block lg:w-1/2\">\n              <img src=\"@/assets/images/pages/login.png\" alt=\"login\" class=\"mx-auto\" />\n            </div>\n            <div class=\"vx-col sm:w-full md:w-full lg:w-1/2 d-theme-dark-bg\">\n              <div class=\"p-8\">\n                <div class=\"vx-card__title mb-8\">\n                  <h4 class=\"mb-4\">{{$t('Login')}}</h4>\n                  <p>{{$t('Welcome back, please login to your account.')}}</p>\n                </div>\n                <vs-input\n                  v-validate=\"'required'\"\n                  data-vv-validate-on=\"blur\"\n                  name=\"username\"\n                  icon=\"icon icon-user\"\n                  icon-pack=\"feather\"\n                  label-placeholder=\"username\"\n                  v-model=\"username\"\n                  class=\"w-full no-icon-border\"\n                />\n                <span class=\"text-danger text-sm\">{{ errors.first('username') }}</span>\n\n                <vs-input\n                  data-vv-validate-on=\"blur\"\n                  v-validate=\"'required'\"\n                  type=\"password\"\n                  name=\"password\"\n                  icon=\"icon icon-lock\"\n                  icon-pack=\"feather\"\n                  label-placeholder=\"Password\"\n                  v-model=\"password\"\n                  class=\"w-full mt-6 no-icon-border\"\n                />\n                <span class=\"text-danger text-sm\">{{ errors.first('password') }}</span>\n\n                <br />\n\n                <vs-button\n                  id=\"button-with-loading\"\n                  class=\"vs-con-loading__container right\"\n                  :disabled=\"!validateForm\"\n                  @click=\"login\"\n                >{{$t('Login')}}</vs-button>\n                <br />\n              </div>\n            </div>\n          </div>\n        </div>\n      </vx-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport service from \"@/service/service\";\nexport default {\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      checkbox_remember_me: false\n    };\n  },\n  computed: {\n    validateForm() {\n      return !this.errors.any() && this.email != \"\" && this.password != \"\";\n    }\n  },\n  methods: {\n    async login() {\n      this.$vs.loading({\n        background: this.backgroundLoading,\n        color: this.colorLoading,\n        container: \"#button-with-loading\",\n        scale: 0.45\n      });\n      try {\n        console.log(result);\n        var result = await service.postData(\"login\", {\n          username: this.username,\n          password: this.password\n        });\n        service.setToken(result.token);\n\n        var { role_name, first_name, last_name } = service.getUser().user;\n        this.$store.dispatch(\"updateUserRole\", role_name);\n        this.$acl.change(role_name);\n        this.$store.dispatch(\"setProfile\", result.img_profile);\n        this.$store.dispatch(\n          \"setDisplayUsername\",\n          first_name + \" \" + last_name\n        );\n        this.$router.push(\"/home\");\n\n        this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\n      } catch (e) {\n        await this.$swal(this.$t(\"Login failed\"), this.$t(e.message), \"error\");\n      }\n      this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\n      // this.$store.dispatch('auth/loginAttempt', payload);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n#page-login {\n  .social-login {\n    .bg-facebook {\n      background-color: #1551b1;\n    }\n    .bg-twitter {\n      background-color: #00aaff;\n    }\n    .bg-google {\n      background-color: #4285f4;\n    }\n    .bg-github {\n      background-color: #333;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/views/pages"}]}