{"remainingRequest":"C:\\Users\\Sovannarith Phan\\smart_city\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Sovannarith Phan\\smart_city\\web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Sovannarith Phan\\smart_city\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Sovannarith Phan\\smart_city\\web\\src\\views\\pages\\ListChartItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Sovannarith Phan\\smart_city\\web\\src\\views\\pages\\ListChartItem.vue","mtime":1580809095235},{"path":"C:\\Users\\Sovannarith Phan\\smart_city\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\smart_city\\web\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1579332188909},{"path":"C:\\Users\\Sovannarith Phan\\smart_city\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1579332194156},{"path":"C:\\Users\\Sovannarith Phan\\smart_city\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":1579332241739}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"C:\\\\Users\\\\Sovannarith Phan\\\\smart_city\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/objectSpread\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Sovannarith Phan\\\\smart_city\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import * as Highcharts from \"highcharts\";\nimport service from \"@/service/service\";\nimport Highcharts from 'highcharts';\nimport stockInit from 'highcharts/modules/stock';\nimport ListCharts from '@/service/chartsOption'; // stockInit(Highcharts)\n\nstockInit(Highcharts);\nexport default {\n  props: {\n    index: {\n      type: Number,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      i: 0,\n      width: 500,\n      height: 400,\n      disabled: false,\n      x: 0,\n      rerender: true,\n      y: 300,\n      title: this.$store.state.list_charts[this.index].chart_title,\n      rerendercomponent: true,\n      resize: false,\n      array_event: [],\n      chartOptions: {}\n    };\n  },\n  computed: {\n    styles: function styles() {\n      return {\n        card1: {\n          height: this.height + \"px\"\n        }\n      };\n    },\n    charts: function charts() {\n      return this.$store.state.list_charts[this.index];\n    }\n  },\n  beforeMount: function beforeMount() {\n    var chart = this.$store.state.list_charts[this.index];\n    this.width = chart.width;\n    this.height = chart.height;\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function created() {\n      return _created.apply(this, arguments);\n    };\n  }(),\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      var _this = this;\n\n      var chart_type_id, me, connection;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.chartOptions = {};\n              console.log(this.chartOptions); //console.log(this.$refs)\n\n              chart_type_id = this.charts.chart_type_id;\n              this.chartOptions = _objectSpread({}, ListCharts[chart_type_id].option);\n              this.rerendercomponent = false;\n              this.$nextTick(function () {\n                _this.rerendercomponent = true;\n              });\n              me = this; //console.log(chart_type_id)\n\n              if (chart_type_id == 0) {\n                //console.log(1111)\n                connection = new WebSocket(this.$service.socket_host);\n\n                connection.onopen = function () {//console.log('connecting')\n                };\n\n                connection.onmessage = function (message) {\n                  var data = JSON.parse(message.data); //console.log(data.device_id, data);\n\n                  _this.charts.series.forEach(function (item, index) {\n                    if (item.device_id == 'data_test1') {// //console.log(this.chartOptions.device0.series);\n                      // this.chartOptions.series[0].data= [[this.chartOptions.series[0].data[0][0]==3?4:3]]\n                    } else {//console.log(11);\n                      }\n\n                    if (item.device_id == data.device_id) {\n                      _this.chartOptions.series[0].data = [[data[item.column_name]]];\n                      console.log('data', _this.chartOptions.series[0].data);\n                    } else {}\n                  }); // if(data.device_id==item.device_id){\n                  //   //console.log(item.column_name,data[item.column_name])\n                  //    me.chartOptions.series[0].data=[[data[item.column_name]]];\n                  // }\n\n                }; //  this.charts.series.forEach((item,index)=>{\n                //     //console.log(this.$store.state.array_event.indexOf('add'+item.device_id+item.column_name))\n                //     var connection = new WebSocket(`${this.$service.socket_host}?device_id=${item.device_id}&columns=${item.column_name}`);\n                //       connection.onopen=function(){\n                //         //console.log('connecting')\n                //       }\n                //       connection.onerror = function (error) {\n                //         //console.log(`can't connnect to websocket server`);\n                //       };\n                //       connection.onmessage =  (message)=> {\n                //         var data=(JSON.parse(message.data));\n                //         //console.log(data.device_id,item.column_name);\n                //         if(data.device_id==item.device_id){\n                //           //console.log(item.column_name,data[item.column_name])\n                //            me.chartOptions.series[0].data=[[data[item.column_name]]];\n                //         }\n                //         // point.update(newVal);\n                //     }\n                //  });\n\n              }\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    return function mounted() {\n      return _mounted.apply(this, arguments);\n    };\n  }(),\n  beforeDestroy: function beforeDestroy() {\n    var array_event = this.array_event;\n  },\n  methods: {\n    onResize: function onResize(x, y, width, height) {\n      var _this2 = this;\n\n      //console.log({ x, y, width, height });\n      if (this.chartOptions.chart == undefined) {\n        this.chartOptions.chart = {};\n      }\n\n      this.chartOptions.chart.height = height;\n      this.rerendercomponent = false;\n\n      var chart = _objectSpread({}, this.$store.state.list_charts[this.index]);\n\n      chart.width = width;\n      chart.height = height;\n      chart.x = x;\n      chart.y = y;\n      this.$store.dispatch('update_list_chart', {\n        index: this.index,\n        obj: chart\n      });\n      this.$nextTick(function () {\n        _this2.rerendercomponent = true;\n      });\n    },\n    onDrag: function onDrag(x, y) {//console.log(x, y);\n    },\n    onResizeStartCallback: function onResizeStartCallback(handle, ev) {\n      return !this.disabled;\n    },\n    onDragStartCallback: function onDragStartCallback(handle, ev) {\n      return !this.disabled;\n    }\n  }\n};",{"version":3,"sources":["ListChartItem.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <vue-draggable-resizable\r\n    :w=\"charts.width\"\r\n    :h=\"charts.height\"\r\n    @dragging=\"onDrag\"\r\n    @resizing=\"onResize\"\r\n    :resizeable=\"resize\"\r\n    :parent=\"false\"\r\n    :onResizeStart=\"onResizeStartCallback\"\r\n    :onDragStart=\"onDragStartCallback\"\r\n  >\r\n    <div class=\"vx-card h-full\">\r\n      <highcharts ref=\"chart\" :key='index' :options=\"chartOptions\" v-if=\"rerendercomponent\"></highcharts>\r\n    </div>\r\n  </vue-draggable-resizable>\r\n</template>\r\n\r\n<script>\r\n// import * as Highcharts from \"highcharts\";\r\nimport service from \"@/service/service\";\r\nimport Highcharts from 'highcharts'\r\nimport stockInit from 'highcharts/modules/stock'\r\nimport ListCharts from '@/service/chartsOption'\r\n// stockInit(Highcharts)\r\n\r\nstockInit(Highcharts);\r\nexport default {\r\n  props: {\r\n    index: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  data: function() {\r\n    return {\r\n      i: 0,\r\n      width: 500,\r\n      height: 400,\r\n      disabled:false,\r\n      x: 0,\r\n      rerender:true,\r\n      y: 300,\r\n      title: this.$store.state.list_charts[this.index].chart_title,\r\n      rerendercomponent: true,\r\n      resize: false,\r\n      array_event:[],\r\n      chartOptions: {}\r\n    };\r\n  },\r\n  computed: {\r\n    styles() {\r\n      return {\r\n        card1: {\r\n          height: this.height + \"px\"\r\n        }\r\n      };\r\n    },\r\n    charts() {\r\n      \r\n      return this.$store.state.list_charts[this.index];\r\n    }\r\n  },\r\n  beforeMount(){\r\n    var chart=this.$store.state.list_charts[this.index];\r\n    this.width=chart.width;\r\n    this.height=chart.height;\r\n  },\r\n  async created() {\r\n      //console.log('compoent created');\r\n      \r\n  },\r\n  async mounted() {\r\n    this.chartOptions={};\r\n    console.log(this.chartOptions);\r\n    //console.log(this.$refs)\r\n    var chart_type_id=this.charts.chart_type_id;\r\n    this.chartOptions={...ListCharts[chart_type_id].option};\r\n    this.rerendercomponent=false;\r\n    this.$nextTick(() => {\r\n        this.rerendercomponent = true;\r\n      });\r\n    var me=this;\r\n    //console.log(chart_type_id)\r\n   if(chart_type_id==0){\r\n        //console.log(1111)\r\n          var connection = new WebSocket(this.$service.socket_host);\r\n          connection.onopen=function(){\r\n                //console.log('connecting')\r\n          }\r\n              connection.onmessage =  (message)=> {\r\n                var data=(JSON.parse(message.data));\r\n                //console.log(data.device_id, data);\r\n                this.charts.series.forEach((item,index)=>{\r\n                  if(item.device_id=='data_test1'){\r\n                    // //console.log(this.chartOptions.device0.series);\r\n                    \r\n                    // this.chartOptions.series[0].data= [[this.chartOptions.series[0].data[0][0]==3?4:3]]\r\n                  }else{\r\n                    //console.log(11);\r\n                   \r\n                  }\r\n                  if(item.device_id==data.device_id){\r\n                    this.chartOptions.series[0].data=[[data[item.column_name]]];\r\n                    console.log('data',this.chartOptions.series[0].data)\r\n                  }else{\r\n\r\n                  }\r\n                })\r\n                // if(data.device_id==item.device_id){\r\n                //   //console.log(item.column_name,data[item.column_name])\r\n                //    me.chartOptions.series[0].data=[[data[item.column_name]]];\r\n                // }\r\n                \r\n               \r\n           \r\n            }\r\n        //  this.charts.series.forEach((item,index)=>{\r\n        //     //console.log(this.$store.state.array_event.indexOf('add'+item.device_id+item.column_name))\r\n        //     var connection = new WebSocket(`${this.$service.socket_host}?device_id=${item.device_id}&columns=${item.column_name}`);\r\n        //       connection.onopen=function(){\r\n        //         //console.log('connecting')\r\n        //       }\r\n        //       connection.onerror = function (error) {\r\n        //         //console.log(`can't connnect to websocket server`);\r\n        //       };\r\n        //       connection.onmessage =  (message)=> {\r\n        //         var data=(JSON.parse(message.data));\r\n        //         //console.log(data.device_id,item.column_name);\r\n        //         if(data.device_id==item.device_id){\r\n        //           //console.log(item.column_name,data[item.column_name])\r\n        //            me.chartOptions.series[0].data=[[data[item.column_name]]];\r\n        //         }\r\n                \r\n               \r\n        //         // point.update(newVal);\r\n        //     }\r\n        //  });\r\n\r\n    }\r\n    \r\n\r\n  },\r\n  beforeDestroy(){\r\n    var array_event=this.array_event;\r\n\r\n  \r\n  },\r\n  methods: {\r\n    onResize: function(x, y, width, height) {\r\n      //console.log({ x, y, width, height });\r\n      if (this.chartOptions.chart == undefined) {\r\n        this.chartOptions.chart = {};\r\n      }\r\n      this.chartOptions.chart.height = height;\r\n      this.rerendercomponent = false;\r\n       var chart={...this.$store.state.list_charts[this.index]};\r\n       chart.width=width;\r\n       chart.height=height;\r\n       chart.x=x;\r\n       chart.y=y;\r\n      this.$store.dispatch('update_list_chart',{\r\n        index:this.index,\r\n        obj:chart\r\n      })\r\n      this.$nextTick(() => {\r\n        this.rerendercomponent = true;\r\n      });\r\n    },\r\n    onDrag: function(x, y) {\r\n      //console.log(x, y);\r\n    },\r\n    onResizeStartCallback(handle, ev) {\r\n      return !this.disabled;\r\n    },\r\n    onDragStartCallback(handle,ev){\r\n      return !this.disabled;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.vdr {\r\n  -ms-touch-action: none;\r\n  touch-action: none;\r\n  border: none;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/pages"}]}